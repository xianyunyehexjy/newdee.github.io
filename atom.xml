<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>阁子</title>
  <icon>https://www.gravatar.com/avatar/be6761fa57d07130f36573544aec0ba3</icon>
  <subtitle>约同舟何今已只，定双栖羌中道析</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://newdee.cf/"/>
  <updated>2017-10-29T16:00:28.614Z</updated>
  <id>http://newdee.cf/</id>
  
  <author>
    <name>Newdee</name>
    <email>stebest@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>楼赛</title>
    <link href="http://newdee.cf/posts/c72229d1/"/>
    <id>http://newdee.cf/posts/c72229d1/</id>
    <published>2017-10-28T18:30:31.000Z</published>
    <updated>2017-10-29T16:00:28.614Z</updated>
    
    <content type="html"><![CDATA[<p>这几天登录了下实验楼，看到有个楼赛，然后就参加了，这里记录一下。<br>虽然一直用Linux，但是基本没专门去上过之类的课，最早还是智能信息课的实验机房里搭Hadoop用到的，然后还挺喜欢的，以至于后来卸了Win把笔记本装了Ubuntu，用的开源软件，也没有盗版的困扰了。<br><a id="more"></a><br>呐，就是这样说的，当然没打算拿奖，里面高手估计多得是，所以也是求个体验。</p><p><center><br><img src="https://gitee.com/uploads/images/2017/1029/023541_4f4b78ee_1449449.png" alt=""><br></center><br>楼赛一共有三期，虽然比较简单，不过比较实用，太难的屠龙之术也就没啥必要丢出来以论轩轾了。  </p><h2 id="第一期-备份日志文件"><a href="#第一期-备份日志文件" class="headerlink" title="第一期 备份日志文件"></a>第一期 备份日志文件</h2><p>描述如下:<br><img src="https://gitee.com/uploads/images/2017/1029/024538_8b8b9f34_1449449.png" alt=""><br>这个就是写个每天自动备份打包完成任务的脚本，不过里面不让写脚本，这个里面虽然说了，但是还是花了很多时间才放弃写脚本。  </p><h3 id="时间输出"><a href="#时间输出" class="headerlink" title="时间输出"></a>时间输出</h3><p>首先是要获得当前时间，以确定两点开始备份。通常是使用<code>date</code>命令。<br>首先查看一下date的参数:<br><figure class="highlight sqf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"> $ ▶ <span class="built_in">date</span> --help</div><div class="line">Usage: <span class="built_in">date</span> [OPTION]... [+<span class="built_in">FORMAT</span>]</div><div class="line">  <span class="built_in">or</span>:  <span class="built_in">date</span> [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]</div><div class="line">Display the current <span class="built_in">time</span> <span class="built_in">in</span> the given <span class="built_in">FORMAT</span>, <span class="built_in">or</span> <span class="built_in">set</span> the system <span class="built_in">date</span>.</div><div class="line"></div><div class="line">Mandatory arguments <span class="keyword">to</span> long options are mandatory <span class="keyword">for</span> short options too.</div><div class="line">  -d, --<span class="built_in">date</span>=STRING          display <span class="built_in">time</span> described by STRING, <span class="built_in">not</span> <span class="string">'now'</span></div><div class="line">  -f, --file=DATEFILE        like --<span class="built_in">date</span>; once <span class="keyword">for</span> each line of DATEFILE</div><div class="line">  -I[FMT], --iso-<span class="number">8601</span>[=FMT]  output <span class="built_in">date</span>/<span class="built_in">time</span> <span class="built_in">in</span> ISO <span class="number">8601</span> <span class="built_in">format</span>.</div><div class="line">                               FMT=<span class="string">'date'</span> <span class="keyword">for</span> <span class="built_in">date</span> only (the <span class="keyword">default</span>),</div><div class="line">                               <span class="string">'hours'</span>, <span class="string">'minutes'</span>, <span class="string">'seconds'</span>, <span class="built_in">or</span> <span class="string">'ns'</span></div><div class="line">                               <span class="keyword">for</span> <span class="built_in">date</span> <span class="built_in">and</span> <span class="built_in">time</span> <span class="keyword">to</span> the indicated <span class="built_in">precision</span>.</div><div class="line">                               Example: <span class="number">2006</span>-<span class="number">08</span>-<span class="number">14</span>T02:<span class="number">34</span>:<span class="number">56</span>-<span class="number">0600</span></div><div class="line">  -R, --rfc-<span class="number">2822</span>             output <span class="built_in">date</span> <span class="built_in">and</span> <span class="built_in">time</span> <span class="built_in">in</span> RFC <span class="number">2822</span> <span class="built_in">format</span>.</div><div class="line">                               Example: Mon, <span class="number">14</span> Aug <span class="number">2006</span> <span class="number">02</span>:<span class="number">34</span>:<span class="number">56</span> -<span class="number">0600</span></div><div class="line">      --rfc-<span class="number">3339</span>=FMT         output <span class="built_in">date</span>/<span class="built_in">time</span> <span class="built_in">in</span> RFC <span class="number">3339</span> <span class="built_in">format</span>.</div><div class="line">                               FMT=<span class="string">'date'</span>, <span class="string">'seconds'</span>, <span class="built_in">or</span> <span class="string">'ns'</span></div><div class="line">                               <span class="keyword">for</span> <span class="built_in">date</span> <span class="built_in">and</span> <span class="built_in">time</span> <span class="keyword">to</span> the indicated <span class="built_in">precision</span>.</div><div class="line">                               Example: <span class="number">2006</span>-<span class="number">08</span>-<span class="number">14</span> <span class="number">02</span>:<span class="number">34</span>:<span class="number">56</span>-<span class="number">06</span>:<span class="number">00</span></div><div class="line">  -r, --reference=FILE       display the last modification <span class="built_in">time</span> of FILE</div><div class="line">  -s, --<span class="built_in">set</span>=STRING           <span class="built_in">set</span> <span class="built_in">time</span> described by STRING</div><div class="line">  -u, --utc, --universal     print <span class="built_in">or</span> <span class="built_in">set</span> Coordinated Universal <span class="built_in">Time</span> (UTC)</div><div class="line">      --help     display this help <span class="built_in">and</span> <span class="keyword">exit</span></div><div class="line">      --version  output version information <span class="built_in">and</span> <span class="keyword">exit</span></div></pre></td></tr></table></figure></p><p>后面比较多就不贴了，主要是获取年月日，好给打包文件命名。<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">date</span> +%y%m%d</div><div class="line"><span class="number">171029</span></div></pre></td></tr></table></figure></p><p>能获取出来这一步基本就OK了。</p><h3 id="自动化任务"><a href="#自动化任务" class="headerlink" title="自动化任务"></a>自动化任务</h3><p>使用cron命令实现自动化。<br>首先编辑crontab文件，在其中加入执行时间和执行命令，即备份并打包文件。<br>比较简单，就直接贴代码了:<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">crontab -e</div><div class="line"><span class="number">0</span> <span class="number">2</span> <span class="number">0</span> * * * <span class="built_in">mkdir</span> /home/shiyanlou/backup &amp;&amp; tar -cvf  /<span class="built_in">var</span>/<span class="built_in">log</span>/dpkg.<span class="built_in">log</span> /<span class="built_in">var</span>/<span class="built_in">log</span>/mysql.<span class="built_in">log</span> /<span class="built_in">var</span>/<span class="built_in">log</span>/fontconfig.<span class="built_in">log</span> $(date +<span class="built_in">%y</span>-<span class="built_in">%m</span>-%d).tar</div></pre></td></tr></table></figure></p><h2 id="第二期-批量创建删除用户和组"><a href="#第二期-批量创建删除用户和组" class="headerlink" title="第二期 批量创建删除用户和组"></a>第二期 批量创建删除用户和组</h2><p>描述如下:<br><img src="https://gitee.com/uploads/images/2017/1029/024845_e30611e9_1449449.png" alt=""><br><img src="https://gitee.com/uploads/images/2017/1029/024855_48f993ad_1449449.png" alt=""><br>批量创建删除用户和组，按照里面的要求，大概是创建一个脚本，可以实现创建和删除用户的功能，输入为四个参数，对于已经创建的用户显示星号。</p><h3 id="确保输入正确"><a href="#确保输入正确" class="headerlink" title="确保输入正确"></a>确保输入正确</h3><p>输入正确包括</p><ul><li>学生数量正确</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -ne <span class="number">4</span> ]</div><div class="line">then</div><div class="line">echo <span class="string">"parameter"</span></div><div class="line"><span class="keyword">exit</span></div><div class="line">fi</div></pre></td></tr></table></figure><ul><li>参数数目正确</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> [ <span class="variable">$4</span> -lt <span class="number">1</span> ] || [ <span class="variable">$4</span> -gt <span class="number">10</span> ]</div><div class="line">then</div><div class="line">echo <span class="string">"parameter error"</span></div><div class="line"><span class="keyword">exit</span></div><div class="line">fi</div></pre></td></tr></table></figure><ul><li>功能参数正确<br>即必须是<code>del</code>或者<code>add</code>参数，即删除或者添加用户组。可以最后加个<code>else</code>处理这个部分。</li></ul><h3 id="随机数的生成"><a href="#随机数的生成" class="headerlink" title="随机数的生成"></a>随机数的生成</h3><p>一共要生成六位随机数，虽说linux自带RANDOM，但是都是小于等于五位数的，且不能确保多少位，所以使用<code>urandom</code>来获取随机数。<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tr -cd <span class="number">0</span><span class="number">-9</span> &lt;/dev/urandom | head -c <span class="number">6</span></div></pre></td></tr></table></figure></p><p>大致思路是这样，然后贴代码了。<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -ne <span class="number">4</span> ]</div><div class="line">then</div><div class="line">echo <span class="string">"parameter"</span></div><div class="line"><span class="keyword">exit</span></div><div class="line">fi</div><div class="line"><span class="keyword">if</span> [ <span class="variable">$4</span> -lt <span class="number">1</span> ] || [ <span class="variable">$4</span> -gt <span class="number">10</span> ]</div><div class="line">then</div><div class="line">echo <span class="string">"parameter error"</span></div><div class="line"><span class="keyword">exit</span></div><div class="line">elif [ <span class="variable">$1</span> == <span class="string">"add"</span> ]</div><div class="line">then</div><div class="line">id <span class="variable">$2</span> &gt;&amp; <span class="regexp">/dev/</span>null</div><div class="line"><span class="keyword">if</span> [ $? -ne <span class="number">0</span> ]</div><div class="line">then</div><div class="line">pw=`tr -cd <span class="number">0</span>-<span class="number">9</span> &lt;<span class="regexp">/dev/u</span>random | head -c <span class="number">6</span>`</div><div class="line">sudo useradd -s <span class="regexp">/bin/</span>zsh <span class="variable">$2</span> -p <span class="variable">$pw</span></div><div class="line">ss=<span class="string">"#$2ALL=(ALL:ALL) ALL"</span></div><div class="line">echo <span class="variable">$ss</span></div><div class="line">sudo sh -c <span class="string">"echo $ss &gt;&gt; /etc/sudoers"</span></div><div class="line">sudo usermod -aG sudo <span class="variable">$2</span></div><div class="line">echo <span class="variable">$2</span>:<span class="variable">$pw</span></div><div class="line"><span class="keyword">else</span></div><div class="line">echo <span class="variable">$2</span>:******</div><div class="line">fi</div><div class="line"><span class="keyword">for</span> stu <span class="keyword">in</span> `seq <span class="number">1</span> <span class="variable">$4</span>`</div><div class="line"><span class="keyword">do</span></div><div class="line">id <span class="variable">$3</span><span class="variable">$stu</span> &gt;&amp; <span class="regexp">/dev/</span>null</div><div class="line"><span class="keyword">if</span> [ $? -ne <span class="number">0</span> ]</div><div class="line">then</div><div class="line">pw=`tr -cd <span class="number">0</span>-<span class="number">9</span> &lt;<span class="regexp">/dev/u</span>random | head -c <span class="number">6</span>`</div><div class="line">echo <span class="variable">$3</span><span class="variable">$stu</span>:<span class="variable">$pw</span></div><div class="line">sudo useradd -s <span class="regexp">/bin/</span>zsh -p <span class="variable">$pw</span> <span class="variable">$3</span><span class="variable">$stu</span></div><div class="line"><span class="keyword">else</span></div><div class="line">echo <span class="variable">$3</span><span class="variable">$stu</span>:******</div><div class="line">fi</div><div class="line">done</div><div class="line">elif [ <span class="variable">$1</span> == <span class="string">"del"</span> ]</div><div class="line">then</div><div class="line">sudo userdel <span class="variable">$2</span></div><div class="line"><span class="keyword">for</span> stu <span class="keyword">in</span> `seq <span class="number">1</span> <span class="variable">$4</span>`</div><div class="line"><span class="keyword">do</span></div><div class="line">sudo userdel <span class="variable">$3</span><span class="variable">$stu</span></div><div class="line">done</div><div class="line"><span class="keyword">else</span></div><div class="line">echo <span class="string">"parameter error"</span></div><div class="line"><span class="keyword">exit</span></div><div class="line">fi</div></pre></td></tr></table></figure></p><h2 id="第三期-获取系统信息"><a href="#第三期-获取系统信息" class="headerlink" title="第三期 获取系统信息"></a>第三期 获取系统信息</h2><p>描述如下:<br><img src="https://gitee.com/uploads/images/2017/1029/025103_1dd335be_1449449.png" alt=""><br>获取系统信息，包括系统各部分硬件信息和软件信息。</p><h3 id="CPU信息"><a href="#CPU信息" class="headerlink" title="CPU信息"></a>CPU信息</h3><p>CPU信息可以通过查看Linux的cpuinfo获取，不过并没有直接给出CPU数量，虽然可以直接看出。<br>这里通过把processor的数量加1得到<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo <span class="string">"cpu num: "</span>$(<span class="keyword">grep</span> processor <span class="regexp">/proc/</span>cpuinfo | wc -l)</div></pre></td></tr></table></figure></p><h3 id="内存信息"><a href="#内存信息" class="headerlink" title="内存信息"></a>内存信息</h3><p>内存信息可以通过很多方式查看，比如top，还有就是Linux的meminfo，还有就是free命令。但是要求自定义单位，所以这里用free。<br><figure class="highlight coq"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">echo $(free -g |<span class="type">grep</span> Mem |<span class="type">awk</span> '&#123;print <span class="string">"memory total: "</span> $<span class="number">2</span><span class="string">"G"</span>&#125;')</div><div class="line">echo $(free -m |<span class="type">grep</span> Mem |<span class="type">awk</span> '&#123;print <span class="string">"memory free: "</span> $<span class="number">4</span><span class="string">"M"</span>&#125;')</div></pre></td></tr></table></figure></p><h3 id="磁盘信息"><a href="#磁盘信息" class="headerlink" title="磁盘信息"></a>磁盘信息</h3><p>磁盘信息一般使用<code>df</code>命令，这里要获取根目录的磁盘大小，根目录一般在输出中第一行，所以需要获取其位置:<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">echo</span> <span class="string">"disk size: "</span>$(df -h|awk <span class="string">'&#123;print <span class="variable">$2</span>&#125;'</span>|sed -n 2p)</div></pre></td></tr></table></figure></p><p>不过这个只是碰运气，有的不在第一行，就会出错了，但是grep直接过滤掉根目录是没用的，这里需要精确匹配根目录<code>/</code>，所以需要用到<code>grep -w</code><br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">echo</span> <span class="string">"disk size: "</span>$(df -h|grep -w <span class="string">'/'</span> |awk <span class="string">'&#123;print <span class="variable">$2</span>&#125;'</span>|sed -n 2p)</div></pre></td></tr></table></figure></p><h3 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h3><p>获取系统位数，直接:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">"system bit:"</span> $(getconf LONG_BIT)</div></pre></td></tr></table></figure></p><h3 id="进程数"><a href="#进程数" class="headerlink" title="进程数"></a>进程数</h3><p>查看当前所有进程可以用<code>ps</code>命令实现，但是没有计数的功能，也不必为此单独创建一个命令，可以结合<code>wc</code>命令实现该功能:<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo <span class="string">"process: "</span>$<span class="comment">(ps -A |wc -l)</span></div></pre></td></tr></table></figure></p><h3 id="软件数目"><a href="#软件数目" class="headerlink" title="软件数目"></a>软件数目</h3><p>和上面一样，可以通过<code>dpkg</code>命令查询所有安装的软件，再结合<code>wc</code>命令实现计数:<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo <span class="string">"software num: "</span>$(dpkg -l<span class="string">|wc -l)</span></div></pre></td></tr></table></figure></p><h3 id="网卡信息"><a href="#网卡信息" class="headerlink" title="网卡信息"></a>网卡信息</h3><p>查询IP很简单，一句<code>ifconfig</code>可以解决，但是输出格式不满足要求，需要删掉输出信息中多余的字符，可以用<code>awk</code>命令。<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo <span class="string">"ip: "</span>$(ifconfig eth0 |awk '/inet/ &#123; <span class="keyword">split</span>(<span class="variable">$2</span>,x,<span class="string">":"</span>);<span class="keyword">print</span> x[2]&#125;')</div></pre></td></tr></table></figure></p><p>最后这期全部代码如下:<br><figure class="highlight coq"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">echo <span class="string">"cpu num: "</span>$(grep processor /proc/cpuinfo | <span class="type">wc</span> -l)</div><div class="line">echo $(free -g |<span class="type">grep</span> Mem |<span class="type">awk</span> '&#123;print <span class="string">"memory total: "</span> $<span class="number">2</span><span class="string">"G"</span>&#125;')</div><div class="line">echo $(free -m |<span class="type">grep</span> Mem |<span class="type">awk</span> '&#123;print <span class="string">"memory free: "</span> $<span class="number">4</span><span class="string">"M"</span>&#125;')</div><div class="line">#echo $(grep MemTotal /proc/meminfo | <span class="type">awk</span> '&#123;print <span class="string">"memory total: "</span> $<span class="number">2</span>&#125;')</div><div class="line">#echo $(grep MemFree /proc/meminfo | <span class="type">awk</span> '&#123;print <span class="string">"memory free: "</span>$<span class="number">2</span>&#125;')</div><div class="line">echo <span class="string">"disk size: "</span>$(df -h|<span class="type">grep</span> -w <span class="string">"/"</span> |<span class="type">awk</span> '&#123;print $<span class="number">2</span>&#125;'|<span class="type">sed</span> -n <span class="number">2</span>p)</div><div class="line">echo <span class="string">"system bit:"</span> $(getconf LONG_BIT)</div><div class="line">echo <span class="string">"process: "</span>$(ps -A |<span class="type">wc</span> -l)</div><div class="line">echo <span class="string">"software num: "</span>$(dpkg -l|<span class="type">wc</span> -l)</div><div class="line">echo <span class="string">"ip: "</span>$(ifconfig eth0 |<span class="type">awk</span> '/inet/ &#123; <span class="built_in">split</span>($<span class="number">2</span>,x,<span class="string">":"</span>);print x[<span class="number">2</span>]&#125;')</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这几天登录了下实验楼，看到有个楼赛，然后就参加了，这里记录一下。&lt;br&gt;虽然一直用Linux，但是基本没专门去上过之类的课，最早还是智能信息课的实验机房里搭Hadoop用到的，然后还挺喜欢的，以至于后来卸了Win把笔记本装了Ubuntu，用的开源软件，也没有盗版的困扰了。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://newdee.cf/categories/Linux/"/>
    
    
      <category term="楼赛" scheme="http://newdee.cf/tags/%E6%A5%BC%E8%B5%9B/"/>
    
      <category term="Linux" scheme="http://newdee.cf/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Mathjax的LaTex公式语法</title>
    <link href="http://newdee.cf/posts/b9c74ed9/"/>
    <id>http://newdee.cf/posts/b9c74ed9/</id>
    <published>2017-10-21T06:09:55.000Z</published>
    <updated>2017-10-29T05:54:13.644Z</updated>
    
    <content type="html"><![CDATA[<p>$$ E = mc^2 $$<br><a id="more"></a><br>关于Mathjax的LaTeX公式语法，在Hexo的markdown语法中引用大致相同。  </p><h3 id="插入公式"><a href="#插入公式" class="headerlink" title="插入公式"></a>插入公式</h3><p>LaTex的数学公式主要有两种:行内公式和行间公式。</p><h4 id="行内公式"><a href="#行内公式" class="headerlink" title="行内公式"></a>行内公式</h4><p>行内公式和行间公式都有两种写法，一种是括号，一种是美元符写法 <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> 。<br><code>\(formula\)</code> 括号写法<br><code>$formula$</code> 美元符写法<br>但是由于Hexo markdown语法中暂未渲染括号的语法，也容易与markdown语法混淆，所以本篇目前使用美元符号的写法。</p><h4 id="行间公式"><a href="#行间公式" class="headerlink" title="行间公式"></a>行间公式</h4><p><code>$$formula$$</code> 表示行间公式<br>行内公式与行间公式的效果 <sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> :</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="formula">$[J<span class="tag">\<span class="name">_</span></span><span class="tag">\<span class="name">alpha</span></span>(x) = <span class="tag">\<span class="name">sum</span></span><span class="tag">\<span class="name">_</span><span class="string">&#123;m=0&#125;</span></span>^<span class="tag">\<span class="name">infty</span></span> <span class="tag">\<span class="name">frac</span><span class="string">&#123;(-1)^m&#125;</span><span class="string">&#123;m! \Gamma (m + \alpha +1)&#125;</span></span> (&#123; <span class="tag">\<span class="name">frac</span><span class="string">&#123;x&#125;</span><span class="string">&#123;2&#125;</span></span>)^&#123;xy^2+1&#125;&#125;]$</span></div><div class="line"><span class="formula">$$[J<span class="tag">\<span class="name">_</span></span><span class="tag">\<span class="name">alpha</span></span>(x) = <span class="tag">\<span class="name">sum</span></span><span class="tag">\<span class="name">_</span><span class="string">&#123;m=0&#125;</span></span>^<span class="tag">\<span class="name">infty</span></span> <span class="tag">\<span class="name">frac</span><span class="string">&#123;(-1)^m&#125;</span><span class="string">&#123;m! \Gamma (m + \alpha +1)&#125;</span></span> (&#123; <span class="tag">\<span class="name">frac</span><span class="string">&#123;x&#125;</span><span class="string">&#123;2&#125;</span></span>)^&#123;xy^2+1&#125;&#125;]$$</span></div></pre></td></tr></table></figure><p>效果:<br>行内公式:$[J_\alpha(x) = \sum_{m=0}^\infty \frac{(-1)^m}{m! \Gamma (m + \alpha +1)} ({ \frac{x}{2})^{xy^2+1}}]$<br>行间公式:<br>$$[J_\alpha(x) = \sum_{m=0}^\infty \frac{(-1)^m}{m! \Gamma (m + \alpha +1)} ({ \frac{x}{2})^{xy^2+1}}]$$</p><h3 id="上下标和括号"><a href="#上下标和括号" class="headerlink" title="上下标和括号"></a>上下标和括号</h3><h4 id="上下角标"><a href="#上下角标" class="headerlink" title="上下角标"></a>上下角标</h4><p>上标用<code>^</code>符号表示，下标用<code>_</code>符号表示。如果内容多于一个，可以用<code>{}</code>括起来。如果左右两边都需要有角标，可以用<code>\sideset</code>语法设置。<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">$</span><span class="symbol">$</span>\sideset&#123;^<span class="number">1</span>\_2&#125;&#123;^<span class="number">3</span>\_4&#125;S<span class="symbol">$</span><span class="symbol">$</span></div></pre></td></tr></table></figure></p><p>$$\sideset{^1_2}{^3_4}S$$</p><h4 id="括号"><a href="#括号" class="headerlink" title="括号"></a>括号</h4><p>小括号是<code>()</code>，中括号是<code>[]</code>，大括号是<code>\{\}</code>。<br>其中使用<code>\left</code>和<code>\right</code>可以设置自适应括号大小。<br>如：<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">$</span>(\<span class="built-in">frac</span>&#123;a&#125;&#123;b&#125;)<span class="symbol">$</span> 和  <span class="symbol">$</span>\left(<span class="built-in">frac</span>&#123;a&#125;&#123;b&#125;\right)<span class="symbol">$</span></div></pre></td></tr></table></figure></p><p>效果:</p><p>$(\frac{a}{b})$ 和  $\left(\frac{a}{b}\right)$</p><p>其中<code>\left</code>和<code>\right</code>通常是成对出现的，如果只需要自适应一个分隔符的大小，也需要写两个语法。这是用另外一个(如<code>\left.</code>)去适配。</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="formula">$$<span class="tag">\<span class="name">left</span></span><span class="tag">\<span class="name">.</span></span><span class="tag">\<span class="name">frac</span><span class="string">&#123; &#123;\rm d&#125;</span></span>y&#125;&#123; &#123;<span class="tag">\<span class="name">rm</span></span> d&#125;x&#125;<span class="tag">\<span class="name">right</span></span>|<span class="tag">\<span class="name">_</span><span class="string">&#123;x=0&#125;</span></span>$$</span></div></pre></td></tr></table></figure><p>效果:</p><p>$$\left.\frac{ {\rm d}y}{ {\rm d} x} \right|_{x=0}$$</p><p>由于hexo中markdown语法问题，<code>\frac</code>后的两个<code>{ {</code>中间一定要加空格，或者直接取消第二个大括号，显示为:</p><p>$$\left.\frac{ \rm dy}{ \rm dx} \right|_{x=0}$$</p><h3 id="一些常用表达式"><a href="#一些常用表达式" class="headerlink" title="一些常用表达式"></a>一些常用表达式</h3><h4 id="分数"><a href="#分数" class="headerlink" title="分数"></a>分数</h4><p><code>\frac{}{}</code>表示分数，后面两个部分是分子和分母。</p><h4 id="开方"><a href="#开方" class="headerlink" title="开方"></a>开方</h4><p><code>\sqrt[n]{formula}</code>表示开n次方。 </p><h4 id="矢量"><a href="#矢量" class="headerlink" title="矢量"></a>矢量</h4><p><code>\vec{a} \cdot \vec{b}</code>表示$\vec{a}\cdot\vec{b}$</p><h4 id="积分"><a href="#积分" class="headerlink" title="积分"></a>积分</h4><p><code>\int\_0^1{x^2}sin(x){\rm d}x</code>表示$\int_0^1{x^2}sin(x){\rm d}x$</p><h4 id="极限"><a href="#极限" class="headerlink" title="极限"></a>极限</h4><p>行内:<br><code>$\lim\limits\_{n\rightarrow + \infty} \frac{1}{n(n+1)}$</code> 表示$\lim\limits_{n\rightarrow + \infty} \frac{1}{n(n+1)}$<br>行间:<br><code>$$\lim\_{n\rightarrow + \infty} \frac{1}{n(n+1)}$$</code> 表示$$\lim_{n\rightarrow + \infty} \frac{1}{n(n+1)}$$</p><h4 id="累加累乘"><a href="#累加累乘" class="headerlink" title="累加累乘"></a>累加累乘</h4><p><code>\sum\_{i=0}^n \frac{1}{i^2}</code>表示$\sum_{i=0}^n \frac{1}{i^2}$<br><code>\prod\_{i=0}^n \frac{1}{i^2}</code>表示$\prod_{i=0}^n \frac{1}{i^2}$</p><h3 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h3><h4 id="希腊字符"><a href="#希腊字符" class="headerlink" title="希腊字符"></a>希腊字符</h4><table><thead><tr><th>小写</th><th>大写</th></tr></thead><tbody><tr><td>\alpha</td><td>　A　</td></tr><tr><td>\beta</td><td>　B　</td></tr><tr><td>\gamma　</td><td>\Gamma　</td></tr><tr><td>\delta　</td><td>\Delta　</td></tr><tr><td>\epsilon</td><td>　E</td></tr><tr><td>\varepsilon</td><td>　　</td></tr><tr><td>\zeta</td><td>　Z　</td></tr><tr><td>\eta　</td><td>H</td></tr><tr><td>\theta</td><td>　\Theta　</td></tr><tr><td>\vartheta</td><td></td></tr><tr><td>\iota</td><td>　I</td></tr><tr><td>\kappa　</td><td>K　</td></tr><tr><td>\lambda</td><td>　\Lambda</td></tr><tr><td>\mu</td><td>　M　</td></tr><tr><td>\nu</td><td>　N</td></tr><tr><td>\xi　</td><td>\Xi　</td></tr><tr><td>o　</td><td>O　</td></tr><tr><td>\pi</td><td>　\Pi</td></tr><tr><td>\varpi　</td><td>　</td></tr><tr><td>\rho　</td><td>P</td></tr><tr><td>\varrho　</td><td>　\sigma　</td></tr><tr><td>\Sigma　</td><td>\varsigma　</td></tr><tr><td>\tau　</td><td>T　</td></tr><tr><td>\upsilon</td><td>　\Upsilon</td></tr><tr><td>\phi　</td><td>\Phi　</td></tr><tr><td>\varphi</td><td>　　</td></tr><tr><td>\chi　</td><td>X　</td></tr><tr><td>\psi　</td><td>\Psi　</td></tr><tr><td>\omega　</td><td>\Omega</td></tr></tbody></table><h4 id="关系运算"><a href="#关系运算" class="headerlink" title="关系运算"></a>关系运算</h4><table><thead><tr><th>运算符号</th><th>表示方式</th></tr></thead><tbody><tr><td>±</td><td>\pm</td></tr><tr><td>×</td><td>\times</td></tr><tr><td>÷</td><td>\div</td></tr><tr><td>∣</td><td>\mid</td></tr><tr><td>∤</td><td>\nmid</td></tr><tr><td>⋅</td><td>\cdot</td></tr><tr><td>∘</td><td>\circ</td></tr><tr><td>∗</td><td>\ast</td></tr><tr><td>⨀</td><td>\bigodot</td></tr><tr><td>⨂</td><td>\bigotimes</td></tr><tr><td>⨁</td><td>\bigoplus</td></tr><tr><td>≤</td><td>\leq</td></tr><tr><td>≥</td><td>\geq</td></tr><tr><td>≠</td><td>\neq</td></tr><tr><td>≈</td><td>\approx</td></tr><tr><td>≡</td><td>\equiv</td></tr><tr><td>∑</td><td>\sum</td></tr><tr><td>∏</td><td>\prod</td></tr><tr><td>∐</td><td>\coprod</td></tr></tbody></table><h4 id="集合运算"><a href="#集合运算" class="headerlink" title="集合运算"></a>集合运算</h4><table><thead><tr><th>集合符号</th><th>表示方式</th></tr></thead><tbody><tr><td>∅</td><td>\emptyset</td></tr><tr><td>∈</td><td>\in</td></tr><tr><td>∉</td><td>\notin</td></tr><tr><td>⊂</td><td>\subset</td></tr><tr><td>⊃</td><td>\supset</td></tr><tr><td>⊆</td><td>\subseteq</td></tr><tr><td>⊇</td><td>\supseteq</td></tr><tr><td>⋂</td><td>\bigcap</td></tr><tr><td>⋃</td><td>\bigcup</td></tr><tr><td>⋁</td><td>\bigvee</td></tr><tr><td>⋀</td><td>\bigwedge</td></tr><tr><td>⨄</td><td>\biguplus</td></tr><tr><td>⨆</td><td>\bigsqcup</td></tr></tbody></table><h4 id="对数和三角运算符"><a href="#对数和三角运算符" class="headerlink" title="对数和三角运算符"></a>对数和三角运算符</h4><table><thead><tr><th>运算符</th><th>表示方式</th></tr></thead><tbody><tr><td>log</td><td>\log</td></tr><tr><td>lg</td><td>\lg</td></tr><tr><td>ln</td><td>\ln</td></tr><tr><td>⊥</td><td>\bot</td></tr><tr><td>∠</td><td>\angle</td></tr><tr><td>30∘</td><td>30^\circ</td></tr><tr><td>sin</td><td>\sin</td></tr><tr><td>cos</td><td>\cos</td></tr><tr><td>tan</td><td>\tan</td></tr><tr><td>cot</td><td>\cot</td></tr><tr><td>sec</td><td>\sec</td></tr><tr><td>csc</td><td>\csc</td></tr></tbody></table><h4 id="箭头符号"><a href="#箭头符号" class="headerlink" title="箭头符号"></a>箭头符号</h4><table><thead><tr><th>箭头</th><th>表示方式</th></tr></thead><tbody><tr><td>↑</td><td>\uparrow</td></tr><tr><td>↓</td><td>\downarrow</td></tr><tr><td>⇑</td><td>\Uparrow</td></tr><tr><td>⇓</td><td>\Downarrow</td></tr><tr><td>→</td><td>\rightarrow</td></tr><tr><td>←</td><td>\leftarrow</td></tr><tr><td>⇒</td><td>\Rightarrow</td></tr><tr><td>⇐</td><td>\Leftarrow</td></tr><tr><td>⟶</td><td>\longrightarrow</td></tr><tr><td>⟵</td><td>\longleftarrow</td></tr><tr><td>⟹</td><td>\Longrightarrow</td></tr><tr><td>⟸</td><td>\Longleftarrow</td></tr></tbody></table><h4 id="其他运算符"><a href="#其他运算符" class="headerlink" title="其他运算符"></a>其他运算符</h4><table><thead><tr><th>运算符</th><th>表示方式</th></tr></thead><tbody><tr><td>′</td><td>\prime</td></tr><tr><td>∫</td><td>\int</td></tr><tr><td>∬</td><td>\iint</td></tr><tr><td>∭</td><td>\iiint</td></tr><tr><td>⨌</td><td>\iiiint</td></tr><tr><td>∮</td><td>\oint</td></tr><tr><td>lim</td><td>\lim</td></tr><tr><td>∞</td><td>\infty</td></tr><tr><td>∇</td><td>\nabla</td></tr><tr><td>∵</td><td>\because</td></tr><tr><td>∴</td><td>\therefore</td></tr><tr><td>∀</td><td>\forall</td></tr><tr><td>∃</td><td>\exists</td></tr><tr><td>≠</td><td>\not=</td></tr><tr><td>≯</td><td>\not&gt;</td></tr><tr><td>⊄</td><td>\not\subset</td></tr><tr><td>$\hat{y}  $</td><td>\hat{y}</td></tr><tr><td>$\check{y}$</td><td>\check{y}</td></tr><tr><td>$\breve{y}$</td><td>\breve{y}</td></tr><tr><td>$\overline{a+b+c+d}                           $</td><td>\overline{a+b+c+d}</td></tr><tr><td>$\underline{a+b+c+d}                          $</td><td>\underline{a+b+c+d}</td></tr><tr><td>$\overbrace{a+\underbrace{b+c}_{1.0}+d}^{2.0}$</td><td>\overbrace{a+\underbrace{b+c}_{1.0}+d}^{2.0}</td></tr></tbody></table><h3 id="字体转换"><a href="#字体转换" class="headerlink" title="字体转换"></a>字体转换</h3><table><thead><tr><th>字体</th><th>表示方式</th></tr></thead><tbody><tr><td>\rm　　</td><td>罗马体　　　</td></tr><tr><td>\bf　　</td><td>黑体　　　　</td></tr><tr><td>\sl　　</td><td>倾斜体　　　</td></tr><tr><td>\mit 　</td><td>数学斜体　　</td></tr><tr><td>\sc　　</td><td>小体大写字母</td></tr><tr><td>\it　　</td><td>意大利体</td></tr><tr><td>\cal 　</td><td>花体</td></tr><tr><td>\sf　　</td><td>等线体</td></tr><tr><td>\tt　　</td><td>打字机字体</td></tr></tbody></table><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">本篇中公式具体内容均以<code>formula</code>表示。</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline-block; vertical-align: top;">由于hexo markdown语法的渲染，公式中<code>_</code>需要用转义字符表示。</span><a href="#fnref:2" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;$$ E = mc^2 $$&lt;br&gt;
    
    </summary>
    
      <category term="博客" scheme="http://newdee.cf/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="mathjax" scheme="http://newdee.cf/tags/mathjax/"/>
    
      <category term="latex" scheme="http://newdee.cf/tags/latex/"/>
    
      <category term="markdown" scheme="http://newdee.cf/tags/markdown/"/>
    
      <category term="hexo" scheme="http://newdee.cf/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客的优化</title>
    <link href="http://newdee.cf/posts/6d87f1ac/"/>
    <id>http://newdee.cf/posts/6d87f1ac/</id>
    <published>2017-09-29T17:34:01.000Z</published>
    <updated>2017-10-23T08:20:13.423Z</updated>
    
    <content type="html"><![CDATA[<p>捣鼓个人博客也有一段时间了，其间加了不少的插件，改来改去，最后打开也变得很慢了。问题主要有两个方面，一个是网络问题，因为托管在Github上，国内访问一直很慢，后来还是迁移到Coding上了，妥协了，给他加了个<code>Hosted by Coding Pages</code>。另一方面则是加载的问题，由于多了许多插件，导致网页加载变慢，特别是在添加<a href="https://github.com/EYHN/hexo-helper-live2d" rel="external nofollow noopener noreferrer" target="_blank">live2d</a>之后。所以打算做些工作优化一下博客。<br><a id="more"></a></p><h4 id="外部链接优化"><a href="#外部链接优化" class="headerlink" title="外部链接优化"></a>外部链接优化</h4><p>主要是告诉搜索引擎爬虫无需抓取目标页，同时告诉搜索引擎无需将的当前页的Pagerank传递到目标页。Google推荐是用nofollow，nofollow是HTML元标签(meta)的content属性和链接标签(a)的rel属性的一个值，告诉机器(爬虫)无需追踪目标页，为了对抗blogspam(博客垃圾留言信息)。但是如果是通过sitemap直接提交该页面，爬虫还是会爬取，这里的nofollow只是当前页对目标页的一种态度，并不代表其他页对目标页的态度。</p><h5 id="主要作用"><a href="#主要作用" class="headerlink" title="主要作用"></a>主要作用</h5><ul><li>防止不可信的内容，最常见的是博客上的垃圾留言与评论中为了获取外链的垃圾链接，为了防止页面指向一些拉圾页面和站点。</li><li>付费链接：为了防止付费链接影响Google的搜索结果排名，Google建议使用nofollow属性。</li><li>引导爬虫抓取有效的页面：避免爬虫抓取一些无意义的页面，影响爬虫抓取的效率。<br>其主要方法是给所有外部链接加上<code>rel=&quot;external nofollow&quot;</code>属性，对外部链接<code>target=”_blank”</code>采用在新窗口种打开外部链接的方法。</li></ul><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> hexo-autonofollow <span class="comment">--save</span></div></pre></td></tr></table></figure><h5 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h5><p>编辑站点配置文件。<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">nofollow:</span></div><div class="line"><span class="attr">    enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">    exclude:</span></div><div class="line"><span class="bullet">    -</span> <span class="string">you</span> <span class="string">domain</span></div></pre></td></tr></table></figure></p><p>这里的<code>exclude</code>下主要填你的域名，为豁免域名。</p><h4 id="在主页不显示某类文章"><a href="#在主页不显示某类文章" class="headerlink" title="在主页不显示某类文章"></a>在主页不显示某类文章</h4><p>修改主题目录下layout的index.swig文件:<br><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">extends</span></span> '_layout.swig' %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">import</span> '_macro/post.swig' <span class="keyword">as</span> post_template %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">import</span> '_macro/sidebar.swig' <span class="keyword">as</span> sidebar_template %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml"></span></div><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml"></span><span class="template-variable">&#123;&#123; config.title &#125;&#125;</span><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.index_with_subtitle and config.subtitle %&#125;</span><span class="xml"> - </span><span class="template-variable">&#123;&#123;config.subtitle &#125;&#125;</span><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml"></span></div><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> page_class %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">  </span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> is_home() %&#125;</span><span class="xml"> page-home </span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml"></span></div><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> content %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">  <span class="tag">&lt;<span class="name">section</span> <span class="attr">id</span>=<span class="string">"posts"</span> <span class="attr">class</span>=<span class="string">"posts-expand"</span>&gt;</span></span></div><div class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">for</span></span> post <span class="keyword">in</span> page.posts %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> post.categories!= 'Recommend' %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">      </span><span class="template-variable">&#123;&#123; post_template.render(post, true) &#125;&#125;</span><span class="xml"></span></div><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">endfor</span></span> %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span></div><div class="line"><span class="xml"></span></div><div class="line"><span class="xml">  </span><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> '_partials/pagination.swig' %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml"></span></div><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> sidebar %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">  </span><span class="template-variable">&#123;&#123; sidebar_template.render(false) &#125;&#125;</span><span class="xml"></span></div><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure></p><p>在其中加入page的判断页面即可。</p><h4 id="添加emoji支持-x1f604"><a href="#添加emoji支持-x1f604" class="headerlink" title="添加emoji支持&#x1f604;"></a>添加emoji支持<span class="github-emoji" style="display:inline;vertical-align:bottom" title="smile" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f604.png?v7">&#x1f604;</span></h4><p>由于Hexo的默认Markdown语法不支持emoji表情，网上也有人替换了其Markdown渲染工具，但是又会引入新的Bug，所以就放弃了。后来看到有人照着Github的方式做了一个插件，在生成网页的时候将关键字替换成emoji的unicode字符，然后再利用JavaScript将字符替换成图片，这样即使图片加载失败还有字符fallback。其Repo<a href="https://github.com/crimx/hexo-filter-github-emojis" rel="external nofollow noopener noreferrer" target="_blank">在此</a>。  </p><h5 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h5><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-<span class="built_in">filter</span>-github-emojis <span class="comment">--save</span></div></pre></td></tr></table></figure><h5 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h5><p>编辑站点配置文件<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="string">vim</span> <span class="string">_config.xml</span></div><div class="line"><span class="attr">githubEmojis:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  className:</span> <span class="string">github-emoji</span></div><div class="line"><span class="attr">  unicode:</span> <span class="literal">false</span></div><div class="line"><span class="attr">  styles:</span></div><div class="line"><span class="attr">  localEmojis:</span></div></pre></td></tr></table></figure></p><p>其中，<code>localEmojis</code>可以添加自己的本地表情。  </p><h5 id="Warning的处理"><a href="#Warning的处理" class="headerlink" title="Warning的处理"></a>Warning的处理</h5><p>在安装完之后再执行hexo生成站点文件时，会有一个警告，主要内容如下:<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DeprecationWarning: Calling an asynchronous <span class="keyword">function</span> <span class="title">without</span> callback <span class="keyword">is</span> deprecated.</div></pre></td></tr></table></figure></p><p>这个意思是调用无回调的异步函数的方法已经被废弃，可能是使用了<code>writeFile</code>函数。因此在其安装目录下寻找，后来在其index文件中找到了这个函数。修改方法如下:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">cd</span> node_modules/hexo-<span class="built_in">filter</span>-github-emojis</div><div class="line"><span class="keyword">vim</span> <span class="built_in">index</span>.js</div></pre></td></tr></table></figure><p>找到带有<code>writeFile</code>函数的一行，应该是这行:<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fs.writeFile(path.<span class="keyword">join</span>(__dirname, <span class="string">'emojis.json'</span>), JSON.stringify(githubEmojis, <span class="literal">null</span>, <span class="string">'\t'</span>))</div></pre></td></tr></table></figure></p><p>将<code>writeFile</code>改为<code>writeFileSync</code>函数，即:<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fs.writeFileSync(path.<span class="keyword">join</span>(__dirname, <span class="string">'emojis.json'</span>), JSON.stringify(githubEmojis, <span class="literal">null</span>, <span class="string">'\t'</span>))</div></pre></td></tr></table></figure></p><p>之后再运行，警告消失。</p><h5 id="后加"><a href="#后加" class="headerlink" title="后加"></a>后加</h5><p>现在听说作者已经修复了这个问题，所以不需要改了。</p><h4 id="静态资源压缩"><a href="#静态资源压缩" class="headerlink" title="静态资源压缩"></a>静态资源压缩</h4><p>网页加载速度优化，主要通过压缩网页的静态资源如JS,Html,CSS,图片等文件来达到加速效果。网上现在主要有两种，一种是直接用Hexo的插件，<a href="https://github.com/rozbo/hexo-neat" rel="external nofollow noopener noreferrer" target="_blank">Hexo-Neat</a>，还有一种是使用通用的压缩工具<a href="http://www.gulpjs.com.cn/" rel="external nofollow noopener noreferrer" target="_blank">Gulp</a>。<br>这里主要使用Gulp。</p><h5 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h5><p>首先是安装Gulp插件:<br><figure class="highlight q"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install gulp --<span class="built_in">save</span>-<span class="built_in">dev</span></div></pre></td></tr></table></figure></p><p>然后安装gulp相关插件:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ npm <span class="keyword">install</span> gulp-clean-css <span class="comment">--save-dev</span></div><div class="line">$ npm <span class="keyword">install</span> gulp-uglify <span class="comment">--save-dev</span></div><div class="line">$ npm <span class="keyword">install</span> gulp-htmlmin <span class="comment">--save-dev</span></div><div class="line">$ npm <span class="keyword">install</span> gulp-htmlclean <span class="comment">--save-dev</span></div><div class="line">$ npm <span class="keyword">install</span> gulp-imagemin <span class="comment">--save-dev</span></div><div class="line">$ npm <span class="keyword">install</span> del <span class="comment">--save-dev</span></div><div class="line">$ npm <span class="keyword">install</span> run-<span class="keyword">sequence</span> <span class="comment">--save-dev</span></div></pre></td></tr></table></figure></p><h5 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h5><p>添加一个gulpfile.js文件，在博客根目录下。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> gulp = <span class="keyword">require</span>(<span class="string">'gulp'</span>);</div><div class="line"><span class="keyword">var</span> minifycss = <span class="keyword">require</span>(<span class="string">'gulp-clean-css'</span>);</div><div class="line"><span class="keyword">var</span> uglify = <span class="keyword">require</span>(<span class="string">'gulp-uglify'</span>);</div><div class="line"><span class="keyword">var</span> htmlmin = <span class="keyword">require</span>(<span class="string">'gulp-htmlmin'</span>);</div><div class="line"><span class="keyword">var</span> htmlclean = <span class="keyword">require</span>(<span class="string">'gulp-htmlclean'</span>);</div><div class="line"><span class="keyword">var</span> imagemin = <span class="keyword">require</span>(<span class="string">'gulp-imagemin'</span>);</div><div class="line"><span class="keyword">var</span> del = <span class="keyword">require</span>(<span class="string">'del'</span>);</div><div class="line"><span class="keyword">var</span> runSequence = <span class="keyword">require</span>(<span class="string">'run-sequence'</span>);</div><div class="line"><span class="keyword">var</span> Hexo = <span class="keyword">require</span>(<span class="string">'hexo'</span>);</div><div class="line"></div><div class="line"></div><div class="line">gulp.task(<span class="string">'clean'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> del([<span class="string">'public/**/*'</span>]);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// generate html with 'hexo generate'</span></div><div class="line"><span class="keyword">var</span> hexo = <span class="keyword">new</span> Hexo(process.cwd(), &#123;&#125;);</div><div class="line">gulp.task(<span class="string">'generate'</span>, <span class="function"><span class="keyword">function</span><span class="params">(cb)</span> </span>&#123;</div><div class="line">    hexo.init().then(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> hexo.call(<span class="string">'generate'</span>, &#123;</div><div class="line">            watch: <span class="keyword">false</span></div><div class="line">        &#125;);</div><div class="line">    &#125;).then(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> hexo.<span class="keyword">exit</span>();</div><div class="line">    &#125;).then(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> cb()</div><div class="line">    &#125;).<span class="keyword">catch</span>(<span class="function"><span class="keyword">function</span><span class="params">(err)</span> </span>&#123;</div><div class="line">        console.log(err);</div><div class="line">        hexo.<span class="keyword">exit</span>(err);</div><div class="line">        <span class="keyword">return</span> cb(err);</div><div class="line">    &#125;)</div><div class="line">&#125;)</div><div class="line"></div><div class="line">gulp.task(<span class="string">'minify-css'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'./public/**/*.css'</span>,<span class="string">'public/**/*.min.css'</span>])</div><div class="line">        .pipe(minifycss(&#123;</div><div class="line">            compatibility: <span class="string">'ie8'</span></div><div class="line">        &#125;))</div><div class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'minify-html'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.html'</span>)</div><div class="line">        .pipe(htmlclean())</div><div class="line">        .pipe(htmlmin(&#123;</div><div class="line">            removeComments: <span class="keyword">true</span>,</div><div class="line">            minifyJS: <span class="keyword">true</span>,</div><div class="line">            minifyCSS: <span class="keyword">true</span>,</div><div class="line">            minifyURLs: <span class="keyword">true</span>,</div><div class="line">        &#125;))</div><div class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>))</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'minify-js'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'./public/**/*.js'</span>,<span class="string">'!public/**/*.min.js'</span>])</div><div class="line">        .pipe(uglify())</div><div class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'minify-img'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/images/**/*.*'</span>)</div><div class="line">        .pipe(imagemin())</div><div class="line">        .pipe(gulp.dest(<span class="string">'./public/images'</span>))</div><div class="line">&#125;)</div><div class="line"></div><div class="line">gulp.task(<span class="string">'minify-img-aggressive'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/images/**/*.*'</span>)</div><div class="line">        .pipe(imagemin(</div><div class="line">        [imagemin.gifsicle(&#123;<span class="string">'optimizationLevel'</span>: <span class="number">3</span>&#125;), </div><div class="line">        imagemin.jpegtran(&#123;<span class="string">'progressive'</span>: <span class="keyword">true</span>&#125;), </div><div class="line">        imagemin.optipng(&#123;<span class="string">'optimizationLevel'</span>: <span class="number">7</span>&#125;), </div><div class="line">        imagemin.svgo()],</div><div class="line">        &#123;<span class="string">'verbose'</span>: <span class="keyword">true</span>&#125;))</div><div class="line">        .pipe(gulp.dest(<span class="string">'./public/images'</span>))</div><div class="line">&#125;)</div><div class="line"></div><div class="line">gulp.task(<span class="string">'compress'</span>, <span class="function"><span class="keyword">function</span><span class="params">(cb)</span> </span>&#123;</div><div class="line">    runSequence([<span class="string">'minify-html'</span>, <span class="string">'minify-css'</span>, <span class="string">'minify-img'</span>], cb);</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'build'</span>, <span class="function"><span class="keyword">function</span><span class="params">(cb)</span> </span>&#123;</div><div class="line">    runSequence(<span class="string">'clean'</span>, <span class="string">'generate'</span>, <span class="string">'compress'</span>, cb)</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'build'</span>])</div></pre></td></tr></table></figure></p><p>因为已经将hexo g生成站点文件的过程包含进去了，直接执行gulp即可。<br>但是不知道是不是Next版本更新的原因，导致js的压缩总是出问题，暂时先删掉了<code>runSequence</code>中的<code>minify-js</code>一项，之后再作讨论。</p><h5 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h5><p>原因找到了，是因为Gulp的uglify-js不支持ES6的语法，因此编译会出错。<br>解决方案:先使用babel编译。</p><ol><li><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --save-dev gulp-babel babel-preset-es2015 babel-core</div></pre></td></tr></table></figure></li><li><p>修改gulpfile.js文件<br>在变量定义中添加一行:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> babel = <span class="built_in">require</span>(<span class="string">"gulp-babel"</span>);</div></pre></td></tr></table></figure></li></ol><p>然后在<code>.pipe(uglify())</code>这一行前加一句:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.pipe</span>(<span class="selector-tag">babel</span>(&#123;<span class="attribute">presets</span>: [<span class="string">'es2015'</span>]&#125;))</div></pre></td></tr></table></figure></p><p>问题解决。</p><h4 id="替换谷歌字体库"><a href="#替换谷歌字体库" class="headerlink" title="替换谷歌字体库"></a>替换谷歌字体库</h4><p>众所周知，谷歌字体库访问通常情况都非常慢，于是决定使用国内的CND加速，但是之前360的字体库已经下架了，所以使用中科大的(虽然不下架应该也不会选择它 <span class="github-emoji" style="display:inline;vertical-align:bottom" title="smile" data-src="https://assets-cdn.github.com/images/icons/emoji/unicode/1f604.png?v7">&#x1f604;</span> )。<br>修改方式:<br>编辑主题的配置文件:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim theme/next/_config.xml</div></pre></td></tr></table></figure></p><p>找到<code>fonts</code>的设置，在<code>host:</code>后面填写<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//fonts.lug.ustc.edu.cn</span></div></pre></td></tr></table></figure></p><p>和<code>host:</code>中间注意保持空格。</p><h5 id="后加-1"><a href="#后加-1" class="headerlink" title="后加"></a>后加</h5><p>中科大字体库已经挂了，谷歌字体库也经常抽风。于是采用国内CDN加速，参考于Showfom大神的一篇<a href="https://sb.sb/css-cdn/" rel="external nofollow noopener noreferrer" target="_blank">博客</a> 。</p><h6 id="修改谷歌字体库"><a href="#修改谷歌字体库" class="headerlink" title="修改谷歌字体库"></a>修改谷歌字体库</h6><p>将<code>//fonts.googleapis.com</code>修改为国内cdn加速的库，和上面一样，找到<code>fonts</code>的设置，在<code>host:</code>后面填写</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//fonts.cat.net</span></div></pre></td></tr></table></figure><h6 id="替换CDNJS-开源-JS-库"><a href="#替换CDNJS-开源-JS-库" class="headerlink" title="替换CDNJS 开源 JS 库"></a>替换CDNJS 开源 JS 库</h6><p>只需要替换 <code>cdnjs.cloudflare.com</code> 为 <code>cdnjs.cat.net</code> 即可。即：</p><p>在<code>vendors</code>中的<code>jquery：</code> 后面添加自定义的地址:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https:<span class="regexp">//</span>ajax.cat.net<span class="regexp">/ajax/</span>libs<span class="regexp">/jquery/</span><span class="number">3.2</span>.<span class="number">1</span><span class="regexp">/jquery.min.js</span></div></pre></td></tr></table></figure><h6 id="修改Han字体的CDN"><a href="#修改Han字体的CDN" class="headerlink" title="修改Han字体的CDN"></a>修改Han字体的CDN</h6><p>由于Han字体使用的CDN是cloudflare的，国内速度比较慢，因此替换其CDN:</p><p>在<code>han:</code>后加:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https:<span class="regexp">//</span>cdnjs.cat.net<span class="regexp">/ajax/</span>libs<span class="regexp">/Han/</span><span class="number">3.3</span>.<span class="number">0</span><span class="regexp">/han.min.css</span></div></pre></td></tr></table></figure><h6 id="修改其他的CDN"><a href="#修改其他的CDN" class="headerlink" title="修改其他的CDN"></a>修改其他的CDN</h6><p>最终修改后的配置文件内容如下:<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"># <span class="selector-tag">Script</span> <span class="selector-tag">Vendors</span>.</div><div class="line"># <span class="selector-tag">Set</span> <span class="selector-tag">a</span> <span class="selector-tag">CDN</span> <span class="selector-tag">address</span> <span class="selector-tag">for</span> <span class="selector-tag">the</span> <span class="selector-tag">vendor</span> <span class="selector-tag">you</span> <span class="selector-tag">want</span> <span class="selector-tag">to</span> <span class="selector-tag">customize</span>.</div><div class="line"># <span class="selector-tag">For</span> <span class="selector-tag">example</span></div><div class="line">#    <span class="selector-tag">jquery</span>: <span class="selector-tag">https</span>:<span class="comment">//ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js</span></div><div class="line"># <span class="selector-tag">Be</span> <span class="selector-tag">aware</span> <span class="selector-tag">that</span> <span class="selector-tag">you</span> <span class="selector-tag">should</span> <span class="selector-tag">use</span> <span class="selector-tag">the</span> <span class="selector-tag">same</span> <span class="selector-tag">version</span> <span class="selector-tag">as</span> <span class="selector-tag">internal</span> <span class="selector-tag">ones</span> <span class="selector-tag">to</span> <span class="selector-tag">avoid</span> <span class="selector-tag">potential</span> <span class="selector-tag">problems</span>.</div><div class="line"># <span class="selector-tag">Please</span> <span class="selector-tag">use</span> <span class="selector-tag">the</span> <span class="selector-tag">https</span> <span class="selector-tag">protocol</span> <span class="selector-tag">of</span> <span class="selector-tag">CDN</span> <span class="selector-tag">files</span> <span class="keyword">when</span> you enable https on your site.</div><div class="line"><span class="attribute">vendors</span>:</div><div class="line">  # Internal path prefix. Please do <span class="keyword">not</span> edit it.</div><div class="line">  <span class="attribute">_internal</span>: lib</div><div class="line"></div><div class="line">  # Internal <span class="attribute">version</span>: <span class="number">2.1</span>.<span class="number">3</span></div><div class="line">  <span class="attribute">jquery</span>: <span class="attribute">https</span>:<span class="comment">//ajax.cat.net/ajax/libs/jquery/3.2.1/jquery.min.js</span></div><div class="line"></div><div class="line">  # Internal <span class="attribute">version</span>: <span class="number">2.1</span>.<span class="number">5</span></div><div class="line">  # <span class="attribute">See</span>: <span class="attribute">http</span>:<span class="comment">//fancyapps.com/fancybox/</span></div><div class="line">  <span class="attribute">fancybox</span>: <span class="attribute">https</span>:<span class="comment">//cdnjs.cat.net/ajax/libs/fancybox/3.1.25/jquery.fancybox.min.js</span></div><div class="line">  <span class="attribute">fancybox_css</span>: <span class="attribute">https</span>:<span class="comment">//cdnjs.cat.net/ajax/libs/fancybox/3.1.25/jquery.fancybox.min.css</span></div><div class="line"></div><div class="line">  # Internal <span class="attribute">version</span>: <span class="number">1.0</span>.<span class="number">6</span></div><div class="line">  # <span class="attribute">See</span>: <span class="attribute">https</span>:<span class="comment">//github.com/ftlabs/fastclick</span></div><div class="line">  <span class="attribute">fastclick</span>: <span class="attribute">https</span>:<span class="comment">//cdnjs.cat.net/ajax/libs/fastclick/1.0.6/fastclick.min.js</span></div><div class="line"></div><div class="line">  # Internal <span class="attribute">version</span>: <span class="number">1.9</span>.<span class="number">7</span></div><div class="line">  # <span class="attribute">See</span>: <span class="attribute">https</span>:<span class="comment">//github.com/tuupola/jquery_lazyload</span></div><div class="line">  <span class="attribute">lazyload</span>: <span class="attribute">https</span>:<span class="comment">//cdnjs.cat.net/ajax/libs/lazyload/2.0.3/lazyload-min.js</span></div><div class="line"></div><div class="line">  # Internal <span class="attribute">version</span>: <span class="number">1.2</span>.<span class="number">1</span></div><div class="line">  # <span class="attribute">See</span>: <span class="attribute">http</span>:<span class="comment">//VelocityJS.org</span></div><div class="line">  <span class="attribute">velocity</span>: <span class="attribute">https</span>:<span class="comment">//cdnjs.cat.net/ajax/libs/velocity/1.5.0/velocity.min.js</span></div><div class="line"></div><div class="line">  # Internal <span class="attribute">version</span>: <span class="number">1.2</span>.<span class="number">1</span></div><div class="line">  # <span class="attribute">See</span>: <span class="attribute">http</span>:<span class="comment">//VelocityJS.org</span></div><div class="line">  <span class="attribute">velocity_ui</span>: <span class="attribute">https</span>:<span class="comment">//cdnjs.cat.net/ajax/libs/velocity/1.5.0/velocity.ui.min.js</span></div><div class="line"></div><div class="line">  # Internal <span class="attribute">version</span>: <span class="number">0.7</span>.<span class="number">9</span></div><div class="line">  # <span class="attribute">See</span>: <span class="attribute">https</span>:<span class="comment">//faisalman.github.io/ua-parser-js/</span></div><div class="line">  <span class="attribute">ua_parser</span>: <span class="attribute">https</span>:<span class="comment">//cdnjs.cat.net/ajax/libs/UAParser.js/0.7.9/ua-parser.min.js</span></div><div class="line"></div><div class="line">  # Internal <span class="attribute">version</span>: <span class="number">4.6</span>.<span class="number">2</span></div><div class="line">  # <span class="attribute">See</span>: <span class="attribute">http</span>:<span class="comment">//fontawesome.io/</span></div><div class="line">  <span class="attribute">fontawesome</span>: <span class="attribute">https</span>:<span class="comment">//cdnjs.cat.net/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css</span></div><div class="line"></div><div class="line">  # Internal <span class="attribute">version</span>: <span class="number">1</span></div><div class="line">  # <span class="attribute">https</span>:<span class="comment">//www.algolia.com</span></div><div class="line">  <span class="attribute">algolia_instant_js</span>: </div><div class="line">  <span class="attribute">algolia_instant_css</span>:</div><div class="line"></div><div class="line">  # Internal <span class="attribute">version</span>: <span class="number">1.0</span>.<span class="number">2</span></div><div class="line">  # <span class="attribute">See</span>: <span class="attribute">https</span>:<span class="comment">//github.com/HubSpot/pace</span></div><div class="line">  # Or use direct links <span class="attribute">below</span>:</div><div class="line">  # <span class="attribute">pace</span>: <span class="comment">//cdn.bootcss.com/pace/1.0.2/pace.min.js</span></div><div class="line">  # <span class="attribute">pace_css</span>: <span class="comment">//cdn.bootcss.com/pace/1.0.2/themes/blue/pace-theme-flash.min.css</span></div><div class="line">  <span class="attribute">pace</span>:</div><div class="line">  <span class="attribute">pace_css</span>:</div><div class="line"></div><div class="line">  # Internal <span class="attribute">version</span>: <span class="number">1.0</span>.<span class="number">0</span></div><div class="line">  # <span class="attribute">https</span>:<span class="comment">//github.com/hustcc/canvas-nest.js</span></div><div class="line">  <span class="attribute">canvas_nest</span>: <span class="attribute">https</span>:<span class="comment">//cdnjs.cat.net/ajax/libs/canvas-nest.js/1.0.1/canvas-nest.min.js</span></div><div class="line"></div><div class="line">  # three</div><div class="line">  <span class="attribute">three</span>:</div><div class="line"></div><div class="line">  # three_waves</div><div class="line">  # <span class="attribute">https</span>:<span class="comment">//github.com/jjandxa/three_waves</span></div><div class="line">  <span class="attribute">three_waves</span>:</div><div class="line"></div><div class="line">  # three_waves</div><div class="line">  # <span class="attribute">https</span>:<span class="comment">//github.com/jjandxa/canvas_lines</span></div><div class="line">  <span class="attribute">canvas_lines</span>:</div><div class="line"></div><div class="line">  # three_waves</div><div class="line">  # <span class="attribute">https</span>:<span class="comment">//github.com/jjandxa/canvas_sphere</span></div><div class="line">  <span class="attribute">canvas_sphere</span>:</div><div class="line"></div><div class="line">  # Internal <span class="attribute">version</span>: <span class="number">1.0</span>.<span class="number">0</span></div><div class="line">  # <span class="attribute">https</span>:<span class="comment">//github.com/zproo/canvas-ribbon</span></div><div class="line">  <span class="attribute">canvas_ribbon</span>:</div><div class="line"></div><div class="line">  # Internal <span class="attribute">version</span>: <span class="number">3.3</span>.<span class="number">0</span></div><div class="line">  # <span class="attribute">https</span>:<span class="comment">//github.com/ethantw/Han</span></div><div class="line">  <span class="attribute">han</span>: <span class="attribute">https</span>:<span class="comment">//cdnjs.cat.net/ajax/libs/Han/3.3.0/han.min.css</span></div></pre></td></tr></table></figure></p><p>然后找出网页中所有其他的使用cloudflare加速的内容，替换掉。<br>$$[J<em>\alpha(x) = \sum</em>{m=0}^\infty \frac{(-1)^m}{m! \Gamma (m + \alpha + 1)} {\left({ \frac{x}{2} }\right)}^{2m + \alpha}]$$</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;捣鼓个人博客也有一段时间了，其间加了不少的插件，改来改去，最后打开也变得很慢了。问题主要有两个方面，一个是网络问题，因为托管在Github上，国内访问一直很慢，后来还是迁移到Coding上了，妥协了，给他加了个&lt;code&gt;Hosted by Coding Pages&lt;/code&gt;。另一方面则是加载的问题，由于多了许多插件，导致网页加载变慢，特别是在添加&lt;a href=&quot;https://github.com/EYHN/hexo-helper-live2d&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;live2d&lt;/a&gt;之后。所以打算做些工作优化一下博客。&lt;br&gt;
    
    </summary>
    
      <category term="博客" scheme="http://newdee.cf/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Hexo" scheme="http://newdee.cf/tags/Hexo/"/>
    
      <category term="Nofollow" scheme="http://newdee.cf/tags/Nofollow/"/>
    
      <category term="Emoji" scheme="http://newdee.cf/tags/Emoji/"/>
    
      <category term="Gulp" scheme="http://newdee.cf/tags/Gulp/"/>
    
  </entry>
  
  <entry>
    <title>Next主题的Gitalk移植</title>
    <link href="http://newdee.cf/posts/4da30c7/"/>
    <id>http://newdee.cf/posts/4da30c7/</id>
    <published>2017-09-24T07:34:05.000Z</published>
    <updated>2017-10-17T08:38:12.180Z</updated>
    
    <content type="html"><![CDATA[<p>之前是由于各种评论服务都挂了，后来采用来必力，偶尔抽了一次风，所以当时打算用Github的Issue当评论。<br>在网上找了很多，大多是Gitment的，也照着网上的教程试了一遍，也装成功了，具体过程都添加在建站时候的一篇文档里了，并没有单独写一篇文章，地址<a href="http://newdee.cf/posts/6ed4d3bc/">在这</a>。<br>但是Gitment有个问题，对于每一篇文章都得手动去初始化，很麻烦。后来看到<a href="https://github.com/gitalk/gitalk" rel="external nofollow noopener noreferrer" target="_blank">Gitalk</a>，样式也挺漂亮的，于是打算尝试一下移植到Next主题上。<br><a id="more"></a></p><h4 id="新建Gitalk的swig文件"><a href="#新建Gitalk的swig文件" class="headerlink" title="新建Gitalk的swig文件"></a>新建Gitalk的swig文件</h4><p>由于Next主题的可扩展性还算好，为了方便统一管理，尽量不修改已经存在的文件。<br>首先创建Gitalk的swig文件，放在<code>next/layout/_third-party/comments</code>文件夹下，命名为gitalk.swig。内容如下<br><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> page.comments &amp;&amp; theme.gitalk.enable %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml"></span></div><div class="line"><span class="xml">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://unpkg.com/gitalk/dist/gitalk.css"</span>&gt;</span></span></div><div class="line"><span class="xml">  </span></div><div class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/gitalk/dist/gitalk.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line"><span class="xml"></span></div><div class="line"><span class="xml">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span></div><div class="line"><span class="xml">var gitalk = new Gitalk(&#123;</span></div><div class="line"><span class="xml">  clientID: '</span><span class="template-variable">&#123;&#123; theme.gitalk.ClientID &#125;&#125;</span><span class="xml">',</span></div><div class="line"><span class="xml">  clientSecret: '</span><span class="template-variable">&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;</span><span class="xml">',</span></div><div class="line"><span class="xml">  repo: '</span><span class="template-variable">&#123;&#123; theme.gitalk.repo &#125;&#125;</span><span class="xml">',</span></div><div class="line"><span class="xml">  owner: '</span><span class="template-variable">&#123;&#123; theme.gitalk.githubID &#125;&#125;</span><span class="xml">',</span></div><div class="line"><span class="xml">  admin: ['</span><span class="template-variable">&#123;&#123; theme.gitalk.adminUser &#125;&#125;</span><span class="xml">'], </span></div><div class="line"><span class="xml">  id: location.pathname,</span></div><div class="line"><span class="xml">  distractionFreeMode: '</span><span class="template-variable">&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;</span><span class="xml">'</span></div><div class="line"><span class="xml">&#125;)</span></div><div class="line"><span class="xml"></span></div><div class="line"><span class="xml">gitalk.render('gitalk-container')           </span></div><div class="line"><span class="xml">       <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure></p><h4 id="在主题文件layout-third-party-comments-index-swig中引入刚刚添加的文件。"><a href="#在主题文件layout-third-party-comments-index-swig中引入刚刚添加的文件。" class="headerlink" title="在主题文件layout/_third-party/comments/index.swig中引入刚刚添加的文件。"></a>在主题文件<code>layout/_third-party/comments/index.swig</code>中引入刚刚添加的文件。</h4><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> 'gitalk.swig' %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><h4 id="修改主题评论代码"><a href="#修改主题评论代码" class="headerlink" title="修改主题评论代码"></a>修改主题评论代码</h4><p>在<code>layout/_partials/comments.swig</code>文件中找到最后一个if分支，应该是这两句:<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&#123;% elseif theme.valine.appid <span class="keyword">and</span> theme.valine.appkey %&#125;</div><div class="line">      &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"vcomments"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</div></pre></td></tr></table></figure></p><p>在最后一个if分支后加一个Gitalk的分支:<br><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">elseif</span> theme.gitalk.enable %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"gitalk-container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div></pre></td></tr></table></figure></p><h4 id="在主题配置文件中引入GItalk"><a href="#在主题配置文件中引入GItalk" class="headerlink" title="在主题配置文件中引入GItalk"></a>在主题配置文件中引入GItalk</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">vim</span> themes/<span class="keyword">next</span>/_config.xml</div></pre></td></tr></table></figure><p>在其中加入:<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="attr">gitalk:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  githubID:</span> <span class="string">newdee</span> </div><div class="line"><span class="attr">  repo:</span> <span class="string">BlogComments</span></div><div class="line"><span class="attr">  ClientID:</span> <span class="string">******</span></div><div class="line"><span class="attr">  ClientSecret:</span> <span class="string">******</span></div><div class="line"><span class="attr">  adminUser:</span> <span class="string">newdee</span></div><div class="line"><span class="attr">  distractionFreeMode:</span> <span class="literal">true</span></div></pre></td></tr></table></figure></p><p>其中githubID是你的Github用户名，repo是你用来存放评论Issue的仓库，可以不是Blog的仓库。adminUser是你的用户名，主要用来初始化评论的。clientID和client_secret是你的授权客户端ID和密钥。具体获得方法是在Github的设置界面选择<code>Authorized Github Apps</code>，然后<code>Register a new application</code>，将<code>Authorization callback URL</code>设置为你的Blog的域名，然后就可以获得clientID和client_secret了。  </p><p>基本上到这里就可以直接用了,打开页面会提示你初始化评论框。如果要设置按钮的样式，可以参照以下步骤:  </p><h4 id="新建样式文件"><a href="#新建样式文件" class="headerlink" title="新建样式文件"></a>新建样式文件</h4><p>要设置评论框的样式，可以在<code>source/css/_common/components/third-party/</code>文件夹下，新建一个<code>gitalk.styl</code>文件，向其中加入如下内容:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.gt-header</span> <span class="selector-tag">a</span>, <span class="selector-class">.gt-comments</span> <span class="selector-tag">a</span>, <span class="selector-class">.gt-popup</span> a</div><div class="line">  <span class="attribute">border-bottom</span>: none;</div><div class="line"><span class="selector-class">.gt-container</span> <span class="selector-class">.gt-popup</span> <span class="selector-class">.gt-action</span><span class="selector-class">.is--active</span>:before</div><div class="line">  <span class="attribute">top</span>: <span class="number">0.7em</span>;</div></pre></td></tr></table></figure></p><p>可以根据自己的喜好添加修改样式。</p><h4 id="引入样式文件"><a href="#引入样式文件" class="headerlink" title="引入样式文件"></a>引入样式文件</h4><p>在主题目录下的<code>source/css/_common/components/third-party/third-party.styl</code>文件中引入:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">import</span> <span class="string">"gitalk"</span>;</div></pre></td></tr></table></figure></p><h4 id="Issue重复的问题"><a href="#Issue重复的问题" class="headerlink" title="Issue重复的问题"></a>Issue重复的问题</h4><p>到这里是可以用了的，但是初始化过程中发现Issue页面有两个一样的，后来发现是因为它把直接文章页面地址和点击阅读更多所跳转的带<code>#more</code>的页面当成两个页面，因此重复创建Issue了。<br>解决方案:<br>由于默认的id参数是<code>location.href</code>，可以将其改为<code>location.pathname</code>，即可解决当前状况。<br>即在<code>gitalk.swig</code>文件中的<code>admin</code>下面加一行:<br><figure class="highlight qml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">id:</span><span class="string"> location.pathname</span>,</div></pre></td></tr></table></figure></p><p>至此，大功告成。<br>不过配置完才发现，Gitalk也是需要一篇文章一篇文章的初始化的，并不能自动将所有的文章一次性初始化完成。</p><h4 id="本地化"><a href="#本地化" class="headerlink" title="本地化"></a>本地化</h4><p>由于Gitalk是使用UNPKG来给npm的CDN加速的，但是网络延迟有时候会稍高，可以选择直接下载js和css文件到本地。<br>将下载的<a href="https://unpkg.com/gitalk@1.1.4/dist/gitalk.css" rel="external nofollow noopener noreferrer" target="_blank">css</a>文件放于主题目录的<code>source/css</code>目录下，<a href="https://unpkg.com/gitalk@1.1.4/dist/gitalk.min.js" rel="external nofollow noopener noreferrer" target="_blank">js</a>放于<code>source/js/src</code>目录下。<br>将<code>layout/_third-party/comments/gitalk,swig</code>文件中的超链接两行修改一下:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/css/gitalk.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/src/gitalk.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p><p>然后就可以正常加载了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前是由于各种评论服务都挂了，后来采用来必力，偶尔抽了一次风，所以当时打算用Github的Issue当评论。&lt;br&gt;在网上找了很多，大多是Gitment的，也照着网上的教程试了一遍，也装成功了，具体过程都添加在建站时候的一篇文档里了，并没有单独写一篇文章，地址&lt;a href=&quot;http://newdee.cf/posts/6ed4d3bc/&quot;&gt;在这&lt;/a&gt;。&lt;br&gt;但是Gitment有个问题，对于每一篇文章都得手动去初始化，很麻烦。后来看到&lt;a href=&quot;https://github.com/gitalk/gitalk&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Gitalk&lt;/a&gt;，样式也挺漂亮的，于是打算尝试一下移植到Next主题上。&lt;br&gt;
    
    </summary>
    
      <category term="博客" scheme="http://newdee.cf/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Hexo" scheme="http://newdee.cf/tags/Hexo/"/>
    
      <category term="Next" scheme="http://newdee.cf/tags/Next/"/>
    
      <category term="Gitalk" scheme="http://newdee.cf/tags/Gitalk/"/>
    
      <category term="Github Issue" scheme="http://newdee.cf/tags/Github-Issue/"/>
    
  </entry>
  
  <entry>
    <title>Bash和Tmux的Powerline</title>
    <link href="http://newdee.cf/posts/1dd5cd65/"/>
    <id>http://newdee.cf/posts/1dd5cd65/</id>
    <published>2017-09-22T12:02:24.000Z</published>
    <updated>2017-10-29T05:46:03.528Z</updated>
    
    <content type="html"><![CDATA[<p>Powerline可以说是一个状态提示栏，当你在终端操作各种指令的时候，状态提示可以告诉你你当前的一些信息，有时候会提高一些工作效率，不过更多时候可能只是觉得很cool吧。<br>主要说两个Powerline，一个是Bash的（Zsh算一类），一个是Tmux的。由于在Tmux中的状态提示比较丰富了，所以不用Vim了，感觉装多了插件，Vim越来越慢了。<br><a id="more"></a></p><h4 id="Bash的Powerline"><a href="#Bash的Powerline" class="headerlink" title="Bash的Powerline"></a>Bash的Powerline</h4><h5 id="powerline-shell安装"><a href="#powerline-shell安装" class="headerlink" title="powerline-shell安装"></a>powerline-shell安装</h5><p>在Bash下安装Powerline，现在改名叫<code>powerline-shell</code>了，现在的仓库地址<a href="https://github.com/banga/powerline-shell" rel="external nofollow noopener noreferrer" target="_blank">在这</a>。<br>环境Ubuntu，不过与环境关系不大，直接用pip管理器安装:<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install powerline-<span class="keyword">shell</span><span class="bash"></span></div></pre></td></tr></table></figure></p><h5 id="powerline-shell配置"><a href="#powerline-shell配置" class="headerlink" title="powerline-shell配置"></a>powerline-shell配置</h5><p>首先生成配置文件:<br><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">powerline-shell --<span class="keyword">generate</span>-<span class="keyword">config</span> &gt; ~/<span class="variable">.powerline</span>-shell<span class="variable">.json</span></div></pre></td></tr></table></figure></p><p>然后编辑配置文件，<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim ~/<span class="selector-class">.powerline-shell</span><span class="selector-class">.json</span></div></pre></td></tr></table></figure></p><p>可以参照这个<a href="https://github.com/b-ryan/dotfiles/blob/master/home/powerline-shell.json" rel="external nofollow noopener noreferrer" target="_blank">Demo</a>。<br>其中参数具体含义在<code>Repo</code>中的<a href="https://github.com/banga/powerline-shell" rel="external nofollow noopener noreferrer" target="_blank">Readme</a>上有说明。  </p><h5 id="字体库安装"><a href="#字体库安装" class="headerlink" title="字体库安装"></a>字体库安装</h5><p>由于Powerline所用的字体，一般的系统字体库中并不具备，如状态提示栏中的特殊符号。包括Bash和Tumx的Powerline等，都需要字体支持，不然可能会比较丑。<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/powerline/fonts</div><div class="line"><span class="keyword">cd</span> fonts</div><div class="line"><span class="keyword">sh</span> install.<span class="keyword">sh</span></div></pre></td></tr></table></figure></p><h6 id="应用Powerline字体"><a href="#应用Powerline字体" class="headerlink" title="应用Powerline字体"></a>应用Powerline字体</h6><p>安装完成之后需要选择所用的字体，因为用了Powerline，所以需要选择支持Powerline的字体。<br>具体方法：<br>首先在Terminal上的菜单里选择编辑Preference，然后在选择Profiles, 编辑所用的Profiles，再在Text　Appearance中选择Custom font，在里面搜索Powerline的基本都是支持Powerline的字体了，选择自己喜欢的一款就好。<br>到这里，Bash的Powerline就算配置好了。</p><h4 id="Tmux的Powerline"><a href="#Tmux的Powerline" class="headerlink" title="Tmux的Powerline"></a>Tmux的Powerline</h4><p>其实Powerline的配置大多类似，这里直接从官方<a href="https://github.com/erikw/tmux-powerline" rel="external nofollow noopener noreferrer" target="_blank">Repo</a>克隆下来。  </p><h5 id="下载tmux-powerline"><a href="#下载tmux-powerline" class="headerlink" title="下载tmux-powerline"></a>下载tmux-powerline</h5><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd ~/some/path/</div><div class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/erikw/tmux-powerline.git</div></pre></td></tr></table></figure><h5 id="Tmux配置"><a href="#Tmux配置" class="headerlink" title="Tmux配置"></a>Tmux配置</h5><p>一般在.tmux.conf文件中添加Tmux的配置:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim ~/<span class="selector-class">.tmux</span><span class="selector-class">.conf</span></div></pre></td></tr></table></figure></p><p>向其中添加如下内容:<br><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">set-option</span> -g <span class="string">status </span><span class="string">on</span></div><div class="line"><span class="string">set-</span><span class="string">option </span>-g <span class="string">status-interval </span>2</div><div class="line"><span class="built_in">set-option</span> -g <span class="string">status-justify </span><span class="string">"centre"</span></div><div class="line"><span class="built_in">set-option</span> -g <span class="string">status-left-</span><span class="string">length </span><span class="string">60</span></div><div class="line"><span class="string">set-</span><span class="string">option </span>-g <span class="string">status-right-</span><span class="string">length </span><span class="string">90</span></div><div class="line"><span class="string">set-</span><span class="string">option </span>-g <span class="string">status-left </span><span class="string">"#(~/path/to/tmux-powerline/powerline.sh left)"</span></div><div class="line"><span class="built_in">set-option</span> -g <span class="string">status-right </span><span class="string">"#(~/path/to/tmux-powerline/powerline.sh right)"</span></div></pre></td></tr></table></figure></p><p>其中<code>~/path/to/tmux-powerline/powerline.sh</code>是克隆的tmux-powerline的目录。<br>这些就是基本配置，已经足够了。<br>也可以控制左右状态栏的可见性:<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">bind C-[ <span class="keyword">run</span><span class="bash"> <span class="string">'~/path/to/tmux-powerline/mute_powerline.sh left'</span><span class="comment"># Mute left statusbar.</span></span></div><div class="line"><span class="bash"><span class="built_in">bind</span> C-] run <span class="string">'~/path/to/tmux-powerline/mute_powerline.sh right'</span><span class="comment"># Mute right statusbar.</span></span></div></pre></td></tr></table></figure></p><p>如果喜欢多窗口的Powerline可以添加下面一句话:<br><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">set-window-option</span> -g <span class="string">window-status-</span><span class="string">current-format </span><span class="string">"#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"</span></div></pre></td></tr></table></figure></p><h5 id="天气配置"><a href="#天气配置" class="headerlink" title="天气配置"></a>天气配置</h5><p>Tmux的状态栏的功能有:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">AN 和<span class="built_in"> WAN IP </span>地址</div><div class="line">MPD、Rhythmbox、Banshee、MOC、Audacious、cmus 等播放器的正在播放信息</div><div class="line">Gmail、Maildir、mbox 的新到邮件数</div><div class="line">电池状态</div><div class="line">天气预报</div><div class="line">系统负载、CPU 占用、持续运行时间、网络速度</div><div class="line">当前目录的 Git、SVN、Mercurial 分支</div><div class="line">日期及时间</div><div class="line">主机名称</div><div class="line">tmux 信息</div></pre></td></tr></table></figure></p><p>但是到这里打开Tmux的时候，会显示未设置地区，所以显示不了天气。<br>具体方法是编辑tmux-powerline的目录中文件:<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim ~<span class="regexp">/.tmux/</span>tmux-powerline<span class="regexp">/segments/</span>weather.sh</div></pre></td></tr></table></figure></p><p>找到其中<code>export TMUX_POWERLINE_SEG_WEATHER_LOCATION</code>这个变量。<br>里面的注释也有说明，需要你自己获取你的地区ID。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> Your location. Find a code that works <span class="keyword">for</span> you:</span></div><div class="line"><span class="meta">#</span><span class="bash"> 1. Go to Yahoo weather http://weather.yahoo.com/</span></div><div class="line"><span class="meta">#</span><span class="bash"> 2. Find the weather <span class="keyword">for</span> you location </span></div><div class="line"><span class="meta">#</span><span class="bash"> 3. Copy the last numbers <span class="keyword">in</span> that URL. e.g. <span class="string">"http://weather.yahoo.com/united-states/california/newport-beach-12796587/"</span> has the numbers <span class="string">"12796587"</span></span></div></pre></td></tr></table></figure></p><p>不过填了自己的ID之后可能还是不能显示天气。这时候只需要调整一下语句的顺序，将<code>export TMUX_POWERLINE_SEG_WEATHER_LOCATION=&quot;2137109&quot;</code>这句话放到第一个if语句前面，最后开起来应该是这样:<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">TMUX_POWERLINE_SEG_WEATHER_DATA_PROVIDER_DEFAULT=<span class="string">"yahoo"</span></div><div class="line">TMUX_POWERLINE_SEG_WEATHER_UNIT_DEFAULT=<span class="string">"c"</span> </div><div class="line">TMUX_POWERLINE_SEG_WEATHER_UPDATE_PERIOD_DEFAULT=<span class="string">"600"</span></div><div class="line"><span class="keyword">export</span> TMUX_POWERLINE_SEG_WEATHER_LOCATION=<span class="string">"2137109"</span></div></pre></td></tr></table></figure></p><p>再回到Tmux，应该恢复正常了。<br>进行到这里，基本上算是大功告成了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Powerline可以说是一个状态提示栏，当你在终端操作各种指令的时候，状态提示可以告诉你你当前的一些信息，有时候会提高一些工作效率，不过更多时候可能只是觉得很cool吧。&lt;br&gt;主要说两个Powerline，一个是Bash的（Zsh算一类），一个是Tmux的。由于在Tmux中的状态提示比较丰富了，所以不用Vim了，感觉装多了插件，Vim越来越慢了。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://newdee.cf/categories/Linux/"/>
    
    
      <category term="ubuntu" scheme="http://newdee.cf/tags/ubuntu/"/>
    
      <category term="bash powerline" scheme="http://newdee.cf/tags/bash-powerline/"/>
    
      <category term="tmux powerline" scheme="http://newdee.cf/tags/tmux-powerline/"/>
    
      <category term="powerline" scheme="http://newdee.cf/tags/powerline/"/>
    
  </entry>
  
  <entry>
    <title>IPv4下使用IPv6</title>
    <link href="http://newdee.cf/posts/8544442c/"/>
    <id>http://newdee.cf/posts/8544442c/</id>
    <published>2017-09-21T06:17:25.000Z</published>
    <updated>2017-10-29T05:46:35.231Z</updated>
    
    <content type="html"><![CDATA[<p>在IPv4环境下使用IPv6。当前测试所用系统:ubuntu。<br>因为暂时离开学校，而IPv6目前尚未普及，只有部分高效有所搭建，但希望访问以前的PT站，因此这里记录一下之前的“4 to 6” 的搭建过程。<br>目前所用方法暂时有两种有效，加上SS代理，那就是三种了。<br><a id="more"></a></p><h4 id="使用miredo网络工具"><a href="#使用miredo网络工具" class="headerlink" title="使用miredo网络工具"></a>使用miredo网络工具</h4><p>miredo主要用于BSD和Linux的IPV6 Teredo隧道链接，可以转换不支持IPV6的网络连接IPV6，内核中需要有IPV6和TUN隧道支持。用法参数见其<a href="https://zh.wikipedia.org/wiki/Miredo" rel="external nofollow noopener noreferrer" target="_blank">WIKI</a><br>直接用命令行比较方便，这个也免去了很多复杂的配置，具体过程如下:</p><h5 id="安装miredo"><a href="#安装miredo" class="headerlink" title="安装miredo"></a>安装miredo</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo apt <span class="keyword">update</span></div><div class="line">sudo apt <span class="keyword">install</span> miredo</div></pre></td></tr></table></figure><p>这个很简单，安装完成之后启动就可以创建一个”4 to 6”的虚拟转换网卡。<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">sudo miredo</span></div></pre></td></tr></table></figure></p><p>使用<code>ifconfig</code>可以查看到多了一个网卡：<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">teredo</span>    <span class="selector-tag">Link</span> <span class="selector-tag">encap</span><span class="selector-pseudo">:UNSPEC</span>  <span class="selector-tag">HWaddr</span> <span class="selector-tag">00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00</span>  </div><div class="line">          <span class="selector-tag">inet6</span> <span class="selector-tag">addr</span>: <span class="selector-tag">2001</span><span class="selector-pseudo">:0</span><span class="selector-pseudo">:53aa</span><span class="selector-pseudo">:64c</span><span class="selector-pseudo">:20e0</span><span class="selector-pseudo">:6050</span><span class="selector-pseudo">:861c</span><span class="selector-pseudo">:ebe4</span>/<span class="selector-tag">32</span> <span class="selector-tag">Scope</span><span class="selector-pseudo">:Global</span></div><div class="line">          <span class="selector-tag">inet6</span> <span class="selector-tag">addr</span>: <span class="selector-tag">fe80</span><span class="selector-pseudo">::7d24</span><span class="selector-pseudo">:d8ab</span><span class="selector-pseudo">:cc69</span><span class="selector-pseudo">:a96b</span>/<span class="selector-tag">64</span> <span class="selector-tag">Scope</span><span class="selector-pseudo">:Link</span></div><div class="line">          <span class="selector-tag">inet6</span> <span class="selector-tag">addr</span>: <span class="selector-tag">fe80</span><span class="selector-pseudo">::ffff</span><span class="selector-pseudo">:ffff</span><span class="selector-pseudo">:ffff</span>/<span class="selector-tag">64</span> <span class="selector-tag">Scope</span><span class="selector-pseudo">:Link</span></div><div class="line">          <span class="selector-tag">UP</span> <span class="selector-tag">POINTOPOINT</span> <span class="selector-tag">RUNNING</span> <span class="selector-tag">NOARP</span> <span class="selector-tag">MULTICAST</span>  <span class="selector-tag">MTU</span><span class="selector-pseudo">:1280</span>  <span class="selector-tag">Metric</span><span class="selector-pseudo">:1</span></div><div class="line">          <span class="selector-tag">RX</span> <span class="selector-tag">packets</span><span class="selector-pseudo">:0</span> <span class="selector-tag">errors</span><span class="selector-pseudo">:0</span> <span class="selector-tag">dropped</span><span class="selector-pseudo">:0</span> <span class="selector-tag">overruns</span><span class="selector-pseudo">:0</span> <span class="selector-tag">frame</span><span class="selector-pseudo">:0</span></div><div class="line">          <span class="selector-tag">TX</span> <span class="selector-tag">packets</span><span class="selector-pseudo">:1</span> <span class="selector-tag">errors</span><span class="selector-pseudo">:0</span> <span class="selector-tag">dropped</span><span class="selector-pseudo">:0</span> <span class="selector-tag">overruns</span><span class="selector-pseudo">:0</span> <span class="selector-tag">carrier</span><span class="selector-pseudo">:0</span></div><div class="line">          <span class="selector-tag">collisions</span><span class="selector-pseudo">:0</span> <span class="selector-tag">txqueuelen</span><span class="selector-pseudo">:500</span> </div><div class="line">          <span class="selector-tag">RX</span> <span class="selector-tag">bytes</span><span class="selector-pseudo">:0</span> (<span class="number">0.0</span> B)  <span class="selector-tag">TX</span> <span class="selector-tag">bytes</span><span class="selector-pseudo">:48</span> (<span class="number">48.0</span> B)</div></pre></td></tr></table></figure></p><p>然后ping一下Google的IPv6地址，应该是可以ping通了。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ping6 ipv6<span class="selector-class">.google</span><span class="selector-class">.com</span></div></pre></td></tr></table></figure></p><p>不过到这里还没完,ipv6还可以用来访问一些外面的网站。</p><h5 id="修改Hosts文件"><a href="#修改Hosts文件" class="headerlink" title="修改Hosts文件"></a>修改Hosts文件</h5><p>如果本来就有ipv6地址，前面的就都不用做了。<br>Hosts文件参考最新地址，见其<a href="https://github.com/lennylxx/ipv6-hosts" rel="external nofollow noopener noreferrer" target="_blank">Repo</a>。<br>也可以直接拷贝Hosts文件内容，地址<a href="https://raw.githubusercontent.com/lennylxx/ipv6-hosts/master/hosts" rel="external nofollow noopener noreferrer" target="_blank">在这</a>。<br>因为内容比较多，复制起来比较麻烦，可以直接保存为txt，比如<code>hosts.txt</code>。<br>然后，<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat hosts.txt <span class="meta">&gt;&gt; </span>/etc/hosts</div></pre></td></tr></table></figure></p><p>然后就可以直接访问Google，YouTube等网站了。不过由于是<code>4to6</code>的网络，没有自己的ipv6地址，所以速度不会太快。</p><h4 id="HE-net方案"><a href="#HE-net方案" class="headerlink" title="HE.net方案"></a>HE.net方案</h4><p>另一种ipv6代理是He.net方案，可以直接访问其<a href="http://he.net/" rel="external nofollow noopener noreferrer" target="_blank">官网</a>。  </p><h5 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h5><p>首先是注册Tunnel broker，地址<a href="https://www.tunnelbroker.net/" rel="external nofollow noopener noreferrer" target="_blank">在这</a>，里面的邮箱和密码填好就可以，其余的随便填一下。<br>然后进入你的Tunnel页面。</p><h5 id="创建Tunnel"><a href="#创建Tunnel" class="headerlink" title="创建Tunnel"></a>创建Tunnel</h5><p>点击User Function中的Create Regular Tunne，然后选择一个地区的Tunnel服务器，一般选延迟最小的，可以通过ping判断。虽然是在亚洲，但东京和HK的延迟还是很高的，所以不要通过地点判断。<br>然后就是输入你的IPv4地址，注意是外网IP。<br>点击创建，创建成功后进入Example Configuration， 选择你的操作系统，它会给出一段代码，用于配置你的电脑的网卡的。<br>我这里是Ubuntu，所以选择Debian/Ubuntu，然后给出的代码如下:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">auto he-ipv6</div><div class="line">iface he-ipv6 inet6 v4tunnel</div><div class="line">       <span class="built_in"> address </span>******</div><div class="line">        netmask 64</div><div class="line">        endpoint ******</div><div class="line">        local ******</div><div class="line">        ttl 255</div><div class="line">        gateway ******</div></pre></td></tr></table></figure></p><p>这个就是网卡的配置，相当于新建一个自动启动的网卡，然后分配了ip。<br>直接复制粘贴到interface文件中即可:<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim <span class="regexp">/etc/</span>network/<span class="class"><span class="keyword">interface</span></span></div></pre></td></tr></table></figure></p><p>注意，如果电脑没有公网IP，则需要把local的IP地址改为你的私有地址，如<code>192.168.2.100</code></p><h5 id="启用网卡"><a href="#启用网卡" class="headerlink" title="启用网卡"></a>启用网卡</h5><p>添加完之后，需要启用刚刚配置的<code>4 to 6</code>网卡，<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">sudo</span> ifup he-ipv6</div></pre></td></tr></table></figure></p><p>然后就可以访问V6的PT站和外面的一些网站了。<br>当然，速度虽然取决与你的服务器地区，但总体速度也不会很快。  </p><h4 id="梯子代理IPv6"><a href="#梯子代理IPv6" class="headerlink" title="梯子代理IPv6"></a>梯子代理IPv6</h4><p>这个之前搭建梯子的时候应该说过了，配置比较简单，如果用SS的 话，直接在SS服务器的configure文件中将server地址改为<code>::</code>即可：<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">server:</span> <span class="string">"::"</span></div></pre></td></tr></table></figure></p><p><code>::</code>会同时转发V6和V4流量。当然，前提是在选择服务器的时候启用了IPv6地址。<br>如果服务器延迟低，IPv6下载也会很快的。不过如果用VPS只是为了搭建一个SS，其余的什么都不管，一旦受到Dos-attack，可能流量就一晚上走完了。DDos易攻难守，而且这对于提供虚拟机的服务商也是一种损失。所以最好还需要一点网络和服务器维护的手段。  </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在IPv4环境下使用IPv6。当前测试所用系统:ubuntu。&lt;br&gt;因为暂时离开学校，而IPv6目前尚未普及，只有部分高效有所搭建，但希望访问以前的PT站，因此这里记录一下之前的“4 to 6” 的搭建过程。&lt;br&gt;目前所用方法暂时有两种有效，加上SS代理，那就是三种了。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://newdee.cf/categories/Linux/"/>
    
    
      <category term="ubuntu" scheme="http://newdee.cf/tags/ubuntu/"/>
    
      <category term="IPv6" scheme="http://newdee.cf/tags/IPv6/"/>
    
      <category term="隧道" scheme="http://newdee.cf/tags/%E9%9A%A7%E9%81%93/"/>
    
      <category term="HE" scheme="http://newdee.cf/tags/HE/"/>
    
  </entry>
  
  <entry>
    <title>FFmpeg常用命令</title>
    <link href="http://newdee.cf/posts/3c4e255/"/>
    <id>http://newdee.cf/posts/3c4e255/</id>
    <published>2017-08-19T07:24:01.000Z</published>
    <updated>2017-10-29T05:54:27.532Z</updated>
    
    <content type="html"><![CDATA[<p>又是一阵时间没回来了，中间偶然获得了You-get这个神器，果然py大法好。<br>但是善难养成，恶易成习。<br>坚持太难了。<br><a id="more"></a><br>还值得一提的是，vimium这个chrome插件，使得chrome浏览器基本能摆脱鼠标的束缚。当然，只是基本。<br>还有免费的流程图绘制，<a href="https://www.draw.io" rel="external nofollow noopener noreferrer" target="_blank">Draw.io</a>.<br>然后在用You-get的时候发现了pysocks和tsocks两个小工具。有梯子会很有用。<br>还有就是script录制终端和scriptreplay播放录制终端。<br>You-get需要依赖FFmpeg，当我安装You-get的时候，发现FFmpeg已经有了，记不得什么时候装的。既然没印象，那应该就不是什么困难的事了。那FFmpeg安装就免介绍了。<br>顺便记一下，因为又有一段时间没来阁子更新，hexo貌似又出问题了，试了很多方法没解决，npm和nodejs也是卸了重装，最后确定不是这个问题，然后又重装hexo，结果发现还是一样的bus error。后来新建了一个文件夹用hexo，发现正常初始化，所以大概是package的版本不兼容导致的了。<br>于是重新装一下<code>package.json</code>文件里的插件。<br>顺便提一件事，今天发现手环断了。<br>现在重新继续。  </p><h3 id="简要介绍"><a href="#简要介绍" class="headerlink" title="简要介绍"></a>简要介绍</h3><p>FFmpeg 的官网<a href="https://www.ffmpeg.org/" rel="external nofollow noopener noreferrer" target="_blank">在这</a>,github<a href="https://github.com/FFmpeg/FFmpeg" rel="external nofollow noopener noreferrer" target="_blank">主页</a>。</p><p>FFmpeg的项目主要有几个部分:</p><ol><li>视频文件命令行转换工具。</li><li>ffserver基于Http、RTSP用于实时广播的多媒体服务器，也可以支持时间平移。</li><li>ffpaly用sdl和FFmpeg开发的一个简单的媒体播放器。</li><li>libavcodec包含了所有的FFmpeg音视频解码的库。为了保证最优性能和高复用性，大多数编码器从头开发的。</li><li>libavformat包含了所有普通音视频格式的解析器和产生器的库。<br>比较流行的播放器，QQ影音，Mplayer,KMPlayer,暴风影音，射手影音都是以FFmpeg作为内核的视频播放器。</li></ol><h3 id="转码"><a href="#转码" class="headerlink" title="转码"></a>转码</h3><p><code>ffmpeg -i input.avi -b:v 640k output.ts</code><br>参数说明： <code>-i</code>是输入参数，<code>-b</code>是比特率设置，缺省200kb/s.<br>直接<code>ffmpeg -i input.avi</code>是查看视频信息。  </p><h3 id="播放媒体"><a href="#播放媒体" class="headerlink" title="播放媒体"></a>播放媒体</h3><p>直接一个ffplay命令就可以，也可以尝试在终端的文本界面打开这个命令试试。  </p><h3 id="查看文件格式"><a href="#查看文件格式" class="headerlink" title="查看文件格式"></a>查看文件格式</h3><p>ffprobe命令  </p><h3 id="视频合并"><a href="#视频合并" class="headerlink" title="视频合并"></a>视频合并</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i concat <span class="string">"input1.ts|input2.ts|3.ts"</span> -vcodec <span class="keyword">copy</span><span class="bash"> merges.ts</span></div></pre></td></tr></table></figure><h3 id="视频剪切"><a href="#视频剪切" class="headerlink" title="视频剪切"></a>视频剪切</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ffmpeg</span> <span class="selector-tag">-i</span> 1<span class="selector-class">.ts</span> <span class="selector-tag">-ss</span> 00<span class="selector-pseudo">:00</span><span class="selector-pseudo">:00</span> <span class="selector-tag">-t</span> <span class="selector-pseudo">:10</span><span class="selector-pseudo">:00</span> <span class="selector-tag">result</span><span class="selector-class">.ts</span></div></pre></td></tr></table></figure><h3 id="提取图片"><a href="#提取图片" class="headerlink" title="提取图片"></a>提取图片</h3><p>从视频中提取图片:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">ffmpeg</span> <span class="selector-tag">-vcodec</span> <span class="selector-tag">rawvideo</span> <span class="selector-tag">-f</span> <span class="selector-tag">rawvideo</span> <span class="selector-tag">-pix_fmt</span> <span class="selector-tag">gray</span> <span class="selector-tag">-s</span> 720<span class="selector-tag">x576</span> <span class="selector-tag">-i</span> <span class="selector-tag">sample</span><span class="selector-class">.ts</span> <span class="selector-tag">gray</span> <span class="selector-tag">-f</span> <span class="selector-tag">image2</span> <span class="selector-tag">-vcodec</span> <span class="selector-tag">bmp</span> %4<span class="selector-tag">d</span><span class="selector-class">.bmp</span></div></pre></td></tr></table></figure></p><h3 id="添加logo"><a href="#添加logo" class="headerlink" title="添加logo"></a>添加logo</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -<span class="selector-tag">i</span> <span class="number">10.20</span><span class="selector-class">.ts</span> -vf <span class="string">"movie=../resource/youku_logo.png [logo]; [in][logo] overlay=main_w - overlay_w - 10:10 [out]"</span> -<span class="selector-tag">q</span>:v <span class="number">1</span> -vcodec mpeg4 <span class="number">10.20</span><span class="selector-class">.logo</span><span class="selector-class">.ts</span></div></pre></td></tr></table></figure><h3 id="视频旋转"><a href="#视频旋转" class="headerlink" title="视频旋转"></a>视频旋转</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i demo.mp4 -vf <span class="string">"transpose=1"</span> out.mp4</div><div class="line"></div><div class="line"><span class="number">0</span> = <span class="number">90</span>CounterCLockwise and Vertical Flip (<span class="section">default</span>)</div><div class="line"><span class="number">1</span> = <span class="number">90</span>Clockwise</div><div class="line"><span class="number">2</span> = <span class="number">90</span>CounterClockwise</div><div class="line"><span class="number">3</span> = <span class="number">90</span>Clockwise and Vertical Flip</div><div class="line">For <span class="number">180</span> you can use -vf <span class="string">"transpose=2,transpose=2"</span></div></pre></td></tr></table></figure><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><p>附上FFmpeg的参数说明：<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line">-<span class="ruby">formats输出所有可用格式</span></div><div class="line"><span class="ruby">-f</span></div><div class="line"><span class="ruby"> fmt指定格式(音频或视频格式)</span></div><div class="line"><span class="ruby">-i filename指定输入文件名，在linux下当然也能指定<span class="symbol">:</span><span class="number">0</span>.<span class="number">0</span>(屏幕录制)或摄像头</span></div><div class="line"><span class="ruby">-y覆盖已有文件</span></div><div class="line"><span class="ruby">-t duration记录时长为t</span></div><div class="line"><span class="ruby">-fs limit_size设置文件大小上限</span></div><div class="line"><span class="ruby">-ss time_off从指定的时间(s)开始，</span></div><div class="line"><span class="ruby"> [-]<span class="symbol">hh:</span><span class="symbol">mm:</span>ss[.xxx]的格式也支持</span></div><div class="line"><span class="ruby">-itsoffset time_off设置时间偏移(s)，该选项影响所有后面的输入文件。该偏移被加到输入文件的时戳，定义一个正偏移意味着相应的流被延迟了 offset秒。 [-]<span class="symbol">hh:</span><span class="symbol">mm:</span>ss[.xxx]的格式也支持</span></div><div class="line"><span class="ruby">-title string标题</span></div><div class="line"><span class="ruby">-timestamp time时间戳</span></div><div class="line"><span class="ruby">-author</span></div><div class="line"><span class="ruby"> string作者</span></div><div class="line"><span class="ruby">-copyright string版权信息</span></div><div class="line"><span class="ruby">-comment string评论</span></div><div class="line"><span class="ruby">-album stringalbum名</span></div><div class="line"><span class="ruby">-v verbose与log相关的</span></div><div class="line"><span class="ruby">-target type设置目标文件类型(<span class="string">"vcd"</span>, <span class="string">"svcd"</span>,</span></div><div class="line"><span class="ruby"> <span class="string">"dvd"</span>, <span class="string">"dv"</span>, <span class="string">"dv50"</span>, <span class="string">"pal-vcd"</span>, <span class="string">"ntsc-svcd"</span>, ...)</span></div><div class="line"><span class="ruby">-dframes number设置要记录的帧数</span></div><div class="line"><span class="ruby">视频选项<span class="symbol">:</span></span></div><div class="line"><span class="ruby">-b指定比特率(bits/s)，似乎FFmpeg是自动VBR的，指定了就大概是平均比特率</span></div><div class="line"><span class="ruby">-bitexact使用标准比特率</span></div><div class="line"><span class="ruby">-vb指定视频比特率(bits/s)</span></div><div class="line"><span class="ruby">-vframes</span></div><div class="line"><span class="ruby"> number设置转换多少桢(frame)的视频</span></div><div class="line"><span class="ruby">-r rate帧速率(fps) （可以改，确认非标准桢率会导致音画不同步，所以只能设定为<span class="number">15</span>或者<span class="number">29.97</span>）</span></div><div class="line"><span class="ruby">-s size指定分辨率 (<span class="number">320</span>x24<span class="number">0</span>)</span></div><div class="line"><span class="ruby">-aspect aspect设置视频长宽比(<span class="number">4</span><span class="symbol">:</span><span class="number">3</span>, <span class="number">16</span><span class="symbol">:</span><span class="number">9</span> <span class="keyword">or</span> <span class="number">1.3333</span>, <span class="number">1.7777</span>)</span></div><div class="line"><span class="ruby">-croptop</span></div><div class="line"><span class="ruby"> size设置顶部切除尺寸(<span class="keyword">in</span> pixels)</span></div><div class="line"><span class="ruby">-cropbottom size设置底部切除尺寸(<span class="keyword">in</span> pixels)</span></div><div class="line"><span class="ruby">-cropleft size设置左切除尺寸 (<span class="keyword">in</span> pixels)</span></div><div class="line"><span class="ruby">-cropright size设置右切除尺寸 (<span class="keyword">in</span> pixels)</span></div><div class="line"><span class="ruby">-padtop size设置顶部补齐尺寸(<span class="keyword">in</span></span></div><div class="line"><span class="ruby"> pixels)</span></div><div class="line"><span class="ruby">-padbottom size底补齐(<span class="keyword">in</span> pixels)</span></div><div class="line"><span class="ruby">-padleft size左补齐(<span class="keyword">in</span> pixels)</span></div><div class="line"><span class="ruby">-padright size右补齐(<span class="keyword">in</span> pixels)</span></div><div class="line"><span class="ruby">-padcolor color补齐带颜色(<span class="number">000000</span>-FFFFFF)</span></div><div class="line"><span class="ruby">-vn取消视频</span></div><div class="line"><span class="ruby">-vcodec</span></div><div class="line"><span class="ruby"> codec强制使用codec编解码方式(<span class="string">'copy'</span> to copy stream)</span></div><div class="line"><span class="ruby">-sameq使用同样视频质量作为源（VBR）</span></div><div class="line"><span class="ruby">-pass n选择处理遍数（<span class="number">1</span>或者<span class="number">2</span>）。两遍编码非常有用。第一遍生成统计信息，第二遍生成精确的请求的码率</span></div><div class="line"><span class="ruby">-passlogfile file选择两遍的纪录文件名为file</span></div><div class="line"><span class="ruby">-newvideo在现在的视频流后面加入新的视频流</span></div><div class="line"><span class="ruby"> </span></div><div class="line"><span class="ruby">高级视频选项</span></div><div class="line"><span class="ruby">-pix_fmt</span></div><div class="line"><span class="ruby"> formatset pixel format, <span class="string">'list'</span> as argument shows all the pixel formats supported</span></div><div class="line"><span class="ruby">-intra仅适用帧内编码</span></div><div class="line"><span class="ruby">-qscale q以&lt;数值&gt;质量为基础的VBR，取值<span class="number">0</span>.<span class="number">01</span>-<span class="number">255</span>，约小质量越好</span></div><div class="line"><span class="ruby">-loop_input设置输入流的循环数(目前只对图像有效)</span></div><div class="line"><span class="ruby">-loop_output设置输出视频的循环数，比如输出gif时设为<span class="number">0</span>表示无限循环</span></div><div class="line"><span class="ruby">-g</span></div><div class="line"><span class="ruby"> int设置图像组大小</span></div><div class="line"><span class="ruby">-cutoff int设置截止频率</span></div><div class="line"><span class="ruby">-qmin int设定最小质量，与-qmax（设定最大质量）共用，比如-qmin <span class="number">10</span> -qmax <span class="number">31</span></span></div><div class="line"><span class="ruby">-qmax int设定最大质量</span></div><div class="line"><span class="ruby">-qdiff int量化标度间最大偏差 (VBR)</span></div><div class="line"><span class="ruby">-bf</span></div><div class="line"><span class="ruby"> int使用frames B 帧，支持mpeg1,mpeg2,mpeg4</span></div><div class="line"><span class="ruby">音频选项<span class="symbol">:</span></span></div><div class="line"><span class="ruby">-ab设置比特率(单位：bit/s，也许老版是kb/s)前面-ac设为立体声时要以一半比特率来设置，比如<span class="number">192</span>kbps的就设成<span class="number">96</span>，转换 默认比特率都较小，要听到较高品质声音的话建议设到<span class="number">160</span>kbps（<span class="number">80</span>）以上。</span></div><div class="line"><span class="ruby">-aframes number设置转换多少桢(frame)的音频</span></div><div class="line"><span class="ruby">-aq</span></div><div class="line"><span class="ruby"> quality设置音频质量 (指定编码)</span></div><div class="line"><span class="ruby">-ar rate设置音频采样率 (单位：Hz)，PSP只认<span class="number">24000</span></span></div><div class="line"><span class="ruby">-ac channels设置声道数，<span class="number">1</span>就是单声道，<span class="number">2</span>就是立体声，转换单声道的TVrip可以用<span class="number">1</span>（节省一半容量），高品质的DVDrip就可以用<span class="number">2</span></span></div><div class="line"><span class="ruby">-an取消音频</span></div><div class="line"><span class="ruby">-acodec codec指定音频编码(<span class="string">'copy'</span></span></div><div class="line"><span class="ruby"> to copy stream)</span></div><div class="line"><span class="ruby">-vol volume设置录制音量大小(默认为<span class="number">256</span>) &lt;百分比&gt; ，某些DVDrip的AC3轨音量极小，转换时可以用这个提高音量，比如<span class="number">200</span>就是原来的<span class="number">2</span>倍</span></div><div class="line"><span class="ruby">-newaudio在现在的音频流后面加入新的音频流</span></div><div class="line"><span class="ruby">字幕选项<span class="symbol">:</span></span></div><div class="line"><span class="ruby">-sn取消字幕</span></div><div class="line"><span class="ruby">-scodec</span></div><div class="line"><span class="ruby"> codec设置字幕编码(<span class="string">'copy'</span> to copy stream)</span></div><div class="line"><span class="ruby">-newsubtitle在当前字幕后新增</span></div><div class="line"><span class="ruby">-slang code设置字幕所用的ISO <span class="number">639</span>编码(<span class="number">3</span>个字母)</span></div><div class="line"><span class="ruby">Audio/Video 抓取选项<span class="symbol">:</span></span></div><div class="line"><span class="ruby">-vc channel设置视频捕获通道(只对DV1394)</span></div><div class="line"><span class="ruby">-tvstd</span></div><div class="line"><span class="ruby"> standard设</span></div><div class="line"><span class="ruby"></span></div><div class="line"><span class="ruby">转换为<span class="symbol">flv:</span> </span></div><div class="line"><span class="ruby">    ffmpeg -i test.mp3 -ab <span class="number">56</span> -ar <span class="number">22050</span> -b <span class="number">500</span> -r <span class="number">15</span> -s <span class="number">320</span>x24<span class="number">0</span> test.flv </span></div><div class="line"><span class="ruby">    ffmpeg -i test.wmv -ab <span class="number">56</span> -ar <span class="number">22050</span> -b <span class="number">500</span> -r <span class="number">15</span> -s <span class="number">320</span>x24<span class="number">0</span> test.flv </span></div><div class="line"><span class="ruby"></span></div><div class="line"><span class="ruby"> 转换文件格式的同时抓缩微图： </span></div><div class="line"><span class="ruby">    ffmpeg -i <span class="string">"test.avi"</span> -y -f image2 -ss <span class="number">8</span> -t <span class="number">0</span>.<span class="number">001</span> -s <span class="number">350</span>x24<span class="number">0</span> <span class="string">'test.jpg'</span> </span></div><div class="line"><span class="ruby"></span></div><div class="line"><span class="ruby">  对已有flv抓图： </span></div><div class="line"><span class="ruby">    ffmpeg -i <span class="string">"test.flv"</span> -y -f image2 -ss <span class="number">8</span> -t <span class="number">0</span>.<span class="number">001</span> -s <span class="number">350</span>x24<span class="number">0</span> <span class="string">'test.jpg'</span> </span></div><div class="line"><span class="ruby"></span></div><div class="line"><span class="ruby">  转换为<span class="number">3</span><span class="symbol">gp:</span></span></div><div class="line"><span class="ruby">    ffmpeg -y -i test.mpeg -bitexact -vcodec h263 -b <span class="number">128</span> -r <span class="number">15</span> -s <span class="number">176</span>x144 -acodec aac -ac <span class="number">2</span> -ar <span class="number">22500</span> -ab <span class="number">24</span> -f <span class="number">3</span>gp test.<span class="number">3</span>gp </span></div><div class="line"><span class="ruby">    ffmpeg -y -i test.mpeg -ac <span class="number">1</span> -acodec amr_nb -ar <span class="number">8000</span> -s <span class="number">176</span>x144 -b <span class="number">128</span> -r <span class="number">15</span> test.<span class="number">3</span>gp</span></div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;又是一阵时间没回来了，中间偶然获得了You-get这个神器，果然py大法好。&lt;br&gt;但是善难养成，恶易成习。&lt;br&gt;坚持太难了。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://newdee.cf/categories/Linux/"/>
    
    
      <category term="ubuntu" scheme="http://newdee.cf/tags/ubuntu/"/>
    
      <category term="ffmpeg" scheme="http://newdee.cf/tags/ffmpeg/"/>
    
  </entry>
  
  <entry>
    <title>Nodeppt入坑</title>
    <link href="http://newdee.cf/posts/9b44f6cc/"/>
    <id>http://newdee.cf/posts/9b44f6cc/</id>
    <published>2017-07-26T12:50:17.000Z</published>
    <updated>2017-10-11T02:08:32.947Z</updated>
    
    <content type="html"><![CDATA[<p>没错，又来入坑了。<br><a id="more"></a><br>昨天刚刚尝试了用reveal.js渲染Markdown的幻灯片，效果还行，但是每次都要在Html文档里面编辑，略嫌麻烦，强迫症患者的理想目标是，找到一个工具，在写好的MD文档之外，调用这个工具，即可渲染得到<br>PPT。而关于<br>PPT的风格主题、模板以及其他的，则可以在工具中指定参数。不过挺难找的，而当初也没好好的学学js，书看了不到一半就放弃了。今天就来试试这个自称最好的Nodeppt。<br>详细介绍<a href="https://www.npmjs.com/package/nodeppt" rel="external nofollow noopener noreferrer" target="_blank">见这里</a>,gayhub的repo<a href="https://github.com/ksky521/nodePPT" rel="external nofollow noopener noreferrer" target="_blank">在这</a>。</p><h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><p>首先安装Nodeppt<br>注意，需要先安装NodeJS。  </p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> -g nodeppt</div></pre></td></tr></table></figure><p>然而在npm的过程中，fetch等了很久，网上说可以换成淘宝的源，后来试了一下，是挺快的，然后再切换回原来的源即可。不过还是安装失败。<br>不过问题在于没有加sudo<br>然后启动</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 获取帮助</span></div><div class="line">nodeppt <span class="literal">start</span> -h</div><div class="line"><span class="comment"># 绑定端口</span></div><div class="line">nodeppt <span class="literal">start</span> -p <span class="tag">&lt;port&gt;</span></div></pre></td></tr></table></figure><p>或者：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nodeppt start -p<span class="built_in"> port </span>-d path/<span class="keyword">for</span>/ppts</div></pre></td></tr></table></figure></p><p>如:</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">nodeppt start -p <span class="number">8090</span> -d path/for/ppts</div><div class="line"># 绑定host，默认绑定<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></div><div class="line">nodeppt start -p <span class="number">8080</span> -d path/for/ppts -H <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></div><div class="line"># 使用socket通信（按Q键显示/关闭二维码，手机扫描，即可控制）</div><div class="line"># socket须知：<span class="number">1</span>、注意手机和pc要可以相互访问，<span class="number">2</span>、防火墙，<span class="number">3</span>、ip</div></pre></td></tr></table></figure><p>启用socket控制有两种方式：</p><ul><li>使用url参数： <code>http://127.0.0.1:8080/md/demo.md?controller=socket</code></li><li>使用start命令行：<code>nodeppt start -c socket</code><br>在页面按键【Q】显示控制url的二维码和控制链接（需要隐身窗口打开），手机上可以使用左右touch滑动和摇一摇切换下一页。  </li></ul><p>最后创建Slide<br>可以直接用Nodeppt创建，就像hexo创建文档一样。<br><code>nodeppt create ppt-name</code><br>接下来就是按照提示输入基本信息，默认就是MD文件，如果需要Html，可以在名字后面加上后缀类型。</p><h4 id="扩展语法"><a href="#扩展语法" class="headerlink" title="扩展语法"></a>扩展语法</h4><p>Nodeppt在支持Markdown基本语法之外，还有一些扩展。</p><h5 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h5><p>基本配置：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">title:</span> 这是演讲的题目</div><div class="line"><span class="symbol">speaker:</span> 演讲者名字</div><div class="line"><span class="symbol">url:</span> 可以设置链接</div><div class="line"><span class="symbol">transition:</span> 转场效果，例如：zoomin<span class="meta-keyword">/cards/</span>slide</div><div class="line"><span class="symbol">files:</span> <span class="meta-keyword">/css/</span>theme.moon.css，尾部的文件</div><div class="line"><span class="symbol">theme:</span> moon <span class="comment">//皮肤</span></div><div class="line"><span class="symbol">highlightStyle:</span> monokai_sublime <span class="comment">//hljs的样式</span></div><div class="line"><span class="symbol">headFiles:</span> <span class="comment">//头部的文件</span></div><div class="line"><span class="symbol">usemathjax:</span> <span class="comment">//如果为yes，则引入mathjax，默认不建议开启，导出文件太多</span></div><div class="line"><span class="symbol">date:</span> <span class="number">2017</span>年<span class="number">7</span>月<span class="number">26</span>日</div></pre></td></tr></table></figure></p><p>另外有：<code>colors-moon-blue-dark-green-light</code> 共六套自带皮肤可供选择。<br><strong>关于目录</strong>：可以直接在slide所在根目录添加img、css和js文件夹并添加到引用路径，Nodeppt默认可以找得到的。</p><h5 id="排版"><a href="#排版" class="headerlink" title="排版"></a>排版</h5><ul><li>使用[slide]标签来分页，如:</li></ul><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">slide style</span>=<span class="string">"background-image:url('/img/bg1.png')"</span>]</div></pre></td></tr></table></figure><ul><li>使用<code>---</code>分界</li><li>单条动画</li></ul><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">使用方法：列表第一条加上 ` &#123;:&amp;.动画类型&#125;``（注意空格）</div><div class="line"><span class="comment">* 上下左右方向键翻页</span></div><div class="line"><span class="comment">    * 列表支持渐显动画 &#123;:&amp;.moveIn&#125;</span></div><div class="line"><span class="comment">    * 支持多级列表</span></div><div class="line"><span class="comment">    * 这个动画是moveIn</span></div></pre></td></tr></table></figure><p>目前支持的单条动画效果包括：</p><ul><li>moveIn</li><li>fadeIn</li><li>bounceIn</li><li>rollIn</li><li>zoomIn</li></ul><ul><li>转场动画<br>Markdown的顶部配置可以设置，以方括号标注。<br>magic是在一页幻灯片中播放多个子页面，页面之间进行动效切换，但是slide不翻页（类似keynote的magicmove），使用<code>[magic]</code>标签包裹，子页面之间使用<code>====</code>间隔。<code>[magic]</code>标签支持全部转场动效，效果比较好的有：</li></ul><ul><li>zoomin/zoomout</li><li>move</li><li>circle</li><li>earthquake</li><li>newspaper</li><li>cover-diamond</li><li>horizontal3d/horizontal</li><li>vertical3d</li><li>cover-circle</li></ul><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">[slide]</span></div><div class="line"><span class="meta">[magic data-transition="earthquake"]</span></div><div class="line">## 标题1</div><div class="line">-----</div><div class="line">&lt;div class="columns3"&gt;</div><div class="line"><span class="code">    &lt;img src="/assets/searchbox-fe-framework-and-product/Snip20151209_11.png" height="450"&gt;</span></div><div class="line"><span class="code">    &lt;img src="/assets/searchbox-fe-framework-and-product/Snip20151209_10.png" height="450"&gt;</span></div><div class="line"><span class="code">    &lt;img src="/assets/searchbox-fe-framework-and-product/Snip20151209_12.png" height="450"&gt;</span></div><div class="line">&lt;/div&gt;</div><div class="line">====</div><div class="line">## 标题2</div><div class="line">-----</div><div class="line">&lt;div class="columns3"&gt;</div><div class="line"><span class="code">    &lt;img src="/assets/searchbox-fe-framework-and-product/Snip20151209_11.png" height="450"&gt;</span></div><div class="line"><span class="code">    &lt;img src="/assets/searchbox-fe-framework-and-product/Snip20151209_10.png" height="450"&gt;</span></div><div class="line"><span class="code">    &lt;img src="/assets/searchbox-fe-framework-and-product/Snip20151209_12.png" height="450"&gt;</span></div><div class="line">&lt;/div&gt;</div><div class="line">====</div><div class="line">## 标题3</div><div class="line">-----</div><div class="line">&lt;div class="columns3"&gt;</div><div class="line"><span class="code">    &lt;img src="/assets/searchbox-fe-framework-and-product/Snip20151209_11.png" height="450"&gt;</span></div><div class="line"><span class="code">    &lt;img src="/assets/searchbox-fe-framework-and-product/Snip20151209_10.png" height="450"&gt;</span></div><div class="line"><span class="code">    &lt;img src="/assets/searchbox-fe-framework-and-product/Snip20151209_12.png" height="450"&gt;</span></div><div class="line">&lt;/div&gt;</div><div class="line"><span class="meta">[/magic]</span></div></pre></td></tr></table></figure><p>如：<code>[slide data-transition=&quot;vertical3d&quot;]</code></p><ul><li>与Html语法混编</li><li>内部回调<br>除了使用Html的语法：<code>[code][/code]</code>之外，提供了格外的函数：</li></ul><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">in</span>-callback切换来...</div><div class="line">out-callback 切换走...</div></pre></td></tr></table></figure><ul><li>表格<br>与默认的Markdown语法类似。</li><li>在线音乐以及其他的网页插入<br>使用iframe语法插入</li></ul><h4 id="导出文件"><a href="#导出文件" class="headerlink" title="导出文件"></a>导出文件</h4><p>可以选择到处Html用于网页展示或者pdf用于保存。但根据Nodeppt官方的说法，<strong>导出pdf不再支持，请使用chrome打印服务另存为pdf，url中添加?print=1，然后使用chrome打印 ctrl+P</strong>。不过主要目的自然是用于网页展示了，pdf随时随地可以生成。<br>导出Html文档:<br><figure class="highlight verilog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># 获取<span class="keyword">generate</span>帮助</div><div class="line">nodeppt <span class="keyword">generate</span> -h</div><div class="line"># 使用<span class="keyword">generate</span>命令</div><div class="line">nodeppt <span class="keyword">generate</span> filepath</div><div class="line"># 导出全部，包括Nodeppt的js、img和css文件夹</div><div class="line"># 默认导出在publish文件夹</div><div class="line">nodeppt <span class="keyword">generate</span> ./ppts/demo<span class="variable">.md</span> -a</div><div class="line"># 指定导出文件夹</div><div class="line">nodeppt <span class="keyword">generate</span> ./ppts/demo<span class="variable">.md</span> <span class="keyword">output</span>/path -a</div></pre></td></tr></table></figure></p><p>导出目录下所有ppt，并且生成ppt list首页：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nodeppt <span class="built_in">path</span> <span class="built_in">output</span>/<span class="built_in">path</span> -a</div></pre></td></tr></table></figure><h4 id="Demo演示"><a href="#Demo演示" class="headerlink" title="Demo演示"></a>Demo演示</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">执行 nodeppt start</div><div class="line">访问 <span class="string">http:</span><span class="comment">//127.0.0.1:8080/</span></div><div class="line">在线demo： <span class="string">http:</span><span class="comment">//js8.in/nodeppt/</span></div></pre></td></tr></table></figure><p>好了，写了这么多，终于要点题了。<br>在我尝试安装完成之后，发现Nodeppt并没有渲染成功，或许大概是已经停止更新了吧。<br>渲染之后，浏览器打开是酱紫的：<br><img src="http://imglf1.nosdn.127.net/img/OVRPYXc0dFFJZ3M2Zm12eVBjajAwS291WmNvS05YTHdQSzZwYlUzcnhBMktXSDV2OXNnZDBBPT0.png?imageView&amp;thumbnail=1680x0&amp;quality=96&amp;stripmeta=0&amp;type=jpg" alt=""><br>入坑完毕。<br>不过后来又找了个Marp，直接转换倒是很方便，可以导出为<br>PDF，但是没有找到导出html的功能，有点遗憾。<br>现在就连Markdown语法都是参差不齐，因为应用不同，所以语法扩展不同，希望能尽快形成一个标准，用md渲染幻灯片的技术普及民众。<br>不过最后还是下了个cleaver来渲染，基本上是可以了。效果在这里。</p><p><iframe src="https://newdee.coding.me/slideTest/" height="800px" width="90%" align="center"><iframe></iframe></iframe></p><p>当然，我又卸载了这个cleaver。<br>因为他和clear命令太像了！！！害得我都没法用补全命令clear。<br>Aaron早逝，但Markdown正无声的占领着这个世界。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;没错，又来入坑了。&lt;br&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://newdee.cf/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="markdown" scheme="http://newdee.cf/tags/markdown/"/>
    
      <category term="ppt" scheme="http://newdee.cf/tags/ppt/"/>
    
      <category term="nodeppt" scheme="http://newdee.cf/tags/nodeppt/"/>
    
  </entry>
  
  <entry>
    <title>Markdown制作幻灯片</title>
    <link href="http://newdee.cf/posts/14461a6d/"/>
    <id>http://newdee.cf/posts/14461a6d/</id>
    <published>2017-07-25T17:03:00.000Z</published>
    <updated>2017-10-11T01:55:19.302Z</updated>
    
    <content type="html"><![CDATA[<p>写完博客之后，考虑的就是怎么做幻灯片了。<br><a id="more"></a><br>主要考虑的还是用Markdown语法写幻灯片，调查了很多，从remark.js到landslide，从impress.js到show.js，再到deck.js、Fathom.js、Jmpress.js等，五花八门，眼花缭乱，最后还是随机选了一个，reveal.js。  </p><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ul><li>reveal.js: Markdown渲染工具</li><li>gayhub: 上传</li><li>rawgit: 将Github中的html正常加载，并添加CDN</li></ul><h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><h5 id="Clone或者Fork官方Repo"><a href="#Clone或者Fork官方Repo" class="headerlink" title="Clone或者Fork官方Repo"></a>Clone或者Fork官方Repo</h5><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/<span class="tag">&lt;you account id&gt;</span>/reveal.js</div></pre></td></tr></table></figure><p>README中有很多配置编辑的方式可供参考， 现在有了一个可运行的reveal.js模板，运行根目录下的index.html即可预览  </p><h5 id="编辑默认index文档"><a href="#编辑默认index文档" class="headerlink" title="编辑默认index文档"></a>编辑默认index文档</h5><p> 打开index.html，找到slide的标签，<code>&lt;div class=&quot;slides&quot;&gt;</code>，即为幻灯片正文的开始，在此之下，添加几行代码，打开Markdown的编辑模式:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt; section data-markdown <span class="attribute">data-separator</span>=<span class="string">"---"</span> <span class="attribute">data-separator-vertical</span>=<span class="string">"--"</span>&gt;</div><div class="line">    &lt;<span class="built_in"> script </span><span class="attribute">type</span>=<span class="string">"text/template"</span>&gt;</div><div class="line">    ### 你要写的正文内容</div><div class="line">    &lt; /script&gt;</div><div class="line">&lt; /section&gt;</div></pre></td></tr></table></figure></p><p>现在可以用Markdown编辑幻灯片内容了。</p><h6 id="基本编辑方式："><a href="#基本编辑方式：" class="headerlink" title="基本编辑方式："></a>基本编辑方式：</h6><ul><li><code>---</code> 横向分页</li><li><code>--</code> 纵向分页，通常一列可以作为一个章节。</li><li><code>#</code> 标题 <code>-</code> 列表</li></ul><h6 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h6><p>使用基本的m arkdown插图大法就可以完成。考虑到有时候的网络环境，还是保存在本地再添加比较好。<br><code>![](upload/pic.jpg)</code>这种格式即可。如果要调整排版和位置，则需要写html的语法。</p><h6 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h6><p>这里时候不早了，电脑上没有视频，也懒得插入，下次会自己做一个的，先借用前人的代码，省去从YouTube上下载。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="selector-tag">section</span> data-<span class="attribute">background</span>-video=<span class="string">"your_video_name.webm"</span>&gt;</div></pre></td></tr></table></figure></p><h5 id="对外访问"><a href="#对外访问" class="headerlink" title="对外访问"></a>对外访问</h5><p>将编辑好的reveal.js项目提交到Github上:<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git <span class="keyword">add</span><span class="bash"> .</span></div><div class="line"><span class="bash">git commit -m <span class="string">"add my slides"</span></span></div><div class="line"><span class="bash">git push origin master</span></div></pre></td></tr></table></figure></p><p>这里本来并不想写git的命令，因为太基础了，不过送佛送西，就这样吧。<br>然后就可以从网页访问刚刚上传的repo了，我就做了个简单的Helloword。不过到现在位置，我们也仅仅是编辑了一下里面的html，幻灯片并没有被渲染，而是以源代码方式展示出来。这时候使用第三方工具将代码库中的html文件按照期望方式对外暴露使其访问。   </p><ul><li>打开<code>http://rawgit.com/</code>,输入 <code>https://github.com/&lt;your github id&gt;/cd-in-cloud-reveal-js/blob/master/index.html</code> </li><li>得到 <code>production url</code> 和 <code>development url</code>  两个链接。Production url 是带有 CDN 的，和 github 的同步会存在一定的延迟， developement url 的更新会及时一些，不过访问速度相对会没那么快。  </li></ul><p>然后就是访问生成的HelloWorld,如下所示。  </p><iframe src="https://newdee.coding.me/revealSlide/" height="480px" width="90%" align="center"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;写完博客之后，考虑的就是怎么做幻灯片了。&lt;br&gt;
    
    </summary>
    
      <category term="博客" scheme="http://newdee.cf/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="markdown" scheme="http://newdee.cf/tags/markdown/"/>
    
      <category term="PPT" scheme="http://newdee.cf/tags/PPT/"/>
    
      <category term="revealJS" scheme="http://newdee.cf/tags/revealJS/"/>
    
  </entry>
  
  <entry>
    <title>SS服务器搭建</title>
    <link href="http://newdee.cf/posts/1420aa47/"/>
    <id>http://newdee.cf/posts/1420aa47/</id>
    <published>2017-07-25T07:43:01.000Z</published>
    <updated>2017-10-29T05:47:15.458Z</updated>
    
    <content type="html"><![CDATA[<p>在ubuntu环境下的SS服务器搭建。<br><a id="more"></a></p><h4 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h4><p>至于翻墙的原因，各人有各人的说法，这堵墙也算是有利有弊，这里我不想多说什么。但Google和Google Scholar，YouTube，以及其他的一些coding资源站的限制访问，大概可以成为很多人有这个需求的起因。<br>考虑到翻墙的人口基数，免费的服务基本上已经快要退出战场了。所以有时候还是花点钱靠谱一些。<br>这类的服务器其实挺多的，用的比较多的是亚马逊的，但是个人感觉太贵，后来在PAC的开源项目中发现了vultr，个人感觉挺便宜的，也算是支持一下免费的<br>PAC，于是准备购买一个vultr服务器，</p><h4 id="选择配置"><a href="#选择配置" class="headerlink" title="选择配置"></a>选择配置</h4><p>这里的配置是ubuntu16.04，1核CPU，40G的SSD硬盘，带宽一个月2000G，服务器是东京的服务器，价格是10刀每月，很便宜了，流量基本用不完。而且是按小时计费的，如果你刚刚买了，不喜欢，可以立马撤销掉，也不会花多少钱。<br>然后下单，基本上绑定一张卡就行了，然后它会给你关于这个服务器的ip和密码，密码是随机生成的，你可以自己登陆进去修改，也可以在安装系统之前把你电脑的ssh-key的公钥给他，好免密码登录，不过我试了，好像没起作用。<br>他也有提供网页登录窗口，你登录进去直接操作，不过我比较喜欢本地的操作，就在电脑上ssh 远程登录，用户名是root。<br>然后可以配置一下ssh免密码登录，这个步骤是可选的，而且也非常简单，不清楚的话直接网上搜一下就行了。</p><h4 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h4><p>登陆进去后开始配置环境<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">apt <span class="keyword">update</span></div><div class="line">apt <span class="keyword">install</span> python-pip</div><div class="line">apt <span class="keyword">install</span> shadowsocks</div></pre></td></tr></table></figure></p><h4 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pip <span class="keyword">install</span> <span class="comment">--upgrade pip</span></div><div class="line">pip <span class="keyword">install</span> <span class="comment">--upgrade shadowsocks</span></div></pre></td></tr></table></figure><p>这里提示要先装setuptools，于是<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip <span class="keyword">install</span> setuptools</div></pre></td></tr></table></figure></p><p>然后重新升级shadowsocks<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip <span class="keyword">install</span> <span class="comment">--upgrade shadowsocks</span></div></pre></td></tr></table></figure></p><h4 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h4><p>我之前是直接在本地写好了，然后直接上传，配置文件内容如下，密码和端口根据需求可以比较随意修改，但不能使用已经被占用的端口。加密协议也可以修改，具体协议根据自己需要。<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"> <span class="number">1</span> &#123;</div><div class="line"> <span class="number">2</span>     <span class="string">"server"</span>:<span class="string">"0.0.0.0"</span>,</div><div class="line"> <span class="number">3</span>     <span class="string">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</div><div class="line"> <span class="number">4</span>     <span class="string">"local_port"</span>:<span class="number">1080</span>,</div><div class="line"> <span class="number">5</span>     <span class="string">"port_password"</span>: &#123;</div><div class="line"> <span class="number">6</span>          <span class="string">"4490"</span>: <span class="string">"password"</span>,</div><div class="line"> <span class="number">7</span>          <span class="string">"4491"</span>: <span class="string">"password"</span>,</div><div class="line"> <span class="number">8</span>          <span class="string">"4496"</span>: <span class="string">"password"</span></div><div class="line"> <span class="number">9</span>      &#125;,</div><div class="line"><span class="number">10</span>     <span class="string">"timeout"</span>:<span class="number">300</span>,</div><div class="line"><span class="number">11</span>     <span class="string">"method"</span>:<span class="string">"aes-256-cfb"</span>,</div><div class="line"><span class="number">12</span>     <span class="string">"fast_open"</span>: <span class="literal">false</span></div><div class="line"><span class="number">13</span> &#125;</div></pre></td></tr></table></figure></p><p>首先在服务器端打开端口：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">nc</span> <span class="selector-tag">-l</span> 1992 &gt; <span class="selector-tag">shadowsocks</span><span class="selector-class">.json</span></div></pre></td></tr></table></figure></p><p>然后在本地输入<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">nc</span> <span class="selector-tag">IP_ADDRESS</span> 1992 &lt; <span class="selector-tag">shadowsocks</span><span class="selector-class">.json</span></div></pre></td></tr></table></figure></p><p>这里的IP_ADDRESS改成自己服务器的ip，端口也可以自己改，一样就行。<br>最后移动到/etc目录下<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mv shadowsocks<span class="selector-class">.json</span> /etc/shadowsocks.json</div></pre></td></tr></table></figure></p><p>配置完成</p><h4 id="开启socks服务"><a href="#开启socks服务" class="headerlink" title="开启socks服务"></a>开启socks服务</h4><p>运行命令<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssserver -c <span class="regexp">/etc/</span>shadowsocks.json</div></pre></td></tr></table></figure></p><p>出现错误，<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-bash: /usr/bin/ssserver: <span class="keyword">No</span> such <span class="keyword">file</span> <span class="keyword">or</span> directory</div></pre></td></tr></table></figure></p><p>原因大概是升级shadowsocks之后/usr/bin目录下找不到可执行文件的链接了，可以自己创建一个软连接，用ln命令，也可以直接找到可执行文件位置，直接运行，我比较懒，就选第二种方法了。<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">whereis ssserver</span></div></pre></td></tr></table></figure></p><p>显示<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">ssserver:</span> <span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/bin/</span>ssserver <span class="meta-keyword">/usr/</span>share<span class="meta-keyword">/man/</span>man1/ssserver<span class="number">.1</span>.gz</div></pre></td></tr></table></figure></p><p>可以看到，在/usr/local/bin目录下，于是直接运行<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">root<span class="variable">@vultr</span><span class="symbol">:~</span><span class="comment"># /usr/local/bin/ssserver -c /etc/shadowsocks.json -d start</span></div></pre></td></tr></table></figure></p><p>到这里，应该就已经搭好了<br>可以用客户端测试一下。<br>显示延迟一百多ms，比较快了，配置到这里就ok了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在ubuntu环境下的SS服务器搭建。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://newdee.cf/categories/Linux/"/>
    
    
      <category term="shadowsocks" scheme="http://newdee.cf/tags/shadowsocks/"/>
    
      <category term="ss" scheme="http://newdee.cf/tags/ss/"/>
    
      <category term="vultr" scheme="http://newdee.cf/tags/vultr/"/>
    
  </entry>
  
  <entry>
    <title>Tmux的会话配置</title>
    <link href="http://newdee.cf/posts/8cfd1ed2/"/>
    <id>http://newdee.cf/posts/8cfd1ed2/</id>
    <published>2017-07-23T04:51:01.000Z</published>
    <updated>2017-10-29T05:47:32.031Z</updated>
    
    <content type="html"><![CDATA[<p>受一个外国朋友的影响，用了几个月的Tmux.<br>简直就像打开了新世界的大门。<br><a id="more"></a><br>Tmux结合Vim的体验，Tmux控制多个终端的体验，已经无法割舍了。<br>当然，当初也是受这位外国小哥的影响，让我捡起了放弃已久的Vim，并爱上了它。<br>不过用了一段时间，发现虽然可以用tmux attach恢复刚刚关闭的会话，但关机之后并不保存，于是在网上找了一些方法来保存这些会话，好让下次开机依然可以恢复原来的会话。  </p><h4 id="安装Tmux插件管理工具"><a href="#安装Tmux插件管理工具" class="headerlink" title="安装Tmux插件管理工具"></a>安装Tmux插件管理工具</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/tmux-plugins/</span>tpm ~<span class="regexp">/.tmux/</span>plugins<span class="regexp">/tpm</span></div></pre></td></tr></table></figure><p>后面的文件夹是自己新建的，刚安装好Tmux的时候，其home目录下的配置文件也需要自己新建。<br>和Vim类似，Tmux 也有一个插件管理系统，叫 Tmux Plugin Manager。<br>之后修改Tmux配置文件：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># List of plugins</div><div class="line"><span class="keyword">set</span> -g <span class="comment">@plugin</span> <span class="comment">'tmux-plugins/tpm'</span></div><div class="line"><span class="keyword">set</span> <span class="comment">-g @plugin</span> <span class="comment">'tmux-plugins/tmux-sensible'</span></div><div class="line"># Other <span class="comment">examples:</span></div><div class="line"># <span class="keyword">set</span> <span class="comment">-g @plugin</span> <span class="comment">'github_username/plugin_name'</span></div><div class="line"># <span class="keyword">set</span> <span class="comment">-g @plugin</span> <span class="comment">'git@github.com/user/plugin'</span></div><div class="line"># <span class="keyword">set</span> <span class="comment">-g @plugin</span> <span class="comment">'git@bitbucket.com/user/plugin'</span></div><div class="line"># Initialize <span class="comment">TMUX plugin manager (keep this line at the very bottom of tmux.conf)</span></div><div class="line">run <span class="comment">'~/.tmux/plugins/tpm/tpm'</span></div></pre></td></tr></table></figure><p>记得run的语句一般要放在配置文件的最后一行。</p><h4 id="安装默认插件"><a href="#安装默认插件" class="headerlink" title="安装默认插件"></a>安装默认插件</h4><p>目前添加了两个插件:tpm和tmux-sensible，是官方推荐的插件，现在已经clone了tpm，下一步就是安装tmux-sensible这个插件。<br>在Tmux中，安装插件的一些快捷命令如下:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">prefix shift-i      # install</div><div class="line">prefix shift-u      # update</div><div class="line">prefix alt-u        # uninstall plugins <span class="keyword">not</span> on the plugin list</div></pre></td></tr></table></figure><p>现在安装tmux-sensible插件:  </p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Already installed <span class="string">"tpm"</span></div><div class="line">Installing <span class="string">"tmux-sensible"</span></div><div class="line"><span class="string">"tmux-sensible"</span> download success</div><div class="line">TMUX environment reloaded.</div><div class="line">Done, press ESCAPE <span class="keyword">to</span> <span class="keyword">continue</span>.</div></pre></td></tr></table></figure><p>安装成功。</p><h4 id="安装tmux-Resurrect-amp-Continuum插件"><a href="#安装tmux-Resurrect-amp-Continuum插件" class="headerlink" title="安装tmux Resurrect &amp; Continuum插件"></a>安装tmux Resurrect &amp; Continuum插件</h4><p>Tmux Resurrect 和 Tmux Continuum 这两个 Tmux 插件在gayhub上都有托管，主要目的就是解决Tmux的会话备份和恢复。<br>首先，修改配置文件，加上:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">set</span> -g <span class="meta">@plugin</span> <span class="string">'tmux-plugins/tmux-resurrect'</span></div></pre></td></tr></table></figure><p>然后prefix+shift+i，进入如下所示界面，</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">Already</span> installed <span class="string">"tpm"</span>                                                                                                                                                                                       [<span class="number">0</span>/<span class="number">0</span>]</div><div class="line"><span class="symbol">Already</span> installed <span class="string">"tmux-sensible"</span></div><div class="line"><span class="symbol">Installing</span> <span class="string">"tmux-resurrect"</span></div><div class="line">  <span class="string">"tmux-resurrect"</span> download success</div><div class="line"><span class="symbol">TMUX</span> environment reloaded.</div><div class="line"><span class="symbol">Done</span>, press <span class="symbol">ESCAPE</span> to continue.</div></pre></td></tr></table></figure><p>至此，resurrect插件安装成功。<br>但是Tmux 的resurrect插件都是靠手动备份的，为了实现自动备份，可以配合tmux continuum插件使用，因此现在安装tmux continum插件:</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">set</span> -g <span class="meta">@plugin</span> <span class="string">'tmux-plugins/tmux-continuum'</span></div></pre></td></tr></table></figure><p>然后又是一样的结果:</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">Already</span> installed <span class="string">"tpm"</span>                                                                                                                                                                                       [<span class="number">0</span>/<span class="number">0</span>]</div><div class="line"><span class="symbol">Already</span> installed <span class="string">"tmux-sensible"</span></div><div class="line"><span class="symbol">Already</span> installed <span class="string">"tmux-resurrect"</span></div><div class="line"><span class="symbol">Installing</span> <span class="string">"tmux-continuum"</span></div><div class="line">  <span class="string">"tmux-continuum"</span> download success</div><div class="line"></div><div class="line"><span class="symbol">TMUX</span> environment reloaded.</div><div class="line"><span class="symbol">Done</span>, press <span class="symbol">ESCAPE</span> to continue.</div></pre></td></tr></table></figure><p>好了，又安装成功了。  </p><h4 id="Recurrect的插件配置"><a href="#Recurrect的插件配置" class="headerlink" title="Recurrect的插件配置"></a>Recurrect的插件配置</h4><p>修改配置文件，添加几行配置:<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#tmux-resurrect</div><div class="line"><span class="keyword">set</span> -g <span class="meta">@resurrect</span>-save-bash-history <span class="string">'on'</span></div><div class="line"><span class="keyword">set</span> -g <span class="meta">@resurrect</span>-capture-pane-contents <span class="string">'on'</span></div><div class="line"><span class="keyword">set</span> -g <span class="meta">@resurrect</span>-strategy-vim <span class="string">'session'</span></div><div class="line"># <span class="keyword">set</span> -g <span class="meta">@resurrect</span>-save <span class="string">'S'</span></div><div class="line"># <span class="keyword">set</span> -g <span class="meta">@resurrect</span>-restore <span class="string">'R'</span></div></pre></td></tr></table></figure></p><p>至此，已经设置了保存键入的历史命令，以及面板布局和Vim状态。<br>Tmux的手动保存和加载快捷键是:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">prefix Ctrl-s       # save tmux session <span class="keyword">to</span> local file</div><div class="line">prefix Ctrl-r       # reload tmux session <span class="keyword">from</span> local file</div></pre></td></tr></table></figure></p><h4 id="自动备份配置"><a href="#自动备份配置" class="headerlink" title="自动备份配置"></a>自动备份配置</h4><p>在配置文件中加上continuum的配置参数，默认15分钟一次，可以根据自己的需要修改。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">set</span> <span class="selector-tag">-g</span> @<span class="keyword">continuum</span>-<span class="keyword">save</span>-<span class="keyword">interval</span> <span class="string">'60'</span></div></pre></td></tr></table></figure><p>自动备份完成，会在Tmux启动时还原。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;受一个外国朋友的影响，用了几个月的Tmux.&lt;br&gt;简直就像打开了新世界的大门。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://newdee.cf/categories/Linux/"/>
    
    
      <category term="tmux" scheme="http://newdee.cf/tags/tmux/"/>
    
      <category term="recurrect" scheme="http://newdee.cf/tags/recurrect/"/>
    
      <category term="continuum" scheme="http://newdee.cf/tags/continuum/"/>
    
  </entry>
  
  <entry>
    <title>回来</title>
    <link href="http://newdee.cf/posts/c33ea426/"/>
    <id>http://newdee.cf/posts/c33ea426/</id>
    <published>2017-07-22T04:39:12.000Z</published>
    <updated>2017-09-29T13:12:50.928Z</updated>
    
    <content type="html"><![CDATA[<p>尘封的往事不必再提，忘却的岁月如风而逝。<br><a id="more"></a></p><p>其实这两句话除了能显得中二之外毫无意义，因为旧事依然还会提，慵懒或激情的年纪还是会想起。<br>放在这里，只觉得当做开头不错。<br>QQ空间和朋友圈还是放弃了。大概因为越来越多的好友，而由于本人不喜欢营销，所以通常会屏蔽大部分内容，所以自己也尽量不发需要人点赞转发的内容，以至于除此之外，感觉很多个人的想法，实在不大方便让所有人看见，写日志和说说大抵会显得矫情，选择性屏蔽功能多却麻烦。而随着年岁渐长，也渐渐发现，不必所有感受说与人听，不必所有情怀显得高尚，也不必去刻意要求别人了解自己，况平时不善言辞，正式场合不苟言笑，木讷的很，又何用在众人眼下扮着理想的男主呢？<br>终于决定要重回博客。<br>不过看到自己以前心血来潮的时候搭建的博客，先是各种修改主题文件，本来是想着定制自己的主题，于是便选了一套透明风格的，慢慢的解决了各种问题，后来添加很多没有的功能，弄着弄着，感觉用hexo生成的时间都长了一倍，当时觉得的freestyle，后来感觉难看极了。于是放弃了自己的主题，找许多简约朴实风格的模板主题，然后又是各种折腾，功能阉割，最后又是那样惨不忍睹，后来索性就放弃了这个博客，也不记得多久没维护了。<br>重新配置博客的过程也当是重新熟悉一下当初搭建过程，电脑重装过很多次系统了，所以hexo也要重装，然后便是重新熟悉一下markdown语法了。<br>于是稍加修葺，重新定居于此，改名为“阁子”。<br>于是用这废话累牍作其重生之记。<br>大抵也是心中不快，却忧谗畏讥，不敢私语，只能回到自己阁子里来提笔乱书。<br>研究生阶段便是如此，以至于我在读研期间一直在思考着我到底是否适合读研。刚开始的一日一询，步步紧逼，到后来的不闻不问，放之任之，几年下来，始终没有任何产出。研究生生活便是这般苦闷，以至尘埃既定，花开无果，时常想起，便免不了落些个郁郁寡欢。<br>本来这些废话是准备昨天说的，不过昨天刚准备写，就被一群人拉去酒吧了，生平第一次去酒吧，喝酒，打台球，喝酒，掷骰子，喝酒，唱歌跳舞，喝酒。<br>大概凌晨四点，打车回家。<br>当时准备回来继续写这个的，但发现电脑不在宿舍，于是睡了一觉，便到现在了。  </p><p>回归于此，看到的人不要太在意，说的有错不要太放在心上，我都这把年纪了，世界观是改不掉的了。至于什么微信二维码的接口，已经关掉了，没有指望从各位手里筹到一个鸡腿。<br>当然，倘若有熟人，也请装作不认识罢，反正我也不会知道。<br>不过如果真有兴趣打赏，嘿嘿嘿嘿，那个，<br>about页面有个人简历，去那里找找。  </p><p>阁子无光，不见日月。诳语胡诌，未知春秋。  </p><p>“ただいま！”   </p><embed src="//music.163.com/style/swf/widget.swf?sid=578072&type=2&auto=0&width=278&height=32" width="298" height="52" allownetworking="all">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;尘封的往事不必再提，忘却的岁月如风而逝。&lt;br&gt;
    
    </summary>
    
      <category term="杂记" scheme="http://newdee.cf/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="日常" scheme="http://newdee.cf/tags/%E6%97%A5%E5%B8%B8/"/>
    
      <category term="心情" scheme="http://newdee.cf/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>镜语</title>
    <link href="http://newdee.cf/posts/48f0e3fe/"/>
    <id>http://newdee.cf/posts/48f0e3fe/</id>
    <published>2016-12-18T15:08:52.000Z</published>
    <updated>2017-09-29T13:12:50.928Z</updated>
    
    <content type="html"><![CDATA[<!----><p>　　久不动笔，有时候总想说点什么，但是最后不知是碍于什么，也许是怕人看，也许是怕人了解自己，然后投来鄙夷的眼光。不过想到自己好歹也搭建了一个博客，或许可以在没有人知道的地方，尽情的释放自己。<br><a id="more"></a>　<br>　　这么想已经很久了，但是每次只是花费了半分钟这么想。以至于现在突然兴起，连题目都想不出来叫啥，所以只能先废话着，等到末了看看能不能尽量少选几个字一言蔽之。<br>　　走在路上的时候，好像一直在思考，思考着以后该怎么办，思考着如何才能不浪费时间，周围的经常没有话唠，偶尔聊聊几句。昏暗的路灯下，大家都安静走着，只有树上的黑鸦偶尔叫几声，或是拍拍翅膀。还有落地的声响，是它们的白翔。<br>　　现在北京已经是十二月下旬了，马上就要进入春运抢票时间了，不管是学校还是公司，应该都要开始年度总结了。但现在却越来越怕这件事了，每次总结都会发现了浪费了好多时间，都会暗自下决定接下来好好学习，然后便是不断循环着的愧疚自责，不断循环着的下定决心。最后便是越来越怕自己了，或者我会指着镜子问为什么要骗我？为什么要让自己意识到这些，却带不来任何改变？<br>　　明明看着电视里的那些不公平的事，你那么气愤。<br>　　然而，最终你还是没能改变导演既定的剧本。<br>　　这只是电视，只是剧本，你这样安慰着你。面对所有的该与不该，对于自己的剧本，你依然无法插手。迷茫，愤怒，惊醒，奋斗，迷茫，如此往复。总会想着自己奋斗的初衷，什么时候起已经无法成为动力。总是嘲笑所谓的梦想，到底是为了欺人还是骗自己。为什么当初能坚持一件多少人坚持不了的事，现在做什么都是半途而废？为什么看到自己的无能都是不甘，却还是让自己一如既往？<br>　　不知道从什么时候起，那么的讨厌鸡汤，不知道为什么人非得带着积极的情绪活下去，不知道为什么世间的真理都是需要乐观，也不知道我是怎样成为这样一个阴暗的人的。然而我所知道的是，我却在讨厌鸡汤的同时却也讨厌自己。<br>　　人总是在追求幸福，而世间的不幸，正是伴随着这些幸福而生。<br>　　当你看到或想到别人的不幸，你才发现自己的幸福；当你看到或想到自己的不幸，也会觉得他人身在福中。<br>　　镜子不说话，你们又归于沉默。</p>]]></content>
    
    <summary type="html">
    
      &lt;!----&gt;
&lt;p&gt;　　久不动笔，有时候总想说点什么，但是最后不知是碍于什么，也许是怕人看，也许是怕人了解自己，然后投来鄙夷的眼光。不过想到自己好歹也搭建了一个博客，或许可以在没有人知道的地方，尽情的释放自己。&lt;br&gt;
    
    </summary>
    
      <category term="呓语" scheme="http://newdee.cf/categories/%E5%91%93%E8%AF%AD/"/>
    
    
      <category term="年度总结" scheme="http://newdee.cf/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>建站，阁子记</title>
    <link href="http://newdee.cf/posts/6ed4d3bc/"/>
    <id>http://newdee.cf/posts/6ed4d3bc/</id>
    <published>2016-09-04T15:09:52.000Z</published>
    <updated>2017-10-29T05:54:44.912Z</updated>
    
    <content type="html"><![CDATA[<p>  丙申九月，建站小记。<br><a id="more"></a><br>  这两天趁着双休，学着搭了一下自己的blog，利用的是github的托管页面，用的是hexo的模板，申请了一个免费域名，自己添加了一些工具之类的，再准备陆续把以前自己在CSDN中的blog搬过来。<br>  不知道有没有人能看得到，好像添加搜索那部分还有点问题，sitemap的url报错，不过总算是自己的空间了，虽然还是github提供的，今天忙这个两顿饭都忘记准时吃了，都是吃的汉堡，虽然有点累，但是开辟自己的空间的感觉真的很不错。<br>  不过不知道能不能坚持，我对自己向来是不惮报以最坏的期望的，多少年都在证明这样做的正确性。不过对于进来的人，献上欢迎的花儿，还有飞吻。</p><p>现在记一下，博客搭建过程。<br>安装Nodejs和git自然不用多说。<br>然后选择主题，我选择的是一个透明的主题，不过这个主题的作者貌似很懒，只有透明效果。<br>然后布局和插件自己布置。<br>关于访问统计，一共用了百度统计/谷歌统计/腾讯统计，不过这些都是后台统计，显示在网页用的是不蒜子。<br>百度统计和腾讯统计直接在_partial下新建一个ejs，然后把获得的代码粘贴进去就行了。谷歌统计也有通用的模板，把id粘贴进去就行。最后在主题的配置文件里写一下。有的主题已经内置了百度和谷歌的统计代码的，只需要填入id就行，上面是说的没有的情况。<br>添加微博秀，直接到复制微博秀的代码。也是新建一个ejs文件，然后添加一个wedjet<br>修改背景，添加归档Archives,添加sitemap，提交谷歌搜索。<br>添加404，添加外链。<br>hexo方法大致一致，都是在百度谷歌现学现用。<br>以后有时间自己再做个主题，<br>以后有时间在用flask搭一个博客，<br>以后有时间，，，<br>不知道说什么了。</p><hr><p>修改了next主题后的一些配置（后加）  </p><h4 id="把侧边栏头像变成圆形，并且鼠标停留在上面发生旋转效果"><a href="#把侧边栏头像变成圆形，并且鼠标停留在上面发生旋转效果" class="headerlink" title="把侧边栏头像变成圆形，并且鼠标停留在上面发生旋转效果"></a>把侧边栏头像变成圆形，并且鼠标停留在上面发生旋转效果</h4><p>主要方法：修改themes/next/source/css/_common/components/sidebar/sidebar-author.styl</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.site-author-image</span> &#123;</div><div class="line">  <span class="attribute">display</span>: block;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">  <span class="attribute">padding</span>: $site-author-image-padding;</div><div class="line">  <span class="attribute">max-width</span>: $site-author-image-width;</div><div class="line">  <span class="attribute">height</span>: $site-author-image-height;</div><div class="line">  <span class="attribute">border</span>: $site-author-image-border-width solid $site-author-image-border-color;</div><div class="line">  <span class="comment">/* 头像圆形 */</span></div><div class="line">  <span class="attribute">border-radius</span>: <span class="number">80px</span>;</div><div class="line">  <span class="attribute">-webkit-border-radius</span>: <span class="number">80px</span>;</div><div class="line">  <span class="attribute">-moz-border-radius</span>: <span class="number">80px</span>;</div><div class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#333</span>sf;</div><div class="line">  <span class="comment">/* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 </span></div><div class="line"><span class="comment">    (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/</span></div><div class="line">  <span class="attribute">-webkit-animation</span>: play <span class="number">2s</span> ease-out <span class="number">1s</span> <span class="number">1</span>;</div><div class="line">  <span class="attribute">-moz-animation</span>: play <span class="number">2s</span> ease-out <span class="number">1s</span> <span class="number">1</span>;</div><div class="line">  <span class="attribute">animation</span>: play <span class="number">2s</span> ease-out <span class="number">1s</span> <span class="number">1</span>; </div><div class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></div><div class="line">  <span class="attribute">-webkit-transition</span>: -webkit-transform <span class="number">1.5s</span> ease-out;</div><div class="line">  <span class="attribute">-moz-transition</span>: -moz-transform <span class="number">1.5s</span> ease-out;</div><div class="line">  <span class="attribute">transition</span>: transform <span class="number">1.5s</span> ease-out;</div><div class="line">&#125;</div><div class="line"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</div><div class="line">  <span class="comment">/* 鼠标经过停止头像旋转 </span></div><div class="line"><span class="comment">  -webkit-animation-play-state:paused;</span></div><div class="line"><span class="comment">  animation-play-state:paused;*/</span></div><div class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></div><div class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(360deg);</div><div class="line">  <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(360deg);</div><div class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(360deg);</div><div class="line">&#125;</div><div class="line"><span class="comment">/* Z 轴旋转动画 */</span></div><div class="line">@-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> play &#123;</div><div class="line">  0% &#123;</div><div class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(0deg);</div><div class="line">  &#125;</div><div class="line">  100% &#123;</div><div class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(-360deg);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">@-<span class="keyword">moz</span>-<span class="keyword">keyframes</span> play &#123;</div><div class="line">  0% &#123;</div><div class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(0deg);</div><div class="line">  &#125;</div><div class="line">  100% &#123;</div><div class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(-360deg);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">@<span class="keyword">keyframes</span> play &#123;</div><div class="line">  0% &#123;</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(0deg);</div><div class="line">  &#125;</div><div class="line">  100% &#123;</div><div class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(-360deg);</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.site-author-name</span> &#123;</div><div class="line">  <span class="attribute">margin</span>: $site-author-name-margin;</div><div class="line">  <span class="attribute">text-align</span>: $site-author-name-align;</div><div class="line">  <span class="attribute">color</span>: $site-author-name-color;</div><div class="line">  <span class="attribute">font-weight</span>: $site-author-name-weight;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.site-description</span> &#123;</div><div class="line">  <span class="attribute">margin-top</span>: $site-description-margin-top;</div><div class="line">  <span class="attribute">text-align</span>: $site-description-align;</div><div class="line">  <span class="attribute">font-size</span>: $site-description-font-size;</div><div class="line">  <span class="attribute">color</span>: $site-description-color;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="添加nest背景特效："><a href="#添加nest背景特效：" class="headerlink" title="添加nest背景特效："></a>添加nest背景特效：</h4><p>打开next/layout/_layout.swig，在之前添加如下代码：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.canvas_nest %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><p>打开/next/_config.yml，添加以下代码：</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># --------------------------------------------------------------</span></div><div class="line"><span class="meta"># background settings</span></div><div class="line"><span class="meta"># --------------------------------------------------------------</span></div><div class="line"><span class="meta"># add canvas-nest effect</span></div><div class="line"><span class="meta"># see detail from https://github.com/hustcc/canvas-nest.js</span></div><div class="line">canvas_nest: <span class="literal">true</span></div></pre></td></tr></table></figure><h4 id="文章链接唯一化"><a href="#文章链接唯一化" class="headerlink" title="文章链接唯一化"></a>文章链接唯一化</h4><p>文章题目或者变更文章发布时间会经常更改，在默认设置下，文章链接都会改变，不利于搜索引擎收录，也不利于分享。唯一永久链接才是更好的选择。安装此插件后，不要在hexo s模式下更改文章文件名，否则文章将成空白。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> hexo-abbrlink <span class="comment">--save</span></div></pre></td></tr></table></figure><p>修改站点配置文件：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">permalink:</span> posts/:abbrlink/  <span class="meta"># “posts/” 可自行更换</span></div><div class="line"><span class="meta"># abbrlink config</span></div><div class="line"><span class="symbol">abbrlink:</span></div><div class="line"><span class="symbol">alg:</span> crc32  <span class="meta"># 算法：crc16(default) and crc32 </span></div><div class="line"><span class="symbol">rep:</span> hex    <span class="meta"># 进制：dec(default) and hex</span></div></pre></td></tr></table></figure><p>可选择模式：</p><ul><li>crc16 &amp; hex</li><li>crc16 &amp; dec</li><li>crc32 &amp; hex</li><li>crc32 &amp; dec</li></ul><h4 id="添加宠物（虽然没卵用）"><a href="#添加宠物（虽然没卵用）" class="headerlink" title="添加宠物（虽然没卵用）"></a>添加宠物（虽然没卵用）</h4><p>回到博客目录:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> -<span class="keyword">save</span> hexo-helper-live2d</div></pre></td></tr></table></figure><p>然后打开Hexo/blog/themes/next/layout的_layout.swig,将下面代码放到之前：</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;&#123; live2d() &#125;&#125;</div></pre></td></tr></table></figure><p>然后在在 hexo 的_config.yml 中添加参数：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">live2d:</span></div><div class="line"><span class="symbol">model:</span> wanko</div><div class="line"><span class="symbol">bottom:</span> <span class="number">-30</span></div></pre></td></tr></table></figure><p>下面是一些model，可以换不同的宠物:<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="bullet">* </span>Gantzert_Felixander</div><div class="line"><span class="bullet">* </span>Epsilon2.1</div><div class="line"><span class="bullet">* </span>haru</div><div class="line"><span class="bullet">* </span>miku</div><div class="line"><span class="bullet">* </span>ni-j</div><div class="line"><span class="bullet">* </span>nico</div><div class="line"><span class="bullet">* </span>nito</div><div class="line"><span class="bullet">* </span>nipsilon</div><div class="line"><span class="bullet">* </span>nietzsche</div><div class="line"><span class="bullet">* </span>shizuku</div><div class="line"><span class="bullet">* </span>tsumiki</div><div class="line"><span class="bullet">* </span>wanko</div><div class="line"><span class="bullet">* </span>z16</div><div class="line"><span class="bullet">* </span>hibiki</div><div class="line"><span class="bullet">* </span>koharu</div><div class="line"><span class="bullet">* </span>haruto</div><div class="line"><span class="bullet">* </span>Unitychan</div><div class="line"><span class="bullet">* </span>tororo</div><div class="line"><span class="bullet">* </span>hijiki</div><div class="line"><span class="bullet">* </span>width 宽度 默认值: 150</div><div class="line"><span class="bullet">* </span>height 高度 默认值： 300</div><div class="line"><span class="bullet">* </span>className 元素的类名 默认值： live2d</div><div class="line"><span class="bullet">* </span>id 元素的id 默认值： live2dcanvas</div><div class="line"><span class="bullet">* </span>bottom 元素的底部偏移 默认值： -20 如果嫌模型位置不正确 可以调整这个参数</div></pre></td></tr></table></figure></p><pre><code>详细地址:https://huaji8.top/post/live2d-plugin-2.0/</code></pre><h4 id="首页title的优化"><a href="#首页title的优化" class="headerlink" title="首页title的优化"></a>首页title的优化</h4><p>更改index.swig文件，文件路径是your-hexo-site\themes\next\layout，将下面代码</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml">  </span><span class="template-variable">&#123;&#123; config.title &#125;&#125;</span><span class="xml">  </span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><p>改成:</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">block</span></span> title %&#125;</span><span class="xml">  </span><span class="template-variable">&#123;&#123; config.title &#125;&#125;</span><span class="xml"> - </span><span class="template-variable">&#123;&#123; theme.description &#125;&#125;</span><span class="xml">  </span><span class="template-tag">&#123;% <span class="name"><span class="name">endblock</span></span> %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><h4 id="添加mob-share-SDK分享"><a href="#添加mob-share-SDK分享" class="headerlink" title="添加mob_share SDK分享"></a>添加mob_share SDK分享</h4><p>方法：在_config.xml中添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#Share</span></div><div class="line"><span class="attr">mob_share:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  appkey:</span> <span class="string">********</span></div></pre></td></tr></table></figure><p>然后添加mob模块：<br>在<code>next/layout/_partials/share/</code>文件夹中新建一个mob_share.swig文件，内容为:</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="comment">&lt;!--MOB SHARE BEGIN--&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"-mob-share-ui-button -mob-share-open"</span>&gt;</span>分享<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"-mob-share-ui"</span>  <span class="attr">-mob-share-ui-theme</span> <span class="attr">-mob-share-ui-theme-slide-bottom</span> <span class="attr">style</span>=<span class="string">"display: none"</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"-mob-share-list"</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"-mob-share-weixin"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>微信<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"-mob-share-qzone"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>QQ空间<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"-mob-share-weibo"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>新浪微博<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"-mob-share-facebook"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Facebook<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"-mob-share-twitter"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Twitter<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"-mob-share-pocket"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Pocket<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"-mob-share-tumblr"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Tumblr<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"-mob-share-google"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Google+<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"-mob-share-linkedin"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Linkedin<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"-mob-share-qq"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>QQ好友<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"-mob-share-tencentweibo"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>腾讯微博<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"-mob-share-renren"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>人人网<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"-mob-share-douban"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>豆瓣<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"-mob-share-youdao"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>有道云笔记<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"-mob-share-instapaper"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Instapaper<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"-mob-share-close"</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"-mob-share-ui-bg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">"-mob-share"</span> <span class="attr">src</span>=<span class="string">"http://f1.webshare.mob.com/code/mob-share.js?appkey=</span></span></span><span class="template-variable">&#123;&#123;theme.mob_share.appkey&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="comment">&lt;!--MOB SHARE END--&gt;</span></span></div></pre></td></tr></table></figure><p>然后添加引用，在<code>next/layout/post.swig</code>文件中，添加一行即可。</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">elseif</span> theme.mob_share.enable %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">      </span><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> '_partials/share/mob_share.swig' %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><h3 id="后来添加了一些插件："><a href="#后来添加了一些插件：" class="headerlink" title="后来添加了一些插件："></a>后来添加了一些插件：</h3><h4 id="hexo-ruby-character插件"><a href="#hexo-ruby-character插件" class="headerlink" title="hexo-ruby-character插件"></a>hexo-ruby-character插件</h4><p>插件主要用来给文字注音啥的，具体效果见官方<a href="https://github.com/JamesPan/hexo-ruby-character" rel="external nofollow noopener noreferrer" target="_blank">repo</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> hexo-ruby-<span class="built_in">character</span> <span class="comment">--save</span></div></pre></td></tr></table></figure><p>使用方法：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">ruby</span> Base|top %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><ruby>Base<rp> (</rp><rt>top</rt><rp>) </rp></ruby> <h4 id="hexo-pdf插件"><a href="#hexo-pdf插件" class="headerlink" title="hexo-pdf插件"></a>hexo-pdf插件</h4><p>用来在文档中插入pdf的，官方<a href="https://github.com/superalsrk/hexo-pdf/" rel="external nofollow noopener noreferrer" target="_blank">repo</a><br>安装：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> <span class="comment">--save hexo-pdf</span></div></pre></td></tr></table></figure><p>用法：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">pdf</span> http://7xov2f.com1.z0.glb.clouddn.com/bash_freshman.pdf %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><h4 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h4><p>虽然图片不多，没多大用，不过还是用了，想着稍微能提速一点。官方<a href="https://github.com/Troy-Yang/hexo-lazyload-image" rel="external nofollow noopener noreferrer" target="_blank">repo</a><br>安装：</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-lazyload-<span class="built_in">image</span> --<span class="built_in">save</span></div></pre></td></tr></table></figure><p>配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">lazyload:</span></div><div class="line"><span class="attr">enable:</span> <span class="literal">true</span> </div><div class="line"><span class="attr">onlypost:</span> <span class="literal">false</span></div><div class="line"><span class="attr">loadingImg:</span> <span class="comment"># eg. ./images/loading.png</span></div></pre></td></tr></table></figure><h4 id="添加DaoVoice插件"><a href="#添加DaoVoice插件" class="headerlink" title="添加DaoVoice插件"></a>添加DaoVoice插件</h4><p>首先在Daovoice官网注册一个账号，新建一个应用，然后进入应用，选择安装到网站，获取 接入代码 和 app_id。<br>然后编写主题配置文件_config.xml，加入几行：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">daovoice:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  app_id:</span> <span class="string">******</span></div></pre></td></tr></table></figure><p>然后编写 DaoVoice 接入代码：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="xml">找到themes/next/lauout/_third-party/目录，在该目录下新增 daovoice/daovoice.swig 文件，然后在daovoice文件中写入：</span></div><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.daovoice.enable %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">   <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span></div><div class="line"><span class="xml">     (function(i,s,o,g,r,a,m)&#123;</span></div><div class="line"><span class="xml">     i["DaoVoiceObject"]=r;</span></div><div class="line"><span class="xml">     i[r]=i[r]||function()&#123;</span></div><div class="line"><span class="xml">     (i[r].q=i[r].q||[]).push(arguments)&#125;,</span></div><div class="line"><span class="xml">     i[r].l=1*new Date();</span></div><div class="line"><span class="xml">     a=s.createElement(o),</span></div><div class="line"><span class="xml">     m=s.getElementsByTagName(o)[0];</span></div><div class="line"><span class="xml">     a.async=1;</span></div><div class="line"><span class="xml">     a.src=g;</span></div><div class="line"><span class="xml">     a.charset="utf-8";</span></div><div class="line"><span class="xml">     m.parentNode.insertBefore(a,m)</span></div><div class="line"><span class="xml">     &#125;)(window,document,"script",('https:' == document.location.protocol ? 'https:' : 'http:') + "//widget.daovoice.io/widget/</span><span class="template-variable">&#123;&#123; theme.daovoice.app_id &#125;&#125;</span><span class="xml">.js","daovoice")</span></div><div class="line"><span class="xml">     daovoice('init', &#123;</span></div><div class="line"><span class="xml">     app_id: "</span><span class="template-variable">&#123;&#123; theme.daovoice.app_id &#125;&#125;</span><span class="xml">"</span></div><div class="line"><span class="xml">     &#125;);</span></div><div class="line"><span class="xml">     daovoice('update');</span></div><div class="line"><span class="xml">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line"><span class="xml"> </span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><p>然后再在模板文件里引入 DaoVoice 接入代码：<br>找到themes/next/lauout/_layout.swig文件，引入刚才写的 daovoice.swig 文件。</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> '_third-party/daovoice/daovoice.swig' %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><h4 id="隐藏底部powered一栏"><a href="#隐藏底部powered一栏" class="headerlink" title="隐藏底部powered一栏"></a>隐藏底部powered一栏</h4><p>打开hexo/themes/next/layout/_partials/footer.swig,使用<code>&lt;!-- --&gt;</code>隐藏之间的代码即可。或者直接删除</p><h4 id="修改底栏心形图标"><a href="#修改底栏心形图标" class="headerlink" title="修改底栏心形图标"></a>修改底栏心形图标</h4><p>直接去fontawesome网站找到对应的图标名字，在主题配置文件中替换掉heart就行。</p><h4 id="主页文章添加阴影效果"><a href="#主页文章添加阴影效果" class="headerlink" title="主页文章添加阴影效果"></a>主页文章添加阴影效果</h4><p>打开\themes\next\source\css_custom\custom.styl,向里面加入：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 主页文章添加阴影效果</span></div><div class="line"> <span class="selector-class">.post</span> &#123;</div><div class="line">   <span class="attribute">margin-top</span>: <span class="number">60px</span>;</div><div class="line">   <span class="attribute">margin-bottom</span>: <span class="number">60px</span>;</div><div class="line">   <span class="attribute">padding</span>: <span class="number">25px</span>;</div><div class="line">   -webkit-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> rgba(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, .<span class="number">5</span>);</div><div class="line">   -moz-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> rgba(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, .<span class="number">5</span>);</div><div class="line">  &#125;</div></pre></td></tr></table></figure><h4 id="修改页面底部标签分类的-号"><a href="#修改页面底部标签分类的-号" class="headerlink" title="修改页面底部标签分类的#号"></a>修改页面底部标签分类的#号</h4><p>修改模板<code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=”tag”&gt;#</code>，将 <code>#</code> 换成喜欢的图标，具体可以去FontAwesome网站去找。</p><h4 id="添加脚注"><a href="#添加脚注" class="headerlink" title="添加脚注"></a>添加脚注</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> hexo-<span class="keyword">reference</span> <span class="comment">--save</span></div></pre></td></tr></table></figure><p>用法：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">basic footnote<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></div><div class="line">here is an inline footnote[<span class="string">^2</span>](<span class="link">inline footnote</span>)</div><div class="line">and another one<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup></div><div class="line">and another one<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup></div><div class="line"> </div><div class="line">[<span class="symbol">^1</span>]: <span class="link">basic footnote content</span></div><div class="line">[<span class="symbol">^3</span>]: <span class="link">paragraph</span></div><div class="line">footnote</div><div class="line">content</div><div class="line">[<span class="string">^4</span>]: footnote content with some [<span class="string">markdown</span>](<span class="link">https://en.wikipedia.org/wiki/Markdown</span>)</div></pre></td></tr></table></figure><h4 id="添加居中模块"><a href="#添加居中模块" class="headerlink" title="添加居中模块"></a>添加居中模块</h4><p>用HTML代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">class</span>=<span class="string">"blockquote-center"</span>&gt;</span>优秀的人，不是不合群，而是他们合群的人里面没有你<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></div></pre></td></tr></table></figure><h4 id="添加鼠标特效"><a href="#添加鼠标特效" class="headerlink" title="添加鼠标特效"></a>添加鼠标特效</h4><p>新建一个js：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim themes<span class="regexp">/next/</span><span class="keyword">source</span><span class="regexp">/js/</span>src<span class="regexp">/mouse.js</span></div></pre></td></tr></table></figure><p>在里面输入:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 鼠标特效 */</span></div><div class="line"><span class="keyword">var</span> a_idx = <span class="number">0</span>;</div><div class="line">jQuery(document).ready(<span class="function"><span class="keyword">function</span><span class="params">($)</span> </span>&#123;</div><div class="line">   $(<span class="string">"body"</span>).click(<span class="function"><span class="keyword">function</span><span class="params">(e)</span> </span>&#123;</div><div class="line">       <span class="keyword">var</span> a = <span class="keyword">new</span> <span class="keyword">Array</span>(<span class="string">"富强"</span>, <span class="string">"民主"</span>, <span class="string">"文明"</span>, <span class="string">"和谐"</span>, <span class="string">"自由"</span>, <span class="string">"平等"</span>, <span class="string">"公正"</span> ,<span class="string">"法治"</span>, <span class="string">"爱国"</span>, <span class="string">"敬业"</span>, <span class="string">"诚信"</span>, <span class="string">"友善"</span>);</div><div class="line">       <span class="keyword">var</span> $i = $(<span class="string">"&lt;span/&gt;"</span>).text(a[a_idx]);</div><div class="line">       a_idx = (a_idx + <span class="number">1</span>) % a.length;</div><div class="line">       <span class="keyword">var</span> x = e.pageX,</div><div class="line">       y = e.pageY;</div><div class="line">       $i.css(&#123;</div><div class="line">           <span class="string">"z-index"</span>: <span class="number">999999999999999999999999999999999999999999999999999999999999999999999</span>,</div><div class="line">           <span class="string">"top"</span>: y - <span class="number">20</span>,</div><div class="line">           <span class="string">"left"</span>: x,</div><div class="line">           <span class="string">"position"</span>: <span class="string">"absolute"</span>,</div><div class="line">           <span class="string">"font-weight"</span>: <span class="string">"bold"</span>,</div><div class="line">           <span class="string">"color"</span>: <span class="string">"#ff6651"</span></div><div class="line">       &#125;);</div><div class="line">       $(<span class="string">"body"</span>).append($i);</div><div class="line">       $i.animate(&#123;</div><div class="line">           <span class="string">"top"</span>: y - <span class="number">180</span>,</div><div class="line">           <span class="string">"opacity"</span>: <span class="number">0</span></div><div class="line">       &#125;,</div><div class="line">       <span class="number">1500</span>,</div><div class="line">       <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</div><div class="line">           $i.remove();</div><div class="line">       &#125;);</div><div class="line">   &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>然后在<code>Blog\themes\next\layout\_layout.swig</code>文件的最下方，<code>&lt;/body&gt;</code>前面添加<code>&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/mouse.js&quot;&gt;&lt;/script&gt;</code>。</p><h4 id="添加时钟"><a href="#添加时钟" class="headerlink" title="添加时钟"></a>添加时钟</h4><p>在<code>next\layout\_macro</code>中找到sidebar.swig(侧边导航栏),在合适的位置加入一下代码:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"swf_clock"</span> align=<span class="string">"center"</span>&gt;</div><div class="line">&lt;embed name=<span class="string">"honehoneclock"</span> width=<span class="string">"160"</span> height=<span class="string">"70"</span> align=<span class="string">"middle"</span> pluginspage=<span class="string">"http://www.macromedia.com/go/getflashplayer"</span> src=<span class="string">"http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock01.swf"</span> type=<span class="string">"application/x-shockwave-flash"</span> wmode=<span class="string">"transparent"</span> quality=<span class="string">"high"</span> bgcolor=<span class="string">"#ffffff"</span> allowscriptaccess=<span class="string">"always"</span>&gt;</div><div class="line">&lt;<span class="regexp">/div&gt;</span></div></pre></td></tr></table></figure><h4 id="给页面添加背景图片"><a href="#给页面添加背景图片" class="headerlink" title="给页面添加背景图片"></a>给页面添加背景图片</h4><p>在<code>theme/next/source/css/_custom</code>文件夹下打开<code>custom.styl</code>文件，往里面添加以下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span>&#123;   </div><div class="line">        <span class="attribute">background</span>:<span class="built_in">url</span>(图片链接);</div><div class="line">        <span class="attribute">background-size</span>:cover;</div><div class="line">        <span class="attribute">background-repeat</span>:no-repeat;</div><div class="line">        <span class="attribute">background-attachment</span>:fixed;</div><div class="line">        <span class="attribute">background-position</span>:center;</div><div class="line">     &#125;</div></pre></td></tr></table></figure><h4 id="文字背景色以及半透明的设置"><a href="#文字背景色以及半透明的设置" class="headerlink" title="文字背景色以及半透明的设置"></a>文字背景色以及半透明的设置</h4><p>一样，在<code>theme/next/source/css/_custom</code>文件夹下打开<code>custom.styl</code>文件，往里面添加以下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.content</span> &#123;</div><div class="line">            <span class="attribute">border-radius</span>: <span class="number">10px</span>;</div><div class="line">            <span class="attribute">margin-top</span>: <span class="number">60px</span>;</div><div class="line">            <span class="attribute">background</span>:<span class="built_in">rgba</span>(颜色rgb,透明度) none repeat scroll <span class="meta">!important</span>;</div><div class="line"></div><div class="line">         &#125;</div></pre></td></tr></table></figure><p>其中border-radius是给文章背景设置圆角，margin-top是设置文章到顶部的距离，其中属性可根据自己的需要进行调整。<br>在修改完文章背景色之后，文字颜色可能和背景色不能很好的搭配，这时候我们就需要修改文章字体的颜色了。打开theme/next/source/css/_common/scaffolding文件夹下的base.styl文件，找到body{}，将其中的color:$text-color更改为你想要的颜色即可。代码如下：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">body</span> &#123;</div><div class="line">  <span class="attribute">position</span>: relative; <span class="comment">/* Required by scrollspy */</span></div><div class="line">  <span class="attribute">font-family</span>: <span class="variable">$font-family-base</span>;</div><div class="line">  <span class="attribute">font-size</span>: <span class="variable">$font-size-base</span>;</div><div class="line">  <span class="attribute">line-height</span>: <span class="variable">$line-height-base</span>;</div><div class="line">  <span class="attribute">color</span>: 颜色代码;</div><div class="line">  <span class="attribute">background</span>: <span class="variable">$body-bg-color</span>;</div><div class="line">  +mobile() &#123; <span class="attribute">padding-right</span>: <span class="number">0</span> <span class="meta">!important</span>; &#125;</div><div class="line">  +tablet() &#123; <span class="attribute">padding-right</span>: <span class="number">0</span> <span class="meta">!important</span>; &#125;</div><div class="line">  +desktop-large() &#123; <span class="attribute">font-size</span>: <span class="variable">$font-size-large</span>; &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="文章页面宽度设置"><a href="#文章页面宽度设置" class="headerlink" title="文章页面宽度设置"></a>文章页面宽度设置</h4><p>还是在<code>theme/next/source/css/_custom</code>文件夹下打开<code>custom.styl</code>文件，往里面添加以下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">main-inner</span> &#123;<span class="attribute">width</span>: 页面宽度;&#125;</div></pre></td></tr></table></figure><h4 id="文章内单行代码的样式设置"><a href="#文章内单行代码的样式设置" class="headerlink" title="文章内单行代码的样式设置"></a>文章内单行代码的样式设置</h4><p>如果更改了网页底色，单行代码的颜色可能与背景色不搭配，这时就需要我们自己设置了。在<code>theme/next/source/css/_custom</code>文件夹下打开<code>custom.styl</code>文件，往里面添加以下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#posts</span> <span class="selector-tag">code</span> &#123;<span class="attribute">color</span>: 颜色代码;<span class="attribute">background-color</span>:颜色代码;&#125;</div></pre></td></tr></table></figure><h4 id="网页顶部和底部的文字颜色修改"><a href="#网页顶部和底部的文字颜色修改" class="headerlink" title="网页顶部和底部的文字颜色修改"></a>网页顶部和底部的文字颜色修改</h4><h5 id="头部文字颜色"><a href="#头部文字颜色" class="headerlink" title="头部文字颜色"></a>头部文字颜色</h5><ul><li>更改头部<code>site-title</code>的字体颜色<br>在<code>theme/next/source/css/_common/components/header</code>文件夹下打开<code>site-meta.styl</code>文件，找到<code>.brand{}</code>向里面添加以下代码：</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">color</span>: 颜色代码 <span class="meta">!important</span>;</div></pre></td></tr></table></figure><ul><li>更改头部<code>menu</code>的字体颜色<br>在相同的文件夹下打开<code>menu.styl</code>文件，找到<code>a{}</code>，向里面添加以下代码：</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">color</span>: 颜色代码 <span class="meta">!important</span>;</div></pre></td></tr></table></figure><h5 id="底部文字颜色"><a href="#底部文字颜色" class="headerlink" title="底部文字颜色"></a>底部文字颜色</h5><p>底部文字颜色的修改就显得很简单了，还是在<code>theme/next/source/css/_custom</code>文件夹下打开<code>custom.styl</code>文件，往里面添加以下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.footer-inner</span> &#123;<span class="attribute">color</span>: 颜色代码;&#125;</div></pre></td></tr></table></figure><h4 id="侧栏背景图以及内部文字颜色的修改"><a href="#侧栏背景图以及内部文字颜色的修改" class="headerlink" title="侧栏背景图以及内部文字颜色的修改"></a>侧栏背景图以及内部文字颜色的修改</h4><p>还是在<code>theme/next/source/css/_custom</code>文件夹下打开<code>custom.styl</code>文件，往里面添加以下代码：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#sidebar</span> &#123;</div><div class="line">            <span class="attribute">background</span>:url(图片链接);</div><div class="line">            <span class="attribute">background-size</span>: cover;</div><div class="line">            <span class="attribute">background-position</span>:center;</div><div class="line">            <span class="attribute">background-repeat</span>:no-repeat;</div><div class="line">            <span class="selector-tag">p</span>,<span class="selector-tag">span</span>,<span class="selector-tag">a</span> &#123;<span class="attribute">color</span>: 颜色代码;&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>其中设置<code>p,span,a{color:颜色代码}</code>，即可修改侧边栏内部文字的颜色。</p><h4 id="修改Mist风格下的侧边栏位置为左边"><a href="#修改Mist风格下的侧边栏位置为左边" class="headerlink" title="修改Mist风格下的侧边栏位置为左边"></a>修改Mist风格下的侧边栏位置为左边</h4><p>此设置为修改next主题Mist风格下侧边栏的位置为左边（默认为右边）以及侧边栏变化后页面变化的方向，具体操作如下：</p><h5 id="更改页面变化方向："><a href="#更改页面变化方向：" class="headerlink" title="更改页面变化方向："></a>更改页面变化方向：</h5><p>首先，打开next/source/js/src文件夹下的motion.js文件Ctrl+F查找paddingRight；把所有（2个）PaddingRight更改为paddingLeft即可。<br>代码样式如下：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&#123;<span class="string">paddingLeft:</span> SIDEBAR_WIDTH&#125;,</div><div class="line">NexT.utils.isDesktop() &amp;&amp; $(<span class="string">'body'</span>).velocity(<span class="string">'stop'</span>).velocity(&#123;<span class="string">paddingLeft:</span> <span class="number">0</span>&#125;);</div></pre></td></tr></table></figure><h5 id="更改所有和sidebar相关的元素："><a href="#更改所有和sidebar相关的元素：" class="headerlink" title="更改所有和sidebar相关的元素："></a>更改所有和sidebar相关的元素：</h5><ul><li>更改sidebar：</li></ul><p>打开next/source/css/_common/components/sidebar文件夹下的sidebar.styl文件，将.sidebar{}内的right: 0;改为left: 0;，形式如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.sidebar</span> &#123;</div><div class="line">              <span class="attribute">position</span>: fixed;</div><div class="line">              <span class="attribute">left</span>: <span class="number">0</span>;</div></pre></td></tr></table></figure><ul><li>打开相同路径下的sidebar-toggle.styl文件，将.sidebar-toggle{}内的right: $b2t-position-right;改为left: $b2t-position-right;，形式如下：</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.sidebar-toggle</span> &#123;</div><div class="line">                      <span class="attribute">position</span>: fixed;</div><div class="line">                      <span class="attribute">left</span>: $b2t-position-right;</div></pre></td></tr></table></figure><ul><li>返回上一个文件夹，打开back-to-top.styl文件，将.back-to-top {}内的right: $b2t-position-right;改为left: $b2t-position-right;，形式如下：</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.back-to-top</span> &#123;</div><div class="line">                  <span class="attribute">box-sizing</span>: border-box;</div><div class="line">                  <span class="attribute">position</span>: fixed;</div><div class="line">                  <span class="attribute">bottom</span>: $b2t-position-bottom;</div><div class="line">                  <span class="attribute">left</span>: $b2t-position-right;</div></pre></td></tr></table></figure><h5 id="修正侧边栏在左边时的小BUG"><a href="#修正侧边栏在左边时的小BUG" class="headerlink" title="修正侧边栏在左边时的小BUG"></a>修正侧边栏在左边时的小BUG</h5><p>BUG描述：在更改浏览器大小的时候，顶部栏和底部栏未和侧边栏同步。<br>解决方法：在themes/next/layout/source/js/src文件夹下打开motion.js文件，在$(document).ready(function (){}顶部其中添加代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> bwol=<span class="built_in">document</span>.body.offsetWidth;</div><div class="line">    <span class="keyword">if</span>(bwol &lt; <span class="number">975</span>)&#123;</div><div class="line">        $(<span class="string">'aside#sidebar'</span>).css(<span class="string">"display"</span>,<span class="string">"none"</span>);</div><div class="line">        $(<span class="string">'body'</span>).css(<span class="string">"paddingLeft"</span>,<span class="string">"0px"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="built_in">window</span>.onresize = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">var</span> bwos=<span class="built_in">document</span>.body.offsetWidth;</div><div class="line">    bwos &lt; <span class="number">975</span> &amp;&amp; $(<span class="string">'body'</span>).velocity(<span class="string">'stop'</span>).velocity(&#123;<span class="attr">paddingLeft</span>: <span class="number">0</span>&#125;,<span class="number">0</span>);</div><div class="line">    <span class="keyword">if</span>($(<span class="string">'aside#sidebar'</span>).css(<span class="string">'display'</span>) != <span class="string">'none'</span> &amp;&amp; $(<span class="string">'aside#sidebar'</span>).css(<span class="string">'width'</span>)!=<span class="string">'0px'</span>)</div><div class="line">        $(<span class="string">'body'</span>).velocity(<span class="string">'stop'</span>).velocity(&#123;<span class="attr">paddingLeft</span>: <span class="number">350</span>&#125;,<span class="number">0</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h5 id="更改侧边栏控制按钮的样式"><a href="#更改侧边栏控制按钮的样式" class="headerlink" title="更改侧边栏控制按钮的样式"></a>更改侧边栏控制按钮的样式</h5><p>在themes/next/layout/source/js/src文件夹下打开motion.js文件，在顶部其中更改代码。找到以下代码的位置：</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> sidebarToggleLine1st = <span class="keyword">new</span> <span class="type">SidebarToggleLine</span>();</div><div class="line"><span class="keyword">var</span> sidebarToggleLine2st = <span class="keyword">new</span> <span class="type">SidebarToggleLine</span>();</div><div class="line"><span class="keyword">var</span> sidebarToggleLine3st = <span class="keyword">new</span> <span class="type">SidebarToggleLine</span>();</div></pre></td></tr></table></figure><p>将其内部内容更改为以下内容：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">var sidebarToggleLine1st = <span class="keyword">new</span> SidebarToggleLine(&#123;</div><div class="line"><span class="symbol">    el:</span> <span class="string">'.sidebar-toggle-line-first'</span>,</div><div class="line"><span class="symbol">    status:</span> &#123;</div><div class="line"><span class="symbol">      arrow:</span> &#123;<span class="string">width:</span> <span class="string">'50%'</span>, <span class="string">rotateZ:</span> <span class="string">'45deg'</span>, <span class="string">top:</span> <span class="string">'2px'</span>, <span class="string">left:</span> <span class="string">'6px'</span>&#125;,</div><div class="line">      <span class="comment">// close: &#123;width: '100%', rotateZ: '-45deg', top: '5px', left: '0px'&#125; //叉字形</span></div><div class="line"><span class="symbol">      close:</span> &#123;<span class="string">width:</span> <span class="string">'50%'</span>, <span class="string">rotateZ:</span> <span class="string">'-45deg'</span>, <span class="string">top:</span> <span class="string">'2px'</span>, <span class="string">left:</span> <span class="string">'0px'</span>&#125; <span class="comment">//箭头形</span></div><div class="line">    &#125;</div><div class="line">  &#125;);</div><div class="line">  var sidebarToggleLine2nd = <span class="keyword">new</span> SidebarToggleLine(&#123;</div><div class="line"><span class="symbol">    el:</span> <span class="string">'.sidebar-toggle-line-middle'</span>,</div><div class="line"><span class="symbol">    status:</span> &#123;</div><div class="line"><span class="symbol">      arrow:</span> &#123;<span class="string">width:</span> <span class="string">'90%'</span>&#125;,</div><div class="line">      <span class="comment">// close: &#123;opacity: 0&#125;  //箭头形</span></div><div class="line"><span class="symbol">      close:</span> &#123;<span class="string">width:</span> <span class="string">'90%'</span>&#125;</div><div class="line">    &#125;</div><div class="line">  &#125;);</div><div class="line">  var sidebarToggleLine3rd = <span class="keyword">new</span> SidebarToggleLine(&#123;</div><div class="line"><span class="symbol">    el:</span> <span class="string">'.sidebar-toggle-line-last'</span>,</div><div class="line"><span class="symbol">    status:</span> &#123;</div><div class="line"><span class="symbol">      arrow:</span> &#123;<span class="string">width:</span> <span class="string">'50%'</span>, <span class="string">rotateZ:</span> <span class="string">'-45deg'</span>, <span class="string">top:</span> <span class="string">'-2px'</span>, <span class="string">left:</span> <span class="string">'6px'</span>&#125;,</div><div class="line">      <span class="comment">// close: &#123;width: '100%', rotateZ: '45deg', top: '-5px', left: '0px'&#125; //叉字形</span></div><div class="line"><span class="symbol">      close:</span> &#123;<span class="string">width:</span> <span class="string">'50%'</span>, <span class="string">rotateZ:</span> <span class="string">'45deg'</span>, <span class="string">top:</span> <span class="string">'-2px'</span>, <span class="string">left:</span> <span class="string">'0px'</span>&#125; <span class="comment">//箭头形</span></div><div class="line">    &#125;</div><div class="line">  &#125;);</div></pre></td></tr></table></figure><h4 id="添加侧边栏头像的链接"><a href="#添加侧边栏头像的链接" class="headerlink" title="添加侧边栏头像的链接"></a>添加侧边栏头像的链接</h4><h5 id="修改鼠标样式："><a href="#修改鼠标样式：" class="headerlink" title="修改鼠标样式："></a>修改鼠标样式：</h5><p>在themes/next/layout/source/css/_common/componets/sidebar文件夹下打开sidebar-author.styl文件，在.site-author-image{}内添加cursor: pointer;形如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.site-author-image</span> &#123;</div><div class="line">                            <span class="attribute">display</span>: block;</div><div class="line">                            <span class="attribute">margin</span>: <span class="number">0</span> auto;</div><div class="line">                            <span class="attribute">padding</span>: $site-author-image-padding;</div><div class="line">                            <span class="attribute">max-width</span>: $site-author-image-width;</div><div class="line">                            <span class="attribute">height</span>: $site-author-image-height;</div><div class="line">                            <span class="attribute">border</span>: $site-author-image-border-width solid $site-author-image-border-color;</div><div class="line">                            <span class="attribute">cursor</span>: pointer;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h5 id="添加链接："><a href="#添加链接：" class="headerlink" title="添加链接："></a>添加链接：</h5><p>在themes/next/layout/source/js/src文件夹下打开motion.js文件，在顶部其中添加代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'.site-author-image'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">      <span class="built_in">window</span>.location.href=<span class="string">"自定义链接"</span>;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><h4 id="设置鼠标划入侧边栏才显示站点信息："><a href="#设置鼠标划入侧边栏才显示站点信息：" class="headerlink" title="设置鼠标划入侧边栏才显示站点信息："></a>设置鼠标划入侧边栏才显示站点信息：</h4><p>在theme/next/layout/_macro文件夹下打开sidebar.swig文件，找到以下代码行的位置：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;nav <span class="keyword">class</span>=<span class="string">"site-state motion-element"</span>&gt;</div></pre></td></tr></table></figure><p>在其上添加以下代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--my custom code begin--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/velocity/1.5.0/velocity.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">  $(<span class="string">"#sidebar"</span>).hover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></div><div class="line"><span class="javascript">    $(<span class="string">"#mydivshow"</span>).velocity(<span class="string">'stop'</span>).velocity(&#123;<span class="attr">opacity</span>: <span class="number">1</span>&#125;);</span></div><div class="line"><span class="actionscript">  &#125;,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></div><div class="line"><span class="javascript">    $(<span class="string">"#mydivshow"</span>).velocity(<span class="string">'stop'</span>).velocity(&#123;<span class="attr">opacity</span>: <span class="number">0</span>&#125;);</span></div><div class="line"><span class="undefined">  &#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"mydivshow"</span> <span class="attr">class</span>=<span class="string">"mydivshow"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--my custom code end--&gt;</span></div></pre></td></tr></table></figure><p>然后找到代码行：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span></div><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> display_toc and toc(page.content).length &gt; 1 %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml"><span class="comment">&lt;!--noindex--&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"post-toc-wrap motion-element sidebar-panel sidebar-panel-active"</span>&gt;</span></span></div></pre></td></tr></table></figure><p>在此的上方添加一个，如下所示：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="xml"><span class="comment">&lt;!--my custom code begin--&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="xml"><span class="comment">&lt;!--my custom code end--&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span></div><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> display_toc and toc(page.content).length &gt; 1 %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml"><span class="comment">&lt;!--noindex--&gt;</span></span></div><div class="line"><span class="xml">  <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"post-toc-wrap motion-element sidebar-panel sidebar-panel-active"</span>&gt;</span></span></div><div class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"post-toc"</span>&gt;</span></span></div></pre></td></tr></table></figure><h5 id="自定义区域的初始化设置"><a href="#自定义区域的初始化设置" class="headerlink" title="自定义区域的初始化设置"></a>自定义区域的初始化设置</h5><p>在theme/next/source/css/_custom文件夹下打开custom.styl文件，向里面增添下列代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#mydivshow</span>&#123;<span class="attribute">opacity</span>: <span class="number">0</span>;&#125;</div></pre></td></tr></table></figure><p>注：具体代码添加位置以及代码里的section.site-overview可以自己修改，<div id="mydivshow" class="mydivshow">和末尾的</div>是控制显示区域，section.site-overview则是用户鼠标滑入划出时的触发事件区域。</p><h4 id="自定义音乐播放器"><a href="#自定义音乐播放器" class="headerlink" title="自定义音乐播放器"></a>自定义音乐播放器</h4><h5 id="安装APlayer插件"><a href="#安装APlayer插件" class="headerlink" title="安装APlayer插件"></a>安装APlayer插件</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> aplayer <span class="comment">--save</span></div></pre></td></tr></table></figure><p>安装完后在node_modules目录下找到APlayer.min.js文件，将其复制到theme/next/source/js/src/目录下。</p><h5 id="生成音乐播放器"><a href="#生成音乐播放器" class="headerlink" title="生成音乐播放器"></a>生成音乐播放器</h5><p>在你想要加入音乐播放器的地方插入以下代码，<br>本站把他放在了侧边栏里，具体操作如下。<br>打开theme/next/layout/_custom/文件夹下的sidebar.swig文件，向其中添加以下代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"player1"</span> <span class="attr">class</span>=<span class="string">"aplayer"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/src/APlayer.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="actionscript"><span class="keyword">var</span> ap = <span class="keyword">new</span> APlayer(&#123;</span></div><div class="line"><span class="javascript">    element: <span class="built_in">document</span>.getElementById(<span class="string">'player1'</span>),                       <span class="comment">// Optional, player element</span></span></div><div class="line"><span class="actionscript">    narrow: <span class="literal">false</span>,                                                     <span class="comment">// Optional, narrow style</span></span></div><div class="line"><span class="actionscript">    autoplay: <span class="literal">true</span>,                                                    <span class="comment">// Optional, autoplay song(s), not supported by mobile browsers</span></span></div><div class="line"><span class="actionscript">    showlrc: <span class="number">0</span>,                                                        <span class="comment">// Optional, show lrc, can be 0, 1, 2, see: ###With lrc</span></span></div><div class="line"><span class="actionscript">    mutex: <span class="literal">true</span>,                                                       <span class="comment">// Optional, pause other players when this player playing</span></span></div><div class="line"><span class="actionscript">    theme: <span class="string">'#e6d0b2'</span>,                                                  <span class="comment">// Optional, theme color, default: #b7daff</span></span></div><div class="line"><span class="actionscript">    mode: <span class="string">'random'</span>,                                                    <span class="comment">// Optional, play mode, can be `random` `single` `circulation`(loop) `order`(no loop), default: `circulation`</span></span></div><div class="line"><span class="actionscript">    preload: <span class="string">'metadata'</span>,                                               <span class="comment">// Optional, the way to load music, can be 'none' 'metadata' 'auto', default: 'auto'</span></span></div><div class="line"><span class="actionscript">    listmaxheight: <span class="string">'513px'</span>,                                             <span class="comment">// Optional, max height of play list</span></span></div><div class="line"><span class="actionscript">    music: &#123;                                                           <span class="comment">// Required, music info, see: ###With playlist</span></span></div><div class="line"><span class="actionscript">        title: <span class="string">'Preparation'</span>,                                          <span class="comment">// Required, music title</span></span></div><div class="line"><span class="actionscript">        author: <span class="string">'Hans Zimmer/Richard Harvey'</span>,                          <span class="comment">// Required, music author</span></span></div><div class="line"><span class="actionscript">        url: <span class="string">'http://7xifn9.com1.z0.glb.clouddn.com/Preparation.mp3'</span>,  <span class="comment">// Required, music url</span></span></div><div class="line"><span class="actionscript">        pic: <span class="string">'http://7xifn9.com1.z0.glb.clouddn.com/Preparation.jpg'</span>,  <span class="comment">// Optional, music picture</span></span></div><div class="line"><span class="actionscript">        lrc: <span class="string">'[00:00.00]lrc here\n[00:01.00]aplayer'</span>                   <span class="comment">// Optional, lrc, see: ###With lrc</span></span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">&#125;);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><h5 id="自定义播放器样式"><a href="#自定义播放器样式" class="headerlink" title="自定义播放器样式"></a>自定义播放器样式</h5><p>包含颜色更改，列表歌曲信息的排版修改。<br>在theme/next/source/css/_custom文件夹下打开custom.styl文件，往里面添加以下代码：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="selector-class">.aplayer-list</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span>:hover &#123;   <span class="comment">/*列表悬停颜色*/</span></div><div class="line">                  <span class="attribute">background</span>:rgba(颜色代码,透明度) none repeat scroll !important;&#125;</div><div class="line"><span class="selector-class">.aplayer-list</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span> &#123;   <span class="comment">/*列表底色*/</span></div><div class="line">                        <span class="attribute">background</span>:rgba(颜色代码,透明度);&#125;</div><div class="line"><span class="selector-class">.aplayer-list-light</span> &#123;   <span class="comment">/*列表播放歌曲颜色*/</span></div><div class="line">                      <span class="attribute">background</span>:rgba(颜色代码,透明度) none repeat scroll !important;&#125;</div><div class="line"><span class="selector-id">#player1</span> &#123;    <span class="comment">/*边框样式*/</span></div><div class="line">          <span class="attribute">border-radius</span>: <span class="number">6px</span>;</div><div class="line">          <span class="selector-tag">div</span>,<span class="selector-tag">ol</span> &#123;<span class="attribute">border-radius</span>: <span class="number">6px</span>;&#125;</div><div class="line">        &#125;</div><div class="line"><span class="selector-id">#player1</span> *&#123;<span class="attribute">color</span>: 颜色代码;&#125;    <span class="comment">/*字体颜色*/</span></div><div class="line"><span class="comment">/*列表歌曲信息的排版*/</span></div><div class="line">.aplayer-list-index&#123;<span class="attribute">float</span>:left;&#125;</div><div class="line">.aplayer-list-title&#123;<span class="attribute">float</span>:left;&#125;</div><div class="line">.aplayer-list-author&#123;<span class="attribute">float</span>:right;&#125;</div></pre></td></tr></table></figure><h5 id="自定义萌萌哒音乐播放控制边栏"><a href="#自定义萌萌哒音乐播放控制边栏" class="headerlink" title="自定义萌萌哒音乐播放控制边栏"></a>自定义萌萌哒音乐播放控制边栏</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span> aplayer-controler <span class="comment">--save</span></div></pre></td></tr></table></figure><p>仓库<a href="https://github.com/Mashiro-Sorata/APlayer-Controler" rel="external nofollow noopener noreferrer" target="_blank">链接</a></p><h4 id="DOS风格的404页面"><a href="#DOS风格的404页面" class="headerlink" title="DOS风格的404页面"></a>DOS风格的404页面</h4><p>效果在<a href="https://codepen.io/team/nclud/pen/vEyzaY" rel="external nofollow noopener noreferrer" target="_blank">这里</a></p><h4 id="博客自动部署"><a href="#博客自动部署" class="headerlink" title="博客自动部署"></a>博客自动部署</h4><p>刚开始是准备用AppVeyor的，托管在github上，教程在<a href="https://formulahendry.github.io/2016/12/04/hexo-ci/" rel="external nofollow noopener noreferrer" target="_blank">这里</a><br>不过发现私有仓库没法添加。<br>然后发现GitLab自有CI，所以尝试用GitLab部署。<br>就是那个最近因为不小心使用 rm rf 把自家数据库删光、还在 YouTube 上直播修库、让失误的程序员看了 10 小时的 nyancat 的那个 GitLab。。。<br>参考链接见<a href="https://blog.nfz.moe/archives/hexo-auto-deploy-with-gitlab-ci.html" rel="external nofollow noopener noreferrer" target="_blank">这里</a></p><h4 id="live2d插件手机端隐藏"><a href="#live2d插件手机端隐藏" class="headerlink" title="live2d插件手机端隐藏"></a>live2d插件手机端隐藏</h4><p>由于现在这个模型在手机上比较大，而且不是很清晰，视觉效果不是很好，所以决定在手机端隐藏。<br>方法很简单，判断一下是否移动端即可。<br>在theme/next/source/css/_custom文件夹下打开custom.styl文件，往里面添加以下代码：<br><figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#live2dcanvas</span> &#123; +<span class="selector-tag">mobile</span>() &#123; <span class="attribute">display</span>: none; &#125; &#125;</div></pre></td></tr></table></figure></p><h4 id="Gitment评论插件"><a href="#Gitment评论插件" class="headerlink" title="Gitment评论插件"></a>Gitment评论插件</h4><p>最初用的多说，后来多说挂了，之后采用来必力，看起来挺好看的，而且next主题也集成了这个插件，但是后端都是不靠谱的啊!这两天又抽风了，完全加载不出来，官方还没挂，但是页面已经显示不了了。最后还是决定采用Gayhub的评论系统，集成Gitment插件。Gitment的作者是imsun，其项目主页<a href="https://github.com/imsun/gitment" rel="external nofollow noopener noreferrer" target="_blank">在这</a>.</p><h5 id="首先创建Gitment的swig文件，放到主题中，为了便于管理，我决定放在next-layout-third-party-comments文件夹下。其内容为"><a href="#首先创建Gitment的swig文件，放到主题中，为了便于管理，我决定放在next-layout-third-party-comments文件夹下。其内容为" class="headerlink" title="首先创建Gitment的swig文件，放到主题中，为了便于管理，我决定放在next/layout/_third-party/comments文件夹下。其内容为:"></a>首先创建Gitment的swig文件，放到主题中，为了便于管理，我决定放在<code>next/layout/_third-party/comments</code>文件夹下。其内容为:</h5><figure class="highlight twig"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="keyword">if</span></span> theme.gitment.enable %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">   </span><span class="template-tag">&#123;% <span class="name"><span class="keyword">set</span></span> owner = theme.gitment.githubID %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">   </span><span class="template-tag">&#123;% <span class="name"><span class="keyword">set</span></span> repo = theme.gitment.repo %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">   </span><span class="template-tag">&#123;% <span class="name"><span class="keyword">set</span></span> cid = theme.gitment.ClientID %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">   </span><span class="template-tag">&#123;% <span class="name"><span class="keyword">set</span></span> cs = theme.gitment.ClientSecret %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">   <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://imsun.github.io/gitment/style/default.css"</span>&gt;</span></span></div><div class="line"><span class="xml">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://imsun.github.io/gitment/dist/gitment.browser.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line"><span class="xml">   </span><span class="template-tag">&#123;% <span class="name"><span class="keyword">if</span></span> not theme.gitment.lazy %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">       <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span></div><div class="line"><span class="xml">           var gitment = new Gitment(&#123;</span></div><div class="line"><span class="xml">               id: window.location.pathname, </span></div><div class="line"><span class="xml">               owner: '</span><span class="template-variable">&#123;&#123;owner&#125;&#125;</span><span class="xml">',</span></div><div class="line"><span class="xml">               repo: '</span><span class="template-variable">&#123;&#123;repo&#125;&#125;</span><span class="xml">',</span></div><div class="line"><span class="xml">               oauth: &#123;</span></div><div class="line"><span class="xml">                   client_id: '</span><span class="template-variable">&#123;&#123;cid&#125;&#125;</span><span class="xml">',</span></div><div class="line"><span class="xml">                   client_secret: '</span><span class="template-variable">&#123;&#123;cs&#125;&#125;</span><span class="xml">',</span></div><div class="line"><span class="xml">               &#125;&#125;);</span></div><div class="line"><span class="xml">           gitment.render('gitment-container');</span></div><div class="line"><span class="xml">       <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line"><span class="xml">   </span><span class="template-tag">&#123;% <span class="name">else</span> %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">       <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span></div><div class="line"><span class="xml">           function ShowGitment()&#123;</span></div><div class="line"><span class="xml">               document.getElementById("gitment-display-button").style.display = "none";</span></div><div class="line"><span class="xml">               document.getElementById("gitment-container").style.display = "block";</span></div><div class="line"><span class="xml">               var gitment = new Gitment(&#123;</span></div><div class="line"><span class="xml">                   id: document.location.href, </span></div><div class="line"><span class="xml">                   owner: '</span><span class="template-variable">&#123;&#123;owner&#125;&#125;</span><span class="xml">',</span></div><div class="line"><span class="xml">                   repo: '</span><span class="template-variable">&#123;&#123;repo&#125;&#125;</span><span class="xml">',</span></div><div class="line"><span class="xml">                   oauth: &#123;</span></div><div class="line"><span class="xml">                       client_id: '</span><span class="template-variable">&#123;&#123;cid&#125;&#125;</span><span class="xml">',</span></div><div class="line"><span class="xml">                       client_secret: '</span><span class="template-variable">&#123;&#123;cs&#125;&#125;</span><span class="xml">',</span></div><div class="line"><span class="xml">                   &#125;&#125;);</span></div><div class="line"><span class="xml">               gitment.render('gitment-container');</span></div><div class="line"><span class="xml">           &#125;</span></div><div class="line"><span class="xml">       <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div><div class="line"><span class="xml">   </span><span class="template-tag">&#123;% <span class="name"><span class="keyword">endif</span></span> %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="keyword">endif</span></span> %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><h5 id="在主题文件layout-third-party-comments-index-swig中引入刚刚添加的文件"><a href="#在主题文件layout-third-party-comments-index-swig中引入刚刚添加的文件" class="headerlink" title="在主题文件layout/_third-party/comments/index.swig中引入刚刚添加的文件:"></a>在主题文件<code>layout/_third-party/comments/index.swig</code>中引入刚刚添加的文件:</h5><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> 'gitment.swig' %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><h5 id="设置按钮样式"><a href="#设置按钮样式" class="headerlink" title="设置按钮样式"></a>设置按钮样式</h5><p>按钮样式可以放在css的文件夹下，具体目录是之前的<code>source/css/_common/components/third-party/</code>文件夹。在其中添加<code>gitment.styl</code>样式设置文件。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#gitment-display-button</span>&#123;</div><div class="line">     <span class="attribute">display</span>: inline-block;</div><div class="line">     <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">15px</span>;</div><div class="line">     <span class="attribute">color</span>: <span class="number">#0a9caf</span>;</div><div class="line">     <span class="attribute">cursor</span>: pointer;</div><div class="line">     <span class="attribute">font-size</span>: <span class="number">14px</span>;</div><div class="line">     <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#0a9caf</span>;</div><div class="line">     <span class="attribute">border-radius</span>: <span class="number">4px</span>;</div><div class="line"> &#125;</div><div class="line"> <span class="selector-id">#gitment-display-button</span><span class="selector-pseudo">:hover</span>&#123;</div><div class="line">     <span class="attribute">color</span>: <span class="number">#fff</span>;</div><div class="line">     <span class="attribute">background</span>: <span class="number">#0a9caf</span>;</div><div class="line"> &#125;</div></pre></td></tr></table></figure><p>具体button的样式可以自己修改里面的参数。<br>然后在主题下<code>source/css/_common/components/third-party/third-party.styl</code>文件中引入相应的CSS样式:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">@<span class="keyword">import</span> <span class="string">"gitment"</span>;</div></pre></td></tr></table></figure><h5 id="修改button显示文字"><a href="#修改button显示文字" class="headerlink" title="修改button显示文字:"></a>修改button显示文字:</h5><p>在主题的<code>en.yml</code>增加:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gitmentbutton: <span class="keyword">Show</span> comments <span class="keyword">from</span> Gitment</div></pre></td></tr></table></figure><p><code>zh-Hans.yml</code>增加:</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">gitmentbutton:</span> 显示 Gitment 评论</div></pre></td></tr></table></figure><h5 id="修改主题评论代码"><a href="#修改主题评论代码" class="headerlink" title="修改主题评论代码"></a>修改主题评论代码</h5><p>在<code>layout/_partials/comments.swig</code>文件中找到最后一个if分支，应该是这两句:</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&#123;% elseif theme.valine.appid <span class="keyword">and</span> theme.valine.appkey %&#125;</div><div class="line">      &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"vcomments"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</div></pre></td></tr></table></figure><p>在最后一个if分支后加一个Gitment的:</p><figure class="highlight django"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name">elseif</span> theme.gitment.enable %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">   </span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.gitment.lazy %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">onclick</span>=<span class="string">"ShowGitment()"</span> <span class="attr">id</span>=<span class="string">"gitment-display-button"</span>&gt;</span></span><span class="template-variable">&#123;&#123;  __('gitmentbutton') &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="xml">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"gitment-container"</span> <span class="attr">style</span>=<span class="string">"display:none"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="xml">   </span><span class="template-tag">&#123;% <span class="name"><span class="name">else</span></span> %&#125;</span><span class="xml"></span></div><div class="line"><span class="xml">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"gitment-container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line"><span class="xml">   </span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></div></pre></td></tr></table></figure><h5 id="在主题配置文件中加入开启Gitment评论"><a href="#在主题配置文件中加入开启Gitment评论" class="headerlink" title="在主题配置文件中加入开启Gitment评论:"></a>在主题配置文件中加入开启Gitment评论:</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Gitment</span></div><div class="line"> <span class="comment"># Introduction: https://imsun.net/posts/gitment-introduction/</span></div><div class="line"><span class="attr">gitment:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  githubID:</span> <span class="comment">#your github ID</span></div><div class="line"><span class="attr">  repo:</span> <span class="comment">#your comment repo</span></div><div class="line"><span class="attr">  ClientID:</span> <span class="bullet">------</span></div><div class="line"><span class="attr">  ClientSecret:</span> <span class="bullet">------</span></div><div class="line"><span class="attr">  lazy:</span> <span class="literal">false</span></div></pre></td></tr></table></figure><p>OK,到这里基本上是完成了。<br>不过，有点麻烦，每个页面都要手动初始化，懒得折腾了，用了一段时间，还是换回来必力了，前几天官方给回复说已经修复了，暂时先用着罢。  </p><h4 id="Hexo中插入流程图"><a href="#Hexo中插入流程图" class="headerlink" title="Hexo中插入流程图"></a>Hexo中插入流程图</h4><p>因为hexo中的markdown语法并未支持流程图，或者说流程图语法现在并不是markdown的基本语法。但在挖坑填坑过程中，偶尔需要解释清楚一个Pipeline的时候，还是需要流程图的。偶然发现了一个插件，hexo-filter-flowchart，官方Repo<a href="https://github.com/bubkoo/hexo-filter-flowchart" rel="external nofollow noopener noreferrer" target="_blank">在此</a>.  </p><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><p>在blog根目录下使用npm安装：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --<span class="built_in">save</span> hexo-<span class="built_in">filter</span>-flowchart</div></pre></td></tr></table></figure></p><h5 id="配置站点文件-可选"><a href="#配置站点文件-可选" class="headerlink" title="配置站点文件(可选)"></a>配置站点文件(可选)</h5><p>可以在站点配置文件中修改默认的样式。<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">vim _config.xml</div><div class="line">flowchart:</div><div class="line">  # raphael:   # optional, the source url <span class="keyword">of</span> raphael.js</div><div class="line">  # flowchart: # optional, the source url <span class="keyword">of</span> flowchart.js</div><div class="line">  options: # options used for `drawSVG`</div></pre></td></tr></table></figure></p><h5 id="流程图用法"><a href="#流程图用法" class="headerlink" title="流程图用法"></a>流程图用法</h5><p>一般是三个反引号加flow开始，最后三个反引号结束。其中语法示例如下:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">st</span>=&gt;start: Start</div><div class="line"><span class="attribute">e</span>=&gt;end</div><div class="line"><span class="attribute">op</span>=&gt;operation: My Operation</div><div class="line"><span class="attribute">cond</span>=&gt;condition: <span class="literal">Yes</span> <span class="keyword">or</span> <span class="literal">No</span>?</div><div class="line"></div><div class="line">st-&gt;op-&gt;cond</div><div class="line">cond(<span class="literal">yes</span>)-&gt;e</div><div class="line">cond(<span class="literal">no</span>)-&gt;op</div></pre></td></tr></table></figure></p><p>最后效果如下:  </p><center><br><div id="flowchart-0" class="flow-chart"></div><br></center><h4 id="Hexo中插入序列图"><a href="#Hexo中插入序列图" class="headerlink" title="Hexo中插入序列图"></a>Hexo中插入序列图</h4><h5 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h5><p>官方Repo<a href="https://github.com/bubkoo/hexo-filter-sequence" rel="external nofollow noopener noreferrer" target="_blank">在这</a>,一样的，安装一个插件:<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --<span class="keyword">save</span> hexo-filter-<span class="keyword">sequence</span></div></pre></td></tr></table></figure></p><h4 id="序列图绘制"><a href="#序列图绘制" class="headerlink" title="序列图绘制"></a>序列图绘制</h4><p>一般是三个反引号加一个sequence开始，以三个反引号结束。<br>示例:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Alice-&gt;Bob: Hello Bob, how are you?</div><div class="line">Note right of Bob: Bob thinks</div><div class="line">Bob--&gt;Alice: I am good thanks!</div></pre></td></tr></table></figure></p><p>在反引号后加上sequence后效果如下:</p><center><br><div id="sequence-0"></div><br></center><p><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: Starte=>endop=>operation: My Operationcond=>condition: Yes or No?st->op->condcond(yes)->econd(no)->op</textarea><textarea id="flowchart-0-options" style="display: none">{"theme":"simple","scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script><script src="https://cdnjs.cloudflare.com/ajax/libs/webfont/1.6.27/webfontloader.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/snap.svg/0.4.1/snap.svg-min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/js-sequence-diagrams/1.0.6/sequence-diagram-min.js"></script><textarea id="sequence-0-code" style="display: none">Alice->Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob-->Alice: I am good thanks!</textarea><textarea id="sequence-0-options" style="display: none">{"theme":"simple","scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("sequence-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("sequence-0-options").value));  var diagram = Diagram.parse(code);  diagram.drawSVG("sequence-0", options);</script></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  丙申九月，建站小记。&lt;br&gt;
    
    </summary>
    
      <category term="博客" scheme="http://newdee.cf/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="myfirst" scheme="http://newdee.cf/tags/myfirst/"/>
    
      <category term="helloworld" scheme="http://newdee.cf/tags/helloworld/"/>
    
      <category term="建站" scheme="http://newdee.cf/tags/%E5%BB%BA%E7%AB%99/"/>
    
  </entry>
  
  <entry>
    <title>Cvsba编译过程（在VS2015下的编译与测试）</title>
    <link href="http://newdee.cf/posts/f3656e8e/"/>
    <id>http://newdee.cf/posts/f3656e8e/</id>
    <published>2016-09-02T11:38:16.000Z</published>
    <updated>2017-10-29T05:55:55.240Z</updated>
    
    <content type="html"><![CDATA[<p>由于之前所用的sba（光束法平差）库是10版本编译的，现在我用的是15版本，而且15的版本相对于以前变化不少，之前也参照过网上的一篇13版本的编译过程，不过一直出错，后来调试很长时间，终于生成成功，这里mark一下。<br><a id="more"></a></p><h4 id="首先下载cvsba的source-code："><a href="#首先下载cvsba的source-code：" class="headerlink" title="首先下载cvsba的source code："></a>首先下载cvsba的source code：</h4><p>网址是<a href="https://sourceforge.net/projects/cvsba/files/1.0.0/" rel="external nofollow noopener noreferrer" target="_blank">https://sourceforge.net/projects/cvsba/files/1.0.0/</a><br>下載的是cvsba-1.0.0，目前依然是这个版本。</p><p>然后解压放到对应目录文件夹，依个人喜好。我的是E:\cvsba-1.0.0</p><h4 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h4><p>这里需要一些工具，cmake自然不用多说，还有opencv的依赖，所以事先需要下载opencv，这个不做过多赘述。<br>我这里使用的cmake版本是3.6.1<br>然后打开cmake，选择源文件夹和输出文件夹，尽量不要是一个，方便一点可以在E:\cvsba-1.0.0目录下再建一个bulid文件夹存放。<br>然后config中选择v14，即2015版本。点击确定<br>一般会出现error，因为缺少一些lapack的库。由于编译lapack需要用到fortran编译器，这里没有，所以不再编译，直接从网上下载部分<a href="http://www.netlib.org/clapack/LIB_WINDOWS/prebuilt_libraries_windows.html" rel="external nofollow noopener noreferrer" target="_blank">库文件</a><br>下载clapack.lib, BLAS.lib, libf2c.lib共三个文件，放到E:\cvsba-1.0.0目录下。<br>然后修改错误，把LAPACK_LIB路径改成刚刚放置的位置，继续config，<br>继续修改，把BLAS_LIB路径改成刚刚放置的位置，继续config，<br>继续修改，把F2C_LIB路径改成刚刚放置的位置，其余的不用管，继续config，<br>编译成功。<br>然后generate一下。<br><img src="http://img.blog.csdn.net/20160902194211276" alt=""><br>然后用vs2015打开build文件夹下的cvsba.sln<br>点击cvsba，然后build，发现很多错误。首先是LIBCMT和MSVCRT的问题，在属性表中修改，debug模式中改为/MTd，release中改为/MT。<br>然后重新生成。<br>发现错误如下：<br><img src="http://img.blog.csdn.net/20160902194211532" alt=""><br>原因是没有加如相应的lib, 在程序中增加lib（Link -&gt;input ）附加依赖项 clapack.lib blas.lib libf2c.lib，前面要加其所在文件夹，如E:\cvsba-1.0.0\clapack.lib，E:\cvsba-1.0.0\BLAS.lib，E:\cvsba-1.0.0\libf2c.lib（这是release下面的，debug下添加相应的带d的版本，即E:\cvsba-1.0.0\clapackd.lib，E:\cvsba-1.0.0\BLASd.lib，E:\cvsba-1.0.0\libf2cd.lib）<br>然后重新build，还有错误：<br><img src="http://img.blog.csdn.net/20160902194212057" alt=""><br>原因是15版本现在使用的是内联定义调用许多stdio.h中的函数。解决方法：<br>也是在链接中添加相应依赖库：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">legacy_stdio_definitions.<span class="keyword">lib</span></div></pre></td></tr></table></figure><p>重新build。<br><img src="http://img.blog.csdn.net/20160902194212204" alt=""><br>出现错误，原因也是VC6的stdio.h中未定义，手动在头文件中加入：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></div><div class="line"></div><div class="line">extern <span class="string">"C"</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line">FILE <span class="variable">__iob_func</span>[<span class="number">3</span>] = &#123; <span class="variable">__acrt_iob_func</span>(<span class="number">0</span>), <span class="variable">__acrt_iob_func</span>(<span class="number">1</span>), <span class="variable">__acrt_iob_func</span>(<span class="number">2</span>) &#125;;</div></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20160902194212807" alt=""><br>继续build<br><img src="http://img.blog.csdn.net/20160902194213172" alt=""><br>成功。<br>但是进入debug中发现只有cvsba.dll文件，没有cvsba.lib文件，原因是cvsba..h里面的class声明少了 __declspec(dllexport) 把它加上去就可以了<br><img src="http://img.blog.csdn.net/20160902194213776" alt=""><br>Build，<br><img src="http://img.blog.csdn.net/20160902194213969" alt=""><br>成功<br><img src="http://img.blog.csdn.net/20160902194214526" alt=""><br>接下来测试生成的lib和dll文件是否完好。<br>直接build所有的项目，发现一个问题：<br><img src="http://img.blog.csdn.net/20160902194214813" alt=""><br>解决方法：<br>像该文件中加入#include&lt;time.h&gt;<br><img src="http://img.blog.csdn.net/20160902194215479" alt=""><br>至此，全部建立完成。<br>然后进入生成的文件夹运行，可以用windows的cmd也可以用bash，我这里直接用bash了：<br>需要先生成两个文件用于测试：<br><img src="http://img.blog.csdn.net/20160902194215641" alt=""><br>分别是camsfile和pointsfile，可以自己命名，但用于测试，就随便命名了。<br><img src="http://img.blog.csdn.net/20160902194216089" alt=""><br>可以看到已经多了两个文件。<br>然后运行<code>test_cvsba</code>:<br><img src="http://img.blog.csdn.net/20160902194216172" alt=""><br>测试成功，表示刚刚生成的cvsba.lib和cvsba.dll是没问题的。<br>至此，所有任务已经完成。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于之前所用的sba（光束法平差）库是10版本编译的，现在我用的是15版本，而且15的版本相对于以前变化不少，之前也参照过网上的一篇13版本的编译过程，不过一直出错，后来调试很长时间，终于生成成功，这里mark一下。&lt;br&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://newdee.cf/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="三维重建" scheme="http://newdee.cf/tags/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/"/>
    
      <category term="VS2015" scheme="http://newdee.cf/tags/VS2015/"/>
    
  </entry>
  
  <entry>
    <title>一种计算Visual Hull的方法</title>
    <link href="http://newdee.cf/posts/7ad61e8d/"/>
    <id>http://newdee.cf/posts/7ad61e8d/</id>
    <published>2016-07-28T07:21:22.000Z</published>
    <updated>2017-10-13T05:15:18.764Z</updated>
    
    <content type="html"><![CDATA[<p>计算Visual Hull的方法:<br><a id="more"></a><br>A Robust and Accurate Method for Visual Hull Computation [Song Peng 2009]</p><h4 id="计算3D-bounding-box"><a href="#计算3D-bounding-box" class="headerlink" title="计算3D bounding box"></a>计算3D bounding box</h4><p>仅从一组轮廓和投影矩阵计算3D bounding box</p><p>可以从每个轮廓的2Dbounding box考虑，使用4个变量</p><p><img src="http://img.blog.csdn.net/20160728152126397" alt=""></p><p>假设有N张图计算3D bounding box，</p><p><img src="http://img.blog.csdn.net/20160728152126538" alt=""> 是第i张图的投影矩阵，<img src="http://img.blog.csdn.net/20160728152126897" alt=""> 表示其2D边框。透视投影等式如下：</p><p><img src="http://img.blog.csdn.net/20160728152127194" alt=""></p><p>其中，</p><p><img src="http://img.blog.csdn.net/20160728152127522" alt=""></p><p>由于图像i的轮廓必须在其2D边框内，因此有以下四个不等式：</p><p><img src="http://img.blog.csdn.net/20160728152127866" alt=""></p><p>因此需要求出4N个线性不等式的x,y,z的最大值和最小值。使用遗传算法解决这个问题。每个个体是一个3D点（x,y,z）。如果希望计算x的最大值最小值，则相应的目标函数为<img src="http://img.blog.csdn.net/20160728152127991" alt="">.适应函数等于目标函数。算法如下：</p><h5 id="产生一个满足4N个不等式的初始群体，如果知道目标的大致距离，该步骤会简单很多。"><a href="#产生一个满足4N个不等式的初始群体，如果知道目标的大致距离，该步骤会简单很多。" class="headerlink" title="产生一个满足4N个不等式的初始群体，如果知道目标的大致距离，该步骤会简单很多。"></a>产生一个满足4N个不等式的初始群体，如果知道目标的大致距离，该步骤会简单很多。</h5><h5 id="根据其适应性函数选择个体"><a href="#根据其适应性函数选择个体" class="headerlink" title="根据其适应性函数选择个体"></a>根据其适应性函数选择个体</h5><h5 id="个体与变异交叉，如果产生了不满足4N不等式的个体，则丢弃"><a href="#个体与变异交叉，如果产生了不满足4N不等式的个体，则丢弃" class="headerlink" title="个体与变异交叉，如果产生了不满足4N不等式的个体，则丢弃"></a>个体与变异交叉，如果产生了不满足4N不等式的个体，则丢弃</h5><h5 id="保存此次产生最优的个体。如果最大允许生成数未达到，则转至步骤2；else-exit。"><a href="#保存此次产生最优的个体。如果最大允许生成数未达到，则转至步骤2；else-exit。" class="headerlink" title="保存此次产生最优的个体。如果最大允许生成数未达到，则转至步骤2；else exit。"></a>保存此次产生最优的个体。如果最大允许生成数未达到，则转至步骤2；else exit。</h5><h4 id="建立Visual-Hull的八叉树"><a href="#建立Visual-Hull的八叉树" class="headerlink" title="建立Visual Hull的八叉树"></a>建立Visual Hull的八叉树</h4><p>从Silhouette建立：递归细分，投影测试</p><p>从bounding box开始，将等值面上的cube分成八个孩子，迭代。</p><p>等值面函数与Visual Hull的表面相关</p><p>对于一个给定的3D点v，等值面函数定义为:</p><p><img src="http://img.blog.csdn.net/20160728152128397" alt=""></p><p><code>Di</code>是对轮廓i边缘的倒角距离变换CDT，负内，正外。</p><p>Projection test方法评估一个给定的voxel：</p><h4 id="计算该voxel的8个顶点的等值面函数。"><a href="#计算该voxel的8个顶点的等值面函数。" class="headerlink" title="计算该voxel的8个顶点的等值面函数。"></a>计算该voxel的8个顶点的等值面函数。</h4><h5 id="如果8个顶点都在visual-hull的外部。"><a href="#如果8个顶点都在visual-hull的外部。" class="headerlink" title="如果8个顶点都在visual hull的外部。"></a>如果8个顶点都在visual hull的外部。</h5><p>投影到所有图像，如果在一幅图像上voxel的投影都在silhouette内部，则类型为in，否则为on。</p><h5 id="当8个顶点都在visual-hull内部时。"><a href="#当8个顶点都在visual-hull内部时。" class="headerlink" title="当8个顶点都在visual hull内部时。"></a>当8个顶点都在visual hull内部时。</h5><p>将voxel投影到所有图像上，如果所有图像上voxel的投影都在silhouette内部，则类型为in，否则为on。</p><h5 id="当部分顶点在visual-hull内部时，类型为on。"><a href="#当部分顶点在visual-hull内部时，类型为on。" class="headerlink" title="当部分顶点在visual hull内部时，类型为on。"></a>当部分顶点在visual hull内部时，类型为on。</h5><p>事实上，可以仅通过判断voxel的投影与silhouette的相对位置来判断一个voxel的类型。这里使用的是8个顶点的等值面函数来减少计算时间。当部分顶点在visual hull内部时，不需要计算立方体的投影即可判定其类型为on。另一方面，在marching cubes算法中，也需要等值面函数的值。</p><h5 id="文中Projection-test方法的实现有两个步骤："><a href="#文中Projection-test方法的实现有两个步骤：" class="headerlink" title="文中Projection test方法的实现有两个步骤："></a>文中Projection test方法的实现有两个步骤：</h5><h5 id="计算一个voxel在所有图像上的投影（not-esay）"><a href="#计算一个voxel在所有图像上的投影（not-esay）" class="headerlink" title="计算一个voxel在所有图像上的投影（not esay）"></a>计算一个voxel在所有图像上的投影（not esay）</h5><p>文中方法：将8个顶点投影到图像上，然后计算8个点的投影的凸包（convex hull）。凸包与cube的投影相同</p><p>文中证明：一个立方的六个面将3D空间划分成27个半空间:26个外部，一个内部。</p><p><img src="http://img.blog.csdn.net/20160728152128975" alt=""></p><p>从外部的26个半空间观察该立方体的轮廓，可以分为三种情况：1个、2个、3个可见面。因此，该立方的投影与8个顶点的投影的凸包相同。</p><p><img src="http://img.blog.csdn.net/20160728152129303" alt=""></p><p>计算一组给定点的凸包使用的方法是gift wrapping 算法，时间复杂度是O(nh)。N是点的数目，h是凸包上的点数。因此，这里<img src="http://img.blog.csdn.net/20160728152129428" alt=""> gift wrapping算法如下：</p><p><img src="http://img.blog.csdn.net/20160728152129835" alt=""></p><h5 id="判断立方体的投影与silhouette的相对位置"><a href="#判断立方体的投影与silhouette的相对位置" class="headerlink" title="判断立方体的投影与silhouette的相对位置"></a>判断立方体的投影与silhouette的相对位置</h5><p>如果多边形内所有像素都在目标区域内部，则多边形在silhouette内部；</p><p>如果多边形内所有像素都在目标区域外部，则多边形在silhouette外部；</p><p>如果部分像素在目标区域内，则多边形与silhouette相交。</p><h5 id="使用marching-cubes算法计算visual-hull"><a href="#使用marching-cubes算法计算visual-hull" class="headerlink" title="使用marching cubes算法计算visual hull"></a>使用marching cubes算法计算visual hull</h5><p>在八叉树重建后，使用marching cubes算法提取visual hull表面。</p><p>Voxel占用一个叶节点，使用等值面函数值将其8个顶点编码成8个值。然后做一个距离变换，等值面函数值可以表示到visual hull表面的3D距离：负则在内，正则在外。然后用这些值在于给查找表上去索引，该查找表示预先定义的，定义了voxel内部的表面三角形，将形成最终visual hull mesh的一部分。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;计算Visual Hull的方法:&lt;br&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://newdee.cf/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="三维重建" scheme="http://newdee.cf/tags/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/"/>
    
      <category term="visual hull" scheme="http://newdee.cf/tags/visual-hull/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu下opencv的配置</title>
    <link href="http://newdee.cf/posts/ebc78778/"/>
    <id>http://newdee.cf/posts/ebc78778/</id>
    <published>2016-07-24T14:08:06.000Z</published>
    <updated>2017-10-29T05:48:03.494Z</updated>
    
    <content type="html"><![CDATA[<p>ubuntu下opencv的配置过程：<a id="more"></a><br>这里ubuntu版本：Ubuntu 14.04.4<br>opencv版本 2.9.13<br>配置过程：<br>首先下载opencv安装包 ;过程不用多说 然后解压到根目录下<br>解压之后记住需要安装一些工具<br>基本命令：<br><figure class="highlight q"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-<span class="built_in">get</span> install build-essential</div><div class="line">sudo apt-<span class="built_in">get</span> install cmake git libgtk2<span class="number">.0</span>-<span class="built_in">dev</span> pkg-config libavcodec-<span class="built_in">dev</span> libavformat-<span class="built_in">dev</span> libswscale-<span class="built_in">dev</span></div><div class="line">sudo apt-<span class="built_in">get</span> install python-<span class="built_in">dev</span> python-numpy libtbb2 libtbb-<span class="built_in">dev</span> libjpeg-<span class="built_in">dev</span> libpng-<span class="built_in">dev</span> libtiff-<span class="built_in">dev</span> libjasper-<span class="built_in">dev</span> libdc1394<span class="number">-22</span>-<span class="built_in">dev</span></div></pre></td></tr></table></figure></p><p>实际上只需要前面两行命令即可<br>然后在opencv目录下新建一个临时目录 mkdir release<br>然后进入临时目录<br><figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cd release</div><div class="line">cmake -D /usr/<span class="keyword">local</span> ..</div><div class="line"><span class="built_in">make</span></div><div class="line">sudo <span class="built_in">make</span> install</div></pre></td></tr></table></figure></p><p>此后还有一步需要注意 如果直接编译运行文件 会提示找不到so文件<br>所以需要添加一个路径链接：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/ld<span class="selector-class">.so</span><span class="selector-class">.conf</span></div></pre></td></tr></table></figure></p><p>然后在其中加上一行：<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/local/<span class="class"><span class="keyword">lib</span></span></div></pre></td></tr></table></figure></p><p>因为库文件都在这个lib文件夹中<br>现在ok<br>进入opencv目录下的sample文件夹下，继续进入：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd ~<span class="regexp">/opencv-2.4.13/</span>samples<span class="regexp">/c/</span></div></pre></td></tr></table></figure></p><p>然后编译;<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">./build_all.sh</span></div></pre></td></tr></table></figure></p><p>最后跑个示例demo就知道可不可以用了：<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">./find_obj</span></div></pre></td></tr></table></figure></p><p>如图所示：</p><p><img src="http://img.blog.csdn.net/20160724220944826?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20160724221106420?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>ok～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ubuntu下opencv的配置过程：
    
    </summary>
    
      <category term="Linux" scheme="http://newdee.cf/categories/Linux/"/>
    
    
      <category term="ubuntu" scheme="http://newdee.cf/tags/ubuntu/"/>
    
      <category term="linux" scheme="http://newdee.cf/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>三维建模中shape of silhouette 的简要理解</title>
    <link href="http://newdee.cf/posts/dfc9d3fd/"/>
    <id>http://newdee.cf/posts/dfc9d3fd/</id>
    <published>2016-07-21T11:54:58.000Z</published>
    <updated>2017-10-13T05:30:03.733Z</updated>
    
    <content type="html"><![CDATA[<p>举例</p><p>一篇文章：shape silhouette fusion for image-based modeling<br><a id="more"></a><br>文章作者Peng Song et al.[2010]</p><h3 id="文章基本思想"><a href="#文章基本思想" class="headerlink" title="文章基本思想"></a>文章基本思想</h3><p>是由一些已标定图像得到其stereo和silhouette的信息（silhouette信息也是由stereo得到），然后融合两种有向点云 利用泊松表面重建算法（PSR）将有向点云转变成一个完整且精确地三角形网;模型(complete，accurate)<br>微软的高质量fvv的论文使用其中方法<br>[High-Quality Streamable Free-Viewpoint Video，2015]</p><h4 id="主要用于产生silhouette的深度图方面："><a href="#主要用于产生silhouette的深度图方面：" class="headerlink" title="主要用于产生silhouette的深度图方面："></a>主要用于产生silhouette的深度图方面：</h4><ol><li>产生visual hull 的八叉树</li><li>Mesh 八叉树 （方法：Marching Cubes）</li><li>Project the mesh into<img src="http://img.blog.csdn.net/20160721195448493" alt=""> with Z-buffered rasterization.</li></ol><h4 id="Peng-Song文中所述基本步骤"><a href="#Peng-Song文中所述基本步骤" class="headerlink" title="Peng Song文中所述基本步骤:"></a>Peng Song文中所述基本步骤:</h4><ol><li><p>计算一个visual hull</p></li><li><p>深度图估计 基于扩张的方法（expansion-based）返回一个3D点云（包含outliers以及冗余信息）；剔除outlier，降低scale，估计深度图的表面法向量，生成一个有向点云（来自stereo）</p></li><li><p>利用这个点云（来自stereo），雕刻其visual hull的八叉树结构，得到另一个有向点云（来自silhouette）；merge两种点云，利用泊松表面重建PSR算法将来自stereo和silhouette的有向点云转变成一个完整且精确的三角网;模型。</p></li></ol><h4 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤:"></a>详细步骤:</h4><h5 id="Visual-hull-及计算方法"><a href="#Visual-hull-及计算方法" class="headerlink" title="Visual hull 及计算方法"></a>Visual hull 及计算方法</h5><h6 id="计算一个3D边框（3D-bounding-box）"><a href="#计算一个3D边框（3D-bounding-box）" class="headerlink" title="计算一个3D边框（3D bounding box）"></a>计算一个3D边框（3D bounding box）</h6><p>从一组silhouette和投影矩阵计算3D边框，可以考虑计算每个silhouette的2D边框，并后向投影得到。物体的边框可以由一个优化算法计算[Song, P. 2009]（6个变量定义了一个bounding box，分别是x, y, z的最大;和最小;）</p><h6 id="Visual-hull八叉树的建立"><a href="#Visual-hull八叉树的建立" class="headerlink" title="Visual hull八叉树的建立"></a>Visual hull八叉树的建立</h6><p>开始于一个体素（voxel），即上一步中的3D边框。然后将voxel分为3类：</p><ol><li><p>处于visual hull内；</p></li><li><p>在visual hull边界上；</p></li><li><p>在visual hull外部。</p></li></ol><p>只有内部和边界的voxel才能细分，直到达到最大细分层数。</p><h6 id="判断一个voxel类型的基本方法："><a href="#判断一个voxel类型的基本方法：" class="headerlink" title="判断一个voxel类型的基本方法："></a>判断一个voxel类型的基本方法：</h6><p>使用gift wrapping算法（Jarvis, R.A.1973）计算voxel的8个顶点的投影的凸壳（convex hull），一旦在每张silhouette图上的精确投影计算完成，然后通过确定voxel的投影与所有silhouette的相对位置来判断voxel的类型。（Since the projection of the voxel is a convex polygon, our approach evaluates the relative<br>position of the projection to the silhouette by a scan processor that tracks only the right and the left edges from the top to the bottom of the projection.）。</p><p>判断方法：</p><ol><li><p>如果多边形内所有像素都在目标区域内部，则多边形在silhouette内部；</p></li><li><p>如果多边形内所有像素都在目标区域外部，则多边形在silhouette外部；</p></li><li><p>其他情况，多边形与silhouette相交。</p></li></ol><p>于是提出了一个projection test算法判断：</p><p><img src="http://img.blog.csdn.net/20160721195449118" alt=""></p><p>其中，等;函数isosurface function表示3D点到visual hull表面的3D距离，关系：负<span style="font-family:等线">→内，正→外。</span></p><p>该projection test算法利用voxel的8个顶点的isofunction的;来降低计算量:当8个顶点中的一部分在visual hull外部，则无必要将voxel投影到所有的silhouette image上去即已知其类型。</p><p><img src="http://img.blog.csdn.net/20160721195449540" alt=""></p><h6 id="Visual-hull-mesh的提取"><a href="#Visual-hull-mesh的提取" class="headerlink" title="Visual hull mesh的提取"></a>Visual hull mesh的提取</h6><p>方法：Marching Cubes算法。</p><p><img src="http://img.blog.csdn.net/20160721195450118" alt=""></p><p>至此，生成的visual hull 将有两个作用：</p><ol><li><p>从multi-view stereo生成深度图</p></li><li><p>通过PCST（stereo点云）雕刻该visual hull 八叉树生成PCSL（silhouette点云）</p></li></ol><p>在微软文中所述到marching cubes一步之后，用显卡渲染直接得到深度。</p><p>接下来介绍Song的其余部分:</p><h6 id="Shape信息（有向点云，来自stereo）"><a href="#Shape信息（有向点云，来自stereo）" class="headerlink" title="Shape信息（有向点云，来自stereo）"></a>Shape信息（有向点云，来自stereo）</h6><ol><li>深度图估计（基于扩张方法）</li></ol><p>首先将每张图片划分成许多小窗口，固定大小M*M</p><ol><li><p>使用贪婪方法（greedy approach）计算窗中心像素的深度;<br>如果发现一个深度;，其置信度高于一个门槛thres2，则将该深度;作为这个窗口的参考深度。</p></li><li><p>对一幅图的所有参考深度;使用median-rejection方法排除明显的outliers。<br>由于选择的深度;都是置信度比较高的，因此很多窗口可能没有参考深度;，特别是一些没有或者很少纹理的表面。</p></li><li>对于无参考深度;的窗口，由其相邻3*3的窗口计算其参考深度。<br>通常如果该窗口的相邻窗口数多于一个固定的数a（这里取得a=4），则用其相邻窗口的深度;计算其深度（中;）。该过程对所有的窗口迭代5次。</li></ol><p>可以看到这一步之后点云明显稠密一些。</p><ol><li>对扩展窗中的每个像素，从深度间隔（由参考深度定义）中以一个固定的长度d搜索其深度;（search the depth values for all the pixels in the window from a depth interval with fixed length d centered at the reference depth along the optical ray）</li></ol><p>扩展窗大小M*M取决于输入图像序列的分辨率，thres2仅取决于纹理状况。D取决于重建物体和扩展窗的大小，通常在重建物体大小的1%到2%。</p><p>融合这些深度图，得到一个点云。对每个点云中的3D点，其置信度和视点方向均被存储。</p><p>具体算法过程如下：</p><p><img src="http://img.blog.csdn.net/20160721195451071" alt=""></p><p><img src="http://img.blog.csdn.net/20160721195451618" alt=""><img src="http://img.blog.csdn.net/20160721195452118" alt=""></p><h6 id="点云的cleaning和downsampling"><a href="#点云的cleaning和downsampling" class="headerlink" title="点云的cleaning和downsampling"></a>点云的cleaning和downsampling</h6><p>Cleaning过程：</p><ol><li><p>合并重建目标的visual hull，作为一个约束，来剔除out of visual hull的3D点。</p></li><li><p>从估计的点云中建立一个表决树，选择一个门槛thres3去排除不相关点。</p></li></ol><p>对每个voxel，计算该voxel中的individual correlation scores之和，与门槛分数比较。</p><p>下采样过程：</p><p>主要是在每个voxel中提取置信度最高的一个点，达到下采样的目的。</p><p><img src="http://img.blog.csdn.net/20160721195452384" alt=""></p><ol><li>表面法向估计</li></ol><p>利用主成分分析PCA</p><p>选择两个参数定义一个给定点的领域，一个固定的半径R和点数目N，使用一个KD-Tree 有效计算k紧邻问题。</p><p>确定表面法向：</p><p>通过该点的视点方向<img src="http://img.blog.csdn.net/20160721195452790" alt=""> 和表面法向<img src="http://img.blog.csdn.net/20160721195453056" alt=""> 的点积<img src="http://img.blog.csdn.net/20160721195453431" alt=""><br>进行选择：<img src="http://img.blog.csdn.net/20160721195453618" alt="">大于0，则表面法向的方向与<img src="http://img.blog.csdn.net/20160721195453978" alt="">相同；小于0 ，相反。</p><p><img src="http://img.blog.csdn.net/20160721195454212" alt=""></p><p>输出为一个有向点云：PCST。</p><p>使用PSR，问题：无纹理或者纹理很少的区域、非连接区域难以恢复。</p><p><img src="http://img.blog.csdn.net/20160721195454649" alt=""></p><p>Volumetric stereo and silhouette fusion</p><p>生成另一个visual hull上的有向点云，表示为PCSL。</p><p>方法：将visual hull 八叉树结构的voxel，根据其相对于PCST的点的相对位置分成三类：</p><p>Type 1：该voxel包含一个或者一些PCST中的3D点</p><p>Type 2：该voxel位于PCST中的3D点和该点的参考图的光心的连线上</p><p>Type 3：所有剩余的voxel。事实上，大部分都是纹理很少的区域或闭塞表面区域。如下图所示（figrue9. a）在这些剩余的voxel中，提取visual mesh的顶点和法向来重建PCSL（figrue9. b）。</p><p><img src="http://img.blog.csdn.net/20160721195454900" alt=""></p><p>计算方法如下图所示：</p><p><img src="http://img.blog.csdn.net/20160721195455306" alt=""></p><p>联合来自stereo和silhouette的形状信息（通过融合PCSL和PCST两种点云），用PSR方法转变成一个三角网;模型。</p><p>在PCSL计算好后，加到PCST上，生成一个更完整的点云，表示为PCSTSL。再用PSR算法，将有向PCSTSL转化为一个三角网;模型。如下图所示</p><p><img src="http://img.blog.csdn.net/20160721195455790" alt=""></p><p><img src="http://img.blog.csdn.net/20160721195456181" alt=""></p><p>[附]关于文中greedy approach：</p><p>输入：一个已标定图像序列<img src="http://img.blog.csdn.net/20160721195456556" alt="">和目标的visual hull</p><p>对每个image<img src="http://img.blog.csdn.net/20160721195456962" alt="">，选择其k个相邻视点使用鲁棒的窗口匹配关联<img src="http://img.blog.csdn.net/20160721195457696" alt="">。</p><p>对<img src="http://img.blog.csdn.net/20160721195458056" alt="">中的每个像素p，从该物体的visual hull计算一个深度间隔（depth interval），即visual hull内p的后向投影（back-projected）光线</p><p>重投影该深度间隔到已选择的相邻视点，计算一个m*m的窗口（中心为p）与不同图像上的窗口（中心为p的投影）标准互相关;NCC（normalized cross-correlation），</p><p>对于一个给定的深度间隔，其与在不同image上的投影相关，由极线约束（epipolar constraint），这样不同视点的所有相关曲线都可以关联到一个单独的坐标系统中。</p><p>一旦相关曲线被计算出来，则最优深度从中选择：在k个紧邻视点中，对于至少两个视点，其NCC;高于一些门槛。</p><p>注意：对<img src="http://img.blog.csdn.net/20160721195458259" alt="">中的每个像素p，最优候选深度从最大化NCC;的深度;中选择。若未发现有效深度，则无最优候选深度（none）。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;举例&lt;/p&gt;
&lt;p&gt;一篇文章：shape silhouette fusion for image-based modeling&lt;br&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://newdee.cf/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="三维重建" scheme="http://newdee.cf/tags/%E4%B8%89%E7%BB%B4%E9%87%8D%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript学习笔记（一）</title>
    <link href="http://newdee.cf/posts/5f7ed589/"/>
    <id>http://newdee.cf/posts/5f7ed589/</id>
    <published>2016-03-20T12:58:22.000Z</published>
    <updated>2017-09-29T13:12:50.928Z</updated>
    
    <content type="html"><![CDATA[<p><span style="white-space:pre"></span><span style="white-space:pre"></span>初学JavaScript，不过之前已经学过很多语言了。刚看JavaScript的时候，感觉很多内容其实和python挺像的，只不过这里初始化时没有要求变量类型。没错，java和JavaScript的区别就是雷锋和雷峰塔的区别。感觉对于编程来说，时间长了，太容易自己为是了。以致于一个很简单的小问题最后可以烦死你，还死活看不出来。所以开始记下笔记，记下容易出错或者一些平时不大注意的细节，以后温故时候，也挺舒服的。<br><a id="more"></a><br><span style="white-space:pre"></span><strong><span style="white-space:pre"></span>大小写区别：</strong></p><p><span style="font-weight:bold; white-space:pre"></span><span style="white-space:pre"></span>JavaScript区分大小写，而HTML并不区分大小写（尽管XHTML区分大小写）。</p><p><span style="white-space:pre"></span><strong><span style="white-space:pre"></span>关于换行：</strong></p><p><span style="font-weight:bold; white-space:pre"></span><span style="white-space:pre"></span>在JavaScript中，如果各语句独占一行，通常可以省略语句之间的分号（程序结尾或者右花括号之前的分号也可以省略）。但在return、break和continue和随后的表达式直接不能有换行。如果添加了换行，程序只有在极特殊的情况下才会报错，而且程序的调试非常不方便。</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>例如：</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>return</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>true；</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>JavaScript会解析成（本意是return true；）</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>return；</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>true；</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>还有一个例外是涉及&#43;&#43;和- -的时候，如果将其用作后缀表达式，它和表达式应当在同一行。否则，行尾将填补分号。</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>例如：</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>x</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>&#43;&#43;</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>y<span style="white-space:pre"><br></span></p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>解析成“x； &#43;&#43;y”</p><p><span style="white-space:pre"></span><strong><span style="white-space:pre"></span>关于数字：</strong></p><p><span style="font-weight:bold; white-space:pre"></span><span style="white-space:pre"></span>JavaScript中的非数字&#20540;有一点特殊：它和任何&#20540;都不相等，包括自身。因此，不能通过x==NaN来判断变量x是否是NaN，只能使用x!=x来判断：当且仅当x为NaN的时候，表达式的结果才是true。</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>JavaScript中的数字具有极高的精度，并可以极其近&#20284;于0.1。但是，数字不能精确的表述的确带来了一些问题。</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>例如：</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>var x = .3 -.2;</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>var y = .2 - .1 ;</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>x == y //false：两&#20540;不相等！</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>由于舍入误差，0.3和0.2之间的近&#20284;差&#20540;实际上并不等于0.2和0.1之间的近&#20284;差&#20540;。这个问题并不只在JavaScript中出现，理解这一点非常重要：在任何使用二进制浮点数的编程语言中都会有这个问题。</p><p><span style="white-space:pre"></span><strong><span style="white-space:pre"></span>关于文本：</strong></p><p><span style="font-weight:bold; white-space:pre"></span><span style="white-space:pre"></span>空字符串长度为0，JavaScript中并没有表示单个字符的“字符型”。</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>一个长度为2的JavaScript字符串（两个16位&#20540;）有可能表示一个Unicode字符：</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>var p = &quot;π&quot; ; // π由16内码表示0x03c0</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>var e = &quot;e&quot; ; //e由17位内码表示0x1d452</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>p.length<span style="white-space:pre"><br></span>// 1</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>e.length<span style="white-space:pre"><br></span>// 2</p><p><span style="white-space:pre"></span><strong><span style="white-space:pre"></span>包装对象：</strong></p><p><span style="font-weight:bold; white-space:pre"></span><span style="white-space:pre"></span>存取字符串、数字或布尔&#20540;的属性时创建的临时对象称作包装对象，它只是偶尔用来区分字符串&#20540;和字符串对象、数字和数&#20540;对象以及布尔&#20540;和布尔对象。</p><p><span style="white-space:pre"></span><strong><span style="white-space:pre"></span>关于对象：</strong></p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>对象的比较并非&#20540;的比较：即使两个包含同样的属性及相同的&#20540;，它们也是不相等的。各个索引元素完全相等的两个数组也不相等。</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>例如：</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>var o = {x:1}, p={x:1};</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>o === p<span style="white-space:pre"><br></span>// false</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>var a =[], b = [];</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>a ===b<span style="white-space:pre"><br></span>//false</p><p><span style="white-space:pre"></span><span style="white-space:pre"></span>对象&#20540;都是引用，对象的比较均是引用的比较：当且仅当它们引用同一个基对象时，他们才相等。</p><p><span style="white-space:pre"></span><strong><span style="white-space:pre"></span>关于类型转换：</strong></p><p><span style="white-space:pre"></span>除了null和undefined之外的任何&#20540;都具有toString()方法，这个方法的挤过通常和String()方法的返回结果一致。</p><p><span style="white-space:pre"></span>几个类型转换的惯用法：</p><p><span style="white-space:pre"></span>x &#43; &quot;&quot;<span style="white-space:pre"> </span><br>//<span style="white-space:pre"> </span>等价于String(x)</p><p><span style="white-space:pre"></span>&#43;x<span style="white-space:pre"> </span>//<span style="white-space:pre"><br></span>等价于Number(x)，也可以写成x-0</p><p><span style="white-space:pre"></span>！！x<span style="white-space:pre"> </span><br>//<span style="white-space:pre"> </span>等价于Boolean(x)</p><p><span style="white-space:pre"></span>toFixed()根据小数点后的指定位数将数字转换为字符串，从不使用指数记数法。</p><p><span style="white-space:pre"></span>toExponential()使用指数记数法将数字转换为指数形式的字符串，其中小数点前只有一位，小数点后的位数则有参数指定。</p><p><span style="white-space:pre"></span>toPrecision()根据指定的有效数字位数将数字转换为字符串。如果有效数字的位数少于数字整数部分的位数，则转换为指数形式。</p><p><span style="white-space:pre"></span>如果用Number()转换函数传入一个字符串，它会视图将其转换为一个整数或浮点数直接量，这个方法只能基于十进制数进行转换，并且不能出现非法的尾随字符。</p><p><span style="white-space:pre"></span>parseInt()函数只解析整数，而parseFloat()则可以解析整数和浮点数。如果字符串前缀是“0x”或者“0X”，parseInt()将其解释为十六进制数，parseInt和parseFloat()都会跳过任意数量的前导空&#26684;，尽可能解释更多字符，并忽略后面的内容。如果第一个非空&#26684;字符是非法数字直接量，将最终返回NaN。</p><p><span style="white-space:pre"></span>parseInt()可以接受第二个可选参数，这个参数指定数字转换的基数，合法的取&#20540;范围是2~36.</p><p><span style="white-space:pre"></span>对象转换为原始&#20540;：所有的对象(包括数组和函数)都转换为true。</p><p><span style="white-space:pre"></span><strong>关于变量作用域：</strong></p><p><span style="white-space:pre"></span>在函数体内，局部变量的优先级高于同名的全局变量。</p><p><span style="white-space:pre"></span>尽管在全局作用域编写代码时可以不写var语句，但声明局部变量时必须使用var语句。</p><p><span style="white-space:pre"></span><strong>关于函数作用域和声明提前：</strong></p><p><span style="font-weight:bold; white-space:pre"></span>JavaScript中没有块级作用域，取而代之的使用了函数作用域：变量在声明它们的函数体以及这个函数体嵌套的任意函数内都是有定义的。这意味着变量在声明之前甚至已经可用。JavaScript的这个特性被非正式的称为声明提前，即JavaScript函数里声明的所有变量(但不涉及赋&#20540;)都被“提前”至函数体的顶部。</p><p><span style="white-space:pre"></span><strong>关于作为属性的变量：</strong></p><p><span style="white-space:pre"></span>使用var声明一个变量时，创建的这个属性时不可配置的，也就是说无法通过delete运算符删除。如果没有使用严&#26684;模式并给一个未声明的变量赋&#20540;的话，JavaScript会自动创建一个全局变量。以这种方式创建的变量是全局对象的正常可配置属性，并可以删除它们。</p><p><span style="white-space:pre"></span><strong>关于作用域链：</strong></p><p><span style="white-space:pre"></span>在不包含嵌套的函数体内，作用域链上有两个对象，第一个是定义函数函数和局部变量的对象，第二个是全局对象。在一个嵌套的函数体内，作用域链上至少有三个对象。</p><p><span style="white-space:pre"></span><strong>关于原始表达式:</strong></p><p><span style="white-space:pre"></span>在一个方法体内，this返回调用这个方法的对象。</p><p><span style="white-space:pre"></span><strong>关于属性访问表达式：</strong></p><p><span style="white-space:pre"></span>两种：</p><p><span style="white-space:pre"></span>expression . identifier</p><p><span style="white-space:pre"></span>expression [ expression ]</p><p><span style="white-space:pre"></span>.identifier的写法更加简单，但是这种方式只适用于要访问的属性名称是合法的标识符，并且需要知道访问的属性的名字。</p><p><span style="white-space:pre"></span><strong>关于方法调用：</strong></p><p><span style="white-space:pre"></span>执行函数体的时候，作为属性访问主题的对象和数组便是其调用方法内this的指向。</p><p><span style="white-space:pre"></span><strong>关于对象创建表达式：</strong></p><p><span style="white-space:pre"></span>如果一个对象创建表达式不需要传入任何参数给构造函数的话，那么这对空圆括号是可以省略掉的。</p><p><span style="white-space:pre"></span><strong>关于左&#20540;：</strong></p><p><span style="white-space:pre"></span>在JavaScript中，变量、对象属性和数组元素均是左&#20540;。ECMAScript规范允许内置函数返回一个左&#20540;，但自定义的函数则不能返回左&#20540;。</p><p><span style="white-space:pre"></span><strong>关于算术表达式：</strong></p><p><span style="white-space:pre"></span>一个很容易忽略的现象：</p><p><span style="white-space:pre"></span>假设存在a=1，那么“b=(a&#43;&#43;)&#43;a”将如何计算结果呢？</p><p><span style="white-space:pre"></span>正确顺序：</p><p><span style="white-space:pre"></span>(1)计算b</p><p><span style="white-space:pre"></span>(2)计算a&#43;&#43;（假设&#20540;为c）</p><p><span style="white-space:pre"></span>(3)计算a</p><p><span style="white-space:pre"></span>(4)计算c&#43;a</p><p><span style="white-space:pre"></span>(5)将c&#43;a的结果赋&#20540;给b</p><p><span style="white-space:pre"></span>按照“&#43;&#43;”的含义，第二步中a&#43;&#43;的结果依然是1，即c为1，随后a立即增1，因此在执行第三步时，a的&#20540;已经是2.所以b的结果为3.</p><p><span style="white-space:pre"></span>求余运算符的操作数通常是整数，但也适用于浮点数，比如6.5%2.1结果是0.2</p><p><strong><span style="white-space:pre"></span>关于比较：</strong></p><p><span style="white-space:pre"></span>对于数字和字符串操作符来说，加号运算符和比较运算符的行为都有所不同，前者更偏爱字符串，如果它的其中一个操作数是字符串的话毛泽进行字符串连接操作。而比较运算符更偏爱数字，只有在两个操作数都是字符串的时候，才会进行字符串的比较。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;span style=&quot;white-space:pre&quot;&gt;&lt;/span&gt;&lt;span style=&quot;white-space:pre&quot;&gt;&lt;/span&gt;初学JavaScript，不过之前已经学过很多语言了。刚看JavaScript的时候，感觉很多内容其实和python挺像的，只不过这里初始化时没有要求变量类型。没错，java和JavaScript的区别就是雷锋和雷峰塔的区别。感觉对于编程来说，时间长了，太容易自己为是了。以致于一个很简单的小问题最后可以烦死你，还死活看不出来。所以开始记下笔记，记下容易出错或者一些平时不大注意的细节，以后温故时候，也挺舒服的。&lt;br&gt;
    
    </summary>
    
      <category term="笔记" scheme="http://newdee.cf/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JavaScript" scheme="http://newdee.cf/tags/JavaScript/"/>
    
      <category term="前端" scheme="http://newdee.cf/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop搭建之WordCount程序</title>
    <link href="http://newdee.cf/posts/bfb99b1f/"/>
    <id>http://newdee.cf/posts/bfb99b1f/</id>
    <published>2016-03-13T05:04:29.000Z</published>
    <updated>2017-10-29T05:48:41.045Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hadoop环境需要"><a href="#Hadoop环境需要" class="headerlink" title="Hadoop环境需要"></a>Hadoop环境需要</h1><p>实验一中已经搭好了hadoop，部署模式是完全分布式，一个namenode，三个datanode。之前已经用JPS查看进程，已经搭好，现在再检查下是否搭建成功：<br><a id="more"></a><br>在浏览器中输入ma:50070，可以查看详细情况：</p><p><img src="http://img.blog.csdn.net/20160313130426569" alt=""></p><p><img src="http://img.blog.csdn.net/20160313130430257" alt=""><img src="http://img.blog.csdn.net/20160313130433647" alt=""></p><p><img src="http://img.blog.csdn.net/20160313130436445" alt=""></p><p>图中显示3个livenodes，说明三个datanode正常启动。</p><p>输入<code>ma:50090</code>可以查看辅助名称节点，不过这里没有配置。</p><p><img src="http://img.blog.csdn.net/20160313130441414" alt=""></p><p>输入<code>ma:8088</code>可以查看集群工作状况：</p><p><img src="http://img.blog.csdn.net/20160313130446476" alt=""></p><p><img src="http://img.blog.csdn.net/20160313130450929" alt=""></p><p>至此，hadoop环境一切正常，然后进行下一步的Wordcount实例，也是hadoop里的“Hello World”</p><h1 id="在本机上新建一个文件夹-input"><a href="#在本机上新建一个文件夹-input" class="headerlink" title="在本机上新建一个文件夹/input"></a>在本机上新建一个文件夹/input</h1><p>简单命令<code>sudo mkdir ~/input</code></p><p>然后新建一个文件 <code>sudo touch~/input/Di_Liu.txt</code></p><p>添加以下内容到文本中：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">------------------------------------------------------------</span></div><div class="line"></div><div class="line">DiLiu</div><div class="line"></div><div class="line">Newdee</div><div class="line"></div><div class="line">HelloWorld</div><div class="line"></div><div class="line">HelloHadoop</div><div class="line"></div><div class="line"><span class="comment">------------------------------------------------------------</span></div><div class="line"></div><div class="line">Yousay you love rain,</div><div class="line"></div><div class="line">butyou use <span class="keyword">an</span> umbrella <span class="built_in">to</span> walk under <span class="keyword">it</span>.</div><div class="line"></div><div class="line">Yousay you love sun,</div><div class="line"></div><div class="line">butyou <span class="built_in">seek</span> shade when <span class="keyword">it</span> is shining.</div><div class="line"></div><div class="line">Yousay you love wind,</div><div class="line"></div><div class="line">butwhen <span class="keyword">it</span> comes you <span class="built_in">close</span> your window.</div><div class="line"></div><div class="line">Sothat<span class="string">'s why I'</span>m scared when you say you love me</div><div class="line"></div><div class="line"><span class="comment">------------------------------------------------------------</span></div></pre></td></tr></table></figure></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo gedit ~<span class="regexp">/input/</span>Di_liu.txt</div></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20160313130455289" alt=""></p><h1 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h1><p>先在集群上新建一个input文件夹<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hadoop <span class="built_in">fs</span> –<span class="built_in">mkdir</span> /input</div></pre></td></tr></table></figure></p><p>现在可以再ma:50070上看到已经创建的文件夹，刷新即可。</p><p><img src="http://img.blog.csdn.net/20160313130459351" alt=""></p><p>将本地文件上传至云端<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hadoop fs –<span class="keyword">put</span> ~/.<span class="built_in">input</span>/Di_liu.txt/<span class="built_in">input</span></div></pre></td></tr></table></figure></p><p><img src="http://img.blog.csdn.net/20160313130504663" alt=""></p><p>在网页上再次刷新，即可看到上传的文档</p><p><img src="http://img.blog.csdn.net/20160313130508711" alt=""></p><h1 id="启动Wordcount"><a href="#启动Wordcount" class="headerlink" title="启动Wordcount"></a>启动Wordcount</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hadoopjar <span class="regexp">/usr/</span>soft<span class="regexp">/hadoop-2.7.1/</span>share<span class="regexp">/hadoop/m</span>apreduce<span class="regexp">/hadoop-mapreduce-examples-2.7.1.jarwordcount /i</span>nput <span class="regexp">/output</span></div></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20160313130512804" alt=""></p><p><img src="http://img.blog.csdn.net/20160313130517226" alt=""></p><p><img src="http://img.blog.csdn.net/20160313130522836" alt=""></p><h1 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h1><p>运行完成后。再次刷新网页。可以发现多了两个文件夹</p><p><img src="http://img.blog.csdn.net/20160313130527195" alt=""></p><p>进入/output目录下，查看单词计数的结果：</p><p><img src="http://img.blog.csdn.net/20160313130531429" alt=""></p><p>点击part-r-00000，下载，打开即可。</p><p><img src="http://img.blog.csdn.net/20160313130536196" alt=""></p><p>至此，单词计数程序已经完成。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hadoop环境需要&quot;&gt;&lt;a href=&quot;#Hadoop环境需要&quot; class=&quot;headerlink&quot; title=&quot;Hadoop环境需要&quot;&gt;&lt;/a&gt;Hadoop环境需要&lt;/h1&gt;&lt;p&gt;实验一中已经搭好了hadoop，部署模式是完全分布式，一个namenode，三个datanode。之前已经用JPS查看进程，已经搭好，现在再检查下是否搭建成功：&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://newdee.cf/categories/Linux/"/>
    
    
      <category term="hadoop" scheme="http://newdee.cf/tags/hadoop/"/>
    
      <category term="大数据" scheme="http://newdee.cf/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
</feed>
